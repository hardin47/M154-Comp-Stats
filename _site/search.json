[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Schedule",
    "section": "",
    "text": "Here’s your roadmap for the semester! Each week, follow the general process outlined below:\n\nEnjoy the readings \nAttend class, review slides  for anything you missed on the agenda\nComplete the assignment (see Sakai messages for HW link)\nDiscuss the reflection questions  and ethics considerations  with your classmates, mentor, and professor\nHomework assignments are found at the GitHub course organization. Due dates are provided on each assignment (roughly every other week). See the course GitHub page for more information on how to find, complete, and submit assignments.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate\ntopic\ndue dates\n\n\n\n\n8.26.24\nstarting with R + RStudio + Git\n\n\n\n9.2.24\ndata viz\n HW 1 - due 9.3\n\n\n9.9.24\nwrangling\n HW 2 - due 9.10  Quiz 9.11\n\n\n9.16.24\nwrangling\n HW 3 - due 9.17\n\n\n9.23.24\nsimulating\n HW 4 - due 9.24  Quiz 9.25\n\n\n9.30.24\npermutation tests\n HW 5 - due 10.1\n\n\n10.7.24\nbootstrapping\n HW 6 - due 10.8  Quiz 10.9\n\n\n10.14.24\nrecipes\n\n\n\n10.16.24\nInitial Project Proposal due\n\n\n\n10.21.24\nknn + trees\n HW 7 - due 10.22  Quiz 10.23\n\n\n10.28.24\nbagging + RF\n HW 8 - due 10.29\n\n\n10.30.24\nFinal Project Proposal due\n\n\n\n11.4.24\nsupport vector machines\n HW 9 - due 11.5  Quiz 11.6\n\n\n11.11.24\nclustering\n HW 10 - due 11.12\n\n\n11.13.24\nProject Update\n\n\n\n11.18.24\nclustering\n HW 11 - due 11.19  Quiz 11.20\n\n\n11.25.24\nLatent Dirichlet allocation\n\n\n\n12.2.24\nData-ing in the World\n\n\n\n12.2.24\nfantastic extensions\n\n\n\n12.6 + 12.24\nGroup Presentations\n\n\n\n12.12.24\nFinal write-up\n\n\n\n\n\n\n\n\n\n\n:::\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "daily.html",
    "href": "daily.html",
    "title": "Computational Statistics",
    "section": "",
    "text": ":::\n\n\n\n\n\n\n\n\n\n\n\n\n\n1. Start with R + Git\n\n\n\n\n\nThe importance of reproducibility. Ideas of computational statistics, data science, and machine learning. Some resources for starting with R + RStudio + Git + GitHub. \n\n\n\n\n\nAug 26, 2024\n\n\nJo Hardin\n\n\n\n\n\n\n\n\n\n\n\n\n2. Data Viz\n\n\n\n\n\nExamples, good and bad. Theory underlying what makes a viz good and bad. Tools to implement viz tasks. \n\n\n\n\n\nSep 4, 2024\n\n\nJo Hardin\n\n\n\n\n\n\n\n\n\n\n\n\n3. Wrangling\n\n\n\n\n\nData wrangling skills are among the most important to hone. \n\n\n\n\n\nSep 9, 2024\n\n\nJo Hardin\n\n\n\n\n\n\nNo matching items\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html",
    "href": "posts/2024-08-26-getting-started/getting-started.html",
    "title": "1. Start with R + Git",
    "section": "",
    "text": "Artwork by @allison_horst."
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html#agenda",
    "href": "posts/2024-08-26-getting-started/getting-started.html#agenda",
    "title": "1. Start with R + Git",
    "section": "Agenda ",
    "text": "Agenda \n\nAugust 26, 2024\n\nSyllabus & Course Outline\nStitch Fix Algorithm\nCan Twitter predict election results?\n\nBefore Wednesday, listen to the full conversation of Not So Standard Deviations - Compromised Shoe Situation.\n\n\nAugust 28, 2024\n\nReproducibility & GitHub\nDesign Challenge (Not So Standard Deviations)\n\nBefore next Thursday, read: Tufte. 1997. Visual and Statistical Thinking: Displays of Evidence for Making Decisions. (Use Google to find it.)"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html#readings",
    "href": "posts/2024-08-26-getting-started/getting-started.html#readings",
    "title": "1. Start with R + Git",
    "section": "Readings ",
    "text": "Readings \n\nThe syllabus\nModern Data Science with R Prologue\nClass notes: Introduction\nWhy Git? + monsters"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html#reflection-questions",
    "href": "posts/2024-08-26-getting-started/getting-started.html#reflection-questions",
    "title": "1. Start with R + Git",
    "section": "Reflection questions ",
    "text": "Reflection questions \n\nWhat can statistics & data science do? How do they do that?\nWhat can’t statistics & data science do? Why not?\nWhat choices were made to collect the Twitter data?\nWhat choices were made to model the Twitter data?\nWhat are the advantages and disadvantages of high touch versus low touch data?"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html#ethics-considerations",
    "href": "posts/2024-08-26-getting-started/getting-started.html#ethics-considerations",
    "title": "1. Start with R + Git",
    "section": "Ethics considerations ",
    "text": "Ethics considerations \n\nWhy is it problematic if the analysis isn’t reproducible?\nIs every analysis worth doing? (e.g., time to get to work, predicting presidential results, etc.). Can the act of doing the analysis be ethically questionable?"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html#slides",
    "href": "posts/2024-08-26-getting-started/getting-started.html#slides",
    "title": "1. Start with R + Git",
    "section": "Slides ",
    "text": "Slides \n\nIn class slides for both 8/26/24 and 8/28/24.\nWS1 - Twitter\nWU2 - working with R"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/getting-started.html#additional-resources",
    "href": "posts/2024-08-26-getting-started/getting-started.html#additional-resources",
    "title": "1. Start with R + Git",
    "section": "Additional Resources ",
    "text": "Additional Resources \n\nGreat algorithm for the whole process\nDesign Challenge (Not So Standard Deviations), listen to the full conversation.\nVideo (less than 2 min) on the strengths of reproducible research\nR vs. Python? (My personal opinion is that neither of the languages is “best”.)\n2017 Kaggle user survey and  2019 Stack Overflow Developer Survey\nPNAS paper retracted due to problems with figure and reproducibility (April 2016)\nAnalysis of Trump’s tweets with evidence that someone else tweets from his account using an iPhone part 1 and part 2 \n\n\n:::"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html",
    "href": "posts/2024-08-26-getting-started/index.html",
    "title": "1. Start with R + Git",
    "section": "",
    "text": "Artwork by @allison_horst."
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html#agenda",
    "href": "posts/2024-08-26-getting-started/index.html#agenda",
    "title": "1. Start with R + Git",
    "section": "Agenda ",
    "text": "Agenda \n\nAugust 26, 2024\n\nSyllabus & Course Outline\nStitch Fix Algorithm\nCan Twitter predict election results?\n\nBefore Wednesday, listen to the full conversation of Not So Standard Deviations - Compromised Shoe Situation.\n\n\nAugust 28, 2024\n\nReproducibility & GitHub\nDesign Challenge (Not So Standard Deviations)\n\nBefore next Thursday, read: Tufte. 1997. Visual and Statistical Thinking: Displays of Evidence for Making Decisions. (Use Google to find it.)"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html#readings",
    "href": "posts/2024-08-26-getting-started/index.html#readings",
    "title": "1. Start with R + Git",
    "section": "Readings ",
    "text": "Readings \n\nThe syllabus\nModern Data Science with R Prologue\nClass notes: Introduction\nWhy Git? + monsters"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html#reflection-questions",
    "href": "posts/2024-08-26-getting-started/index.html#reflection-questions",
    "title": "1. Start with R + Git",
    "section": "Reflection questions ",
    "text": "Reflection questions \n\nWhat can statistics & data science do? How do they do that?\nWhat can’t statistics & data science do? Why not?\nWhat choices were made to collect the Twitter data?\nWhat choices were made to model the Twitter data?\nWhat are the advantages and disadvantages of high touch versus low touch data?"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html#ethics-considerations",
    "href": "posts/2024-08-26-getting-started/index.html#ethics-considerations",
    "title": "1. Start with R + Git",
    "section": "Ethics considerations ",
    "text": "Ethics considerations \n\nWhy is it problematic if the analysis isn’t reproducible?\nIs every analysis worth doing? (e.g., time to get to work, predicting presidential results, etc.). Can the act of doing the analysis be ethically questionable?"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html#slides",
    "href": "posts/2024-08-26-getting-started/index.html#slides",
    "title": "1. Start with R + Git",
    "section": "Slides ",
    "text": "Slides \n\nIn class slides for both 8/26/24 and 8/28/24.\nWS1 - Twitter\nWS2 - working with R"
  },
  {
    "objectID": "posts/2024-08-26-getting-started/index.html#additional-resources",
    "href": "posts/2024-08-26-getting-started/index.html#additional-resources",
    "title": "1. Start with R + Git",
    "section": "Additional Resources ",
    "text": "Additional Resources \n\nGreat algorithm for the whole process\nDesign Challenge (Not So Standard Deviations), listen to the full conversation.\nVideo (less than 2 min) on the strengths of reproducible research\nR vs. Python? (My personal opinion is that neither of the languages is “best”.)\n2017 Kaggle user survey and  2019 Stack Overflow Developer Survey\nPNAS paper retracted due to problems with figure and reproducibility (April 2016)\nAnalysis of Trump’s tweets with evidence that someone else tweets from his account using an iPhone part 1 and part 2 \n\n\n:::"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Jo Hardin 2351 Estella jo.hardin@pomona.edu\nOffice Hours: Mon 2:30-3:30pm, Tues 9-10am & 1:30-2:30pm, Thurs 10am-noon\nMentorless Mentor Sessions:\nMon 8-10pm, Tues 8-10pm\nEstella 2393\nMentor: you don’t have a mentor – work together!!!\n\n\n\n\n\nArtwork by @allison_horst.\n\n\n\n\n\n\n\nComputational Statistics will be an introduction to statistical methods that rely heavily on the use of computers. The course will generally have three parts. The first section will include communicating and working with data in a modern era. This includes data wrangling, data visualization, data ethics, and collaborative research (via GitHub). The second part of the course will focus on traditional statistical inference done through computational methods (e.g., permutation tests and bootstrapping). The last part of the course will focus on machine learning ideas such as classification, clustering, and dimension reduction techniques. Some of the methods were invented before the ubiquitous use of personal computers, but only because the calculus used to solve the problem was relatively straightforward (or because the method wasn’t actually every used). Some of the methods have been developed quite recently.\nAnonymous Feedback As someone who is constantly learning and growing in many ways, I welcome your feedback about the course, the classroom dynamics, or anything else you’d like me to know. There is a link to an anonymous feedback form on the landing page of our Canvas webpage. Please provide me with feedback at any time!\n\n\n\nBy the end of the term, students will be able to:\n\nwork through the entire computational statistics flow chart as a data analyst.\nuse graphical representations of data to communicate ideas about the data.\nidentify, understand, and describe the uses and misuses of algorithms and data collection from an ethical lens with the purpose of preventing harms from data science.\ncritically evaluate analyses / graphics of data (typically big data or dynamic data).\ncommunicate results effectively.\n\n\n\n\n(adapted from Monica Linden, Brown University):\nIn an ideal world, science would be objective. However, much of science is subjective and is historically built on a small subset of privileged voices. In this class, we will make an effort to recognize how science (and statistics!) has played a role in both understanding diversity as well as in promoting systems of power and privilege. I acknowledge that it is possible that there may be both overt and covert biases in the material due to the lens with which it was written, even though the material is primarily of a scientific nature. Integrating a diverse set of experiences is important for a more comprehensive understanding of science. I would like to discuss issues of diversity in statistics as part of the course from time to time.\nPlease contact me if you have any suggestions to improve the quality of the course materials.\nFurthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives and experiences, and honors your identities (including race, gender, class, sexuality, religion, ability, etc.) To help accomplish this:\n\nIf you have a name and/or set of pronouns that differ from those that appear in your official records, please let me know!\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me.  I want to be a resource for you. If you prefer to speak with someone outside of the course, the math liaisons, Dean of Students, or QSC staff are all excellent resources. I (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it. As a participant in course discussions, you should also strive to honor the diversity of your classmates.\n\n\n\n\n\n\nAll resources are freely available. They also all have print versions which can be purchased. Using the online version of the books is expected.\n\n\n\n\n\nContent: Modern Data Science with R; Baumer, Kaplan, and Horton, https://mdsr-book.github.io/mdsr3e/\n\nR resource: R for Data Science, Wickham, https://r4ds.had.co.nz/\n\nRecommended: Visual and Statistical Thinking: Displays of Evidence for Making Decisions; Tufte http://www.edwardtufte.com/tufte/books_textb (or find online)\n\n\n\n\n\n\n\nContent: An Introduction to Statistical Learning with applications in R; James, Witten, Hastie, and Tibshirani https://www.statlearning.com/\n\nR resource: Tidy Modeling with R; Kuhn and Silge https://www.tmwr.org/\n\n\n\n\n\n\n\n\nCheck-in quizzes on 9.11, 9.25, 10.9, 10.23, 11.6, and 11.20 (in class)\n10.16.24 Initial Project Proposal due (via email to me by midnight)\n10.30.24 Final Project Proposal due (on GitHub by midnight)\n11.13.24 Project Update due (on GitHub by midnight)\n12.2.24 (4:15pm) Data Science Panel with industry data scientists\n12.6.24 (Friday) or 12.12.24 (Thursday) Group Presentations (2-5pm)\n12.12.24 Final write-up due (on GitHub by midnight)\n\n\n\n\n\n\n\n\n\nBest and most comprehensive Git help: http://happygitwithr.com/\nVersion control with Git\nMore on Git\nOnline Git book with lots of info\n\n\n\n\n\n\n\n\nA fantastic ggplot2 tutorial\nGreat tutorials through the Coding Club\nGoogle for R\nIncredibly helpful cheatsheets from RStudio.\n\ndata wrangling\nggplot2\nShiny\nQuarto\nRStudio IDE\n\n\n\n\n\n\n\nWeekly homework will be assigned from the text(s) with some additional problems. One homework grade will be dropped. Homework will be done using the statistical software package R (in the RStudio IDE) and posted to GitHub + Gradescope. All homework must be done in Quarto and compiled to pdf.\n\nHomework will be due on Tuesdays by 11:59pm to GitHub + Gradescope.\nNon-homework activities (e.g., from the text) may be collected and added to your engagement grade.\nHW should be turned in to your GitHub repository and posted to Gradescope by Tuesday at 11:59pm.\nAlways post both a PDF and a Quarto file to GitHub (and a pdf to Gradescope), unless otherwise requested.\nHW is graded on a scale of 5/4/3/2/1. See below.\nHW file should be in the format of: ma154-hw#-lname-fname.pdf\n\n\n\n\nplease be neat and organized which will help me, the grader, and you (in the future) to follow your work.\nwrite your name on your assignment.\nplease include at least the number of the problem, or a summary of the question (which will also be helpful to you in the future to prepare for exams).\nit is strongly recommended that you look through the questions as soon as you get the assignment. This will help you to start thinking how to solve them!\nfor R problems, it is required to use Quarto\n\nin case of questions, or if you get stuck please don’t hesitate to email me (though I’m much less sympathetic to such questions if I receive emails within 24 hours of the due date for the assignment).\n\n\n\n\n\nHomework assignments will be graded out of 5 points, which are based on a combination of accuracy and effort. Below are rough guidelines for grading.\n[5] All problems completed with detailed solutions provided and 75% or more of the problems are fully correct. Additionally, there are no extraneous messages, warnings, or printed lists of numbers.\n[4] All problems completed with detailed solutions and 50-75% correct; OR close to all problems completed and 75%-100% correct. Or all problems are completed and there are extraneous messages, warnings, or printed lists of numbers.\n[3] Close to all problems completed with less than 75% correct.\n[2] More than half but fewer than all problems completed and &gt; 75% correct.\n[1] More than half but fewer than all problems completed and &lt; 75% correct; OR less than half of problems completed.\n[0] No work submitted, OR half or less than half of the problems submitted and without any detail/work shown to explain the solutions. You will get a zero if your file is not compiled and submitted on GitHub.\n\n\n\n\nThere will be a semester long group project. Your task is to use data to tell us something interesting. This project is deliberately open-ended to allow you to fully explore your creativity. There are three main rules that must be followed: (1) data centered, (2) tell us something, (3) do something new. Project information is available here: Math 154 Semester Project\n\n\n\n\nGitHub will be used as a way to practice reproducible and collaborative science. There may be a slight learning curve, but knowing Git will be an extremely useful skill as you venture beyond this class.\nR will be used for all homework assignments. R is freely available at http://www.r-project.org/ and is already installed on college computers. Additionally, you need to install R Studio in order to use Quarto, https://posit.co/downloads/. If you are not already familiar with R, please work through some of the materials provided ASAP.\nYou are welcome to use Pomona’s R Studio server at https://rstudio.campus.pomona.edu/ (or https://rstudio.pomona.edu if you are off campus). If you use the server, you can connect directly to your Git account without installing Git locally on your own computer. [If you are not a Pomona student, you will need to get an account from Pomona’s ITS. Go to ITS, tell them that you are taking a Pomona course, and ask for an account for using RStudio.]\n\n\n\n\n\nThis class will be interactive, and your engagement is expected (every day in class). Although notes will be posted, your engagement is an integral part of the in-class learning process.\nIn class: after answering one question, wait until 5 other people have spoken before answering another question. [Feel free to ask as many questions as often as you like!]\n\n\n\n\nYou are on your honor to present only your work as part of your course assessments. Below, I’ve provided Pomona’s academic honesty policy. But before the policy, I’ve given some thoughts on cheating which I have taken from Nick Ball’s CHEM 147 Collective (thank you, Prof Ball!). Prof Ball gives us all something to think about when we are learning in a classroom as well as on our journey to become scientists and professionals:\nThere are many known reasons why we may feel the need to “cheat” on problem sets or exams:\n\n\nAn academic environment that values grades above learning.\nFinancial aid is critical for remaining in school that places undue pressure on maintaining a high GPA.\nNavigating school, work, and/or family obligations that have diverted focus from class.\nChallenges balancing coursework and mental health.\nBalancing academic, family, peer, or personal issues.\n\n\nBeing accused of cheating – whether it has occurred or not – can be devastating for students. The college requires me to respond to potential academic dishonesty with a process that is very long and damaging. As your instructor, I care about you and want to offer alternatives to prevent us from having to go through this process. If you find yourself in a situation where “cheating” seems like the only option:\nPlease come talk to me. We will figure this out together.\nPomona College is an academic community, all of whose members are expected to abide by ethical standards both in their conduct and in their exercise of responsibilities toward other members of the community. The college expects students to understand and adhere to basic standards of honesty and academic integrity. These standards include, but are not limited to, the following:\n\n\nIn projects and assignments prepared independently, students never represent the ideas or the language of others as their own.\nStudents do not destroy or alter either the work of other students or the educational resources and materials of the College.\nStudents neither give nor receive assistance in examinations.\nStudents do not take unfair advantage of fellow students by representing work completed for one course as original work for another or by deliberately disregarding course rules and regulations.\nIn laboratory or research projects involving the collection of data, students accurately report data observed and do not alter these data for any reason.\n\n\n\n\n\nPlease email and / or set up a time to talk if you have any questions about or difficulty with the material, the computing, or the course. Talk to me as soon as possible if you find yourself struggling. The material will build on itself, so it will be much easier to catch up if the concepts get clarified earlier rather than later. This semester is going to be fun. Let’s do it.\n\n\n\n\n30% Homework\n30% Quizzes\n30% Group Project & Presentation\n10% Class engagement\n\n\n\n:::"
  },
  {
    "objectID": "syllabus.html#math-154-fall-2024",
    "href": "syllabus.html#math-154-fall-2024",
    "title": "Syllabus",
    "section": "",
    "text": "Jo Hardin 2351 Estella jo.hardin@pomona.edu\nOffice Hours: Mon 2:30-3:30pm, Tues 9-10am & 1:30-2:30pm, Thurs 10am-noon\nMentorless Mentor Sessions:\nMon 8-10pm, Tues 8-10pm\nEstella 2393\nMentor: you don’t have a mentor – work together!!!\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "syllabus.html#the-course",
    "href": "syllabus.html#the-course",
    "title": "Syllabus",
    "section": "",
    "text": "Computational Statistics will be an introduction to statistical methods that rely heavily on the use of computers. The course will generally have three parts. The first section will include communicating and working with data in a modern era. This includes data wrangling, data visualization, data ethics, and collaborative research (via GitHub). The second part of the course will focus on traditional statistical inference done through computational methods (e.g., permutation tests and bootstrapping). The last part of the course will focus on machine learning ideas such as classification, clustering, and dimension reduction techniques. Some of the methods were invented before the ubiquitous use of personal computers, but only because the calculus used to solve the problem was relatively straightforward (or because the method wasn’t actually every used). Some of the methods have been developed quite recently.\nAnonymous Feedback As someone who is constantly learning and growing in many ways, I welcome your feedback about the course, the classroom dynamics, or anything else you’d like me to know. There is a link to an anonymous feedback form on the landing page of our Canvas webpage. Please provide me with feedback at any time!"
  },
  {
    "objectID": "syllabus.html#student-learning-outcomes.",
    "href": "syllabus.html#student-learning-outcomes.",
    "title": "Syllabus",
    "section": "",
    "text": "By the end of the term, students will be able to:\n\nwork through the entire computational statistics flow chart as a data analyst.\nuse graphical representations of data to communicate ideas about the data.\nidentify, understand, and describe the uses and misuses of algorithms and data collection from an ethical lens with the purpose of preventing harms from data science.\ncritically evaluate analyses / graphics of data (typically big data or dynamic data).\ncommunicate results effectively."
  },
  {
    "objectID": "syllabus.html#diversity-and-inclusion-statement",
    "href": "syllabus.html#diversity-and-inclusion-statement",
    "title": "Syllabus",
    "section": "",
    "text": "(adapted from Monica Linden, Brown University):\nIn an ideal world, science would be objective. However, much of science is subjective and is historically built on a small subset of privileged voices. In this class, we will make an effort to recognize how science (and statistics!) has played a role in both understanding diversity as well as in promoting systems of power and privilege. I acknowledge that it is possible that there may be both overt and covert biases in the material due to the lens with which it was written, even though the material is primarily of a scientific nature. Integrating a diverse set of experiences is important for a more comprehensive understanding of science. I would like to discuss issues of diversity in statistics as part of the course from time to time.\nPlease contact me if you have any suggestions to improve the quality of the course materials.\nFurthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives and experiences, and honors your identities (including race, gender, class, sexuality, religion, ability, etc.) To help accomplish this:\n\nIf you have a name and/or set of pronouns that differ from those that appear in your official records, please let me know!\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me.  I want to be a resource for you. If you prefer to speak with someone outside of the course, the math liaisons, Dean of Students, or QSC staff are all excellent resources. I (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it. As a participant in course discussions, you should also strive to honor the diversity of your classmates."
  },
  {
    "objectID": "syllabus.html#technical-details",
    "href": "syllabus.html#technical-details",
    "title": "Syllabus",
    "section": "",
    "text": "All resources are freely available. They also all have print versions which can be purchased. Using the online version of the books is expected.\n\n\n\n\n\nContent: Modern Data Science with R; Baumer, Kaplan, and Horton, https://mdsr-book.github.io/mdsr3e/\n\nR resource: R for Data Science, Wickham, https://r4ds.had.co.nz/\n\nRecommended: Visual and Statistical Thinking: Displays of Evidence for Making Decisions; Tufte http://www.edwardtufte.com/tufte/books_textb (or find online)\n\n\n\n\n\n\n\nContent: An Introduction to Statistical Learning with applications in R; James, Witten, Hastie, and Tibshirani https://www.statlearning.com/\n\nR resource: Tidy Modeling with R; Kuhn and Silge https://www.tmwr.org/"
  },
  {
    "objectID": "syllabus.html#important-dates",
    "href": "syllabus.html#important-dates",
    "title": "Syllabus",
    "section": "",
    "text": "Check-in quizzes on 9.11, 9.25, 10.9, 10.23, 11.6, and 11.20 (in class)\n10.16.24 Initial Project Proposal due (via email to me by midnight)\n10.30.24 Final Project Proposal due (on GitHub by midnight)\n11.13.24 Project Update due (on GitHub by midnight)\n12.2.24 (4:15pm) Data Science Panel with industry data scientists\n12.6.24 (Friday) or 12.12.24 (Thursday) Group Presentations (2-5pm)\n12.12.24 Final write-up due (on GitHub by midnight)"
  },
  {
    "objectID": "syllabus.html#links-to-resources",
    "href": "syllabus.html#links-to-resources",
    "title": "Syllabus",
    "section": "",
    "text": "Best and most comprehensive Git help: http://happygitwithr.com/\nVersion control with Git\nMore on Git\nOnline Git book with lots of info\n\n\n\n\n\n\n\n\nA fantastic ggplot2 tutorial\nGreat tutorials through the Coding Club\nGoogle for R\nIncredibly helpful cheatsheets from RStudio.\n\ndata wrangling\nggplot2\nShiny\nQuarto\nRStudio IDE"
  },
  {
    "objectID": "syllabus.html#homework",
    "href": "syllabus.html#homework",
    "title": "Syllabus",
    "section": "",
    "text": "Weekly homework will be assigned from the text(s) with some additional problems. One homework grade will be dropped. Homework will be done using the statistical software package R (in the RStudio IDE) and posted to GitHub + Gradescope. All homework must be done in Quarto and compiled to pdf.\n\nHomework will be due on Tuesdays by 11:59pm to GitHub + Gradescope.\nNon-homework activities (e.g., from the text) may be collected and added to your engagement grade.\nHW should be turned in to your GitHub repository and posted to Gradescope by Tuesday at 11:59pm.\nAlways post both a PDF and a Quarto file to GitHub (and a pdf to Gradescope), unless otherwise requested.\nHW is graded on a scale of 5/4/3/2/1. See below.\nHW file should be in the format of: ma154-hw#-lname-fname.pdf\n\n\n\n\nplease be neat and organized which will help me, the grader, and you (in the future) to follow your work.\nwrite your name on your assignment.\nplease include at least the number of the problem, or a summary of the question (which will also be helpful to you in the future to prepare for exams).\nit is strongly recommended that you look through the questions as soon as you get the assignment. This will help you to start thinking how to solve them!\nfor R problems, it is required to use Quarto\n\nin case of questions, or if you get stuck please don’t hesitate to email me (though I’m much less sympathetic to such questions if I receive emails within 24 hours of the due date for the assignment).\n\n\n\n\n\nHomework assignments will be graded out of 5 points, which are based on a combination of accuracy and effort. Below are rough guidelines for grading.\n[5] All problems completed with detailed solutions provided and 75% or more of the problems are fully correct. Additionally, there are no extraneous messages, warnings, or printed lists of numbers.\n[4] All problems completed with detailed solutions and 50-75% correct; OR close to all problems completed and 75%-100% correct. Or all problems are completed and there are extraneous messages, warnings, or printed lists of numbers.\n[3] Close to all problems completed with less than 75% correct.\n[2] More than half but fewer than all problems completed and &gt; 75% correct.\n[1] More than half but fewer than all problems completed and &lt; 75% correct; OR less than half of problems completed.\n[0] No work submitted, OR half or less than half of the problems submitted and without any detail/work shown to explain the solutions. You will get a zero if your file is not compiled and submitted on GitHub."
  },
  {
    "objectID": "syllabus.html#projects",
    "href": "syllabus.html#projects",
    "title": "Syllabus",
    "section": "",
    "text": "There will be a semester long group project. Your task is to use data to tell us something interesting. This project is deliberately open-ended to allow you to fully explore your creativity. There are three main rules that must be followed: (1) data centered, (2) tell us something, (3) do something new. Project information is available here: Math 154 Semester Project"
  },
  {
    "objectID": "syllabus.html#computing",
    "href": "syllabus.html#computing",
    "title": "Syllabus",
    "section": "",
    "text": "GitHub will be used as a way to practice reproducible and collaborative science. There may be a slight learning curve, but knowing Git will be an extremely useful skill as you venture beyond this class.\nR will be used for all homework assignments. R is freely available at http://www.r-project.org/ and is already installed on college computers. Additionally, you need to install R Studio in order to use Quarto, https://posit.co/downloads/. If you are not already familiar with R, please work through some of the materials provided ASAP.\nYou are welcome to use Pomona’s R Studio server at https://rstudio.campus.pomona.edu/ (or https://rstudio.pomona.edu if you are off campus). If you use the server, you can connect directly to your Git account without installing Git locally on your own computer. [If you are not a Pomona student, you will need to get an account from Pomona’s ITS. Go to ITS, tell them that you are taking a Pomona course, and ask for an account for using RStudio.]"
  },
  {
    "objectID": "syllabus.html#engagement",
    "href": "syllabus.html#engagement",
    "title": "Syllabus",
    "section": "",
    "text": "This class will be interactive, and your engagement is expected (every day in class). Although notes will be posted, your engagement is an integral part of the in-class learning process.\nIn class: after answering one question, wait until 5 other people have spoken before answering another question. [Feel free to ask as many questions as often as you like!]"
  },
  {
    "objectID": "syllabus.html#academic-honesty",
    "href": "syllabus.html#academic-honesty",
    "title": "Syllabus",
    "section": "",
    "text": "You are on your honor to present only your work as part of your course assessments. Below, I’ve provided Pomona’s academic honesty policy. But before the policy, I’ve given some thoughts on cheating which I have taken from Nick Ball’s CHEM 147 Collective (thank you, Prof Ball!). Prof Ball gives us all something to think about when we are learning in a classroom as well as on our journey to become scientists and professionals:\nThere are many known reasons why we may feel the need to “cheat” on problem sets or exams:\n\n\nAn academic environment that values grades above learning.\nFinancial aid is critical for remaining in school that places undue pressure on maintaining a high GPA.\nNavigating school, work, and/or family obligations that have diverted focus from class.\nChallenges balancing coursework and mental health.\nBalancing academic, family, peer, or personal issues.\n\n\nBeing accused of cheating – whether it has occurred or not – can be devastating for students. The college requires me to respond to potential academic dishonesty with a process that is very long and damaging. As your instructor, I care about you and want to offer alternatives to prevent us from having to go through this process. If you find yourself in a situation where “cheating” seems like the only option:\nPlease come talk to me. We will figure this out together.\nPomona College is an academic community, all of whose members are expected to abide by ethical standards both in their conduct and in their exercise of responsibilities toward other members of the community. The college expects students to understand and adhere to basic standards of honesty and academic integrity. These standards include, but are not limited to, the following:\n\n\nIn projects and assignments prepared independently, students never represent the ideas or the language of others as their own.\nStudents do not destroy or alter either the work of other students or the educational resources and materials of the College.\nStudents neither give nor receive assistance in examinations.\nStudents do not take unfair advantage of fellow students by representing work completed for one course as original work for another or by deliberately disregarding course rules and regulations.\nIn laboratory or research projects involving the collection of data, students accurately report data observed and do not alter these data for any reason."
  },
  {
    "objectID": "syllabus.html#advice",
    "href": "syllabus.html#advice",
    "title": "Syllabus",
    "section": "",
    "text": "Please email and / or set up a time to talk if you have any questions about or difficulty with the material, the computing, or the course. Talk to me as soon as possible if you find yourself struggling. The material will build on itself, so it will be much easier to catch up if the concepts get clarified earlier rather than later. This semester is going to be fun. Let’s do it.\n\n\n\n\n30% Homework\n30% Quizzes\n30% Group Project & Presentation\n10% Class engagement\n\n\n\n:::"
  },
  {
    "objectID": "rubric.html",
    "href": "rubric.html",
    "title": "Rubric for Semester Project",
    "section": "",
    "text": "Ideally, all group members would be equally involved and able and committed to the project. In reality, it doesn’t always work that way. Individuals should be rewarded fairly for their group efforts; it’s inevitable that there will be variation in how high a priority people put on this class and how much effort they put into this project.\nTo this end, I would like each of you (individually) to describe how well (or how poorly!) your project group worked together and shared the load. This can take the form of an email (not GitHub because of the personal nature), to be submitted by the Tuesday December 14th. Also give some specific comments describing each member’s overall effort. Were there certain group members who really put out exceptional effort and deserve special recognition? Conversely, were there group members who really weren’t carrying their own weight? And then, at the end of your assessment, estimate the percentage of the total amount of work/effort done by each member. (Be sure your percentages sum to 100%!)\nFor example, suppose you have 3 group members: X, Y and Z. In the event that each member contributed equally, you could assign:\n\n33.3% for member X, 33.3% for member Y, and 33.3% for member Z\n\nOr in case person Z did twice as much work as each other member, you could assign:\n\n25% for member X, 25% for member Y, and 50% for member Z\n\nOr if member Y didn’t really do squat, you could assign:\n\n45% for member X, 10% for member Y, and 45% for member Z\n\nI will find a fair way to synthesize the (possibly conflicting) assessments within each group and fairly incorporate this assessment of effort and cooperation in each individual’s overall grade. Don’t pressure one another to give everyone glowing reports unless it’s warranted, and don’t feel pressured to share your reports with one another. Just be fair to yourselves and to one another. Let me know if you have any questions or if you run into any problems. Also keep in mind that GitHub tracks who is committing and who is not committing."
  },
  {
    "objectID": "rubric.html#presentation-evaluation",
    "href": "rubric.html#presentation-evaluation",
    "title": "Rubric for Semester Project",
    "section": "Presentation Evaluation",
    "text": "Presentation Evaluation\nThe questions below will be used to evaluate the oral presentations.\n\nPeer rubric\nEach of you will evaluate the presentations of your peers keeping the following grading rubrics in mind.\n\nMastery of the material (understanding of the material is strong and well communicated)\nBackground, completeness (thoroughly explains all key points)\nPresentation evaluation (organized, communicates effectively with the audience)\n\n\n:::"
  },
  {
    "objectID": "github.html",
    "href": "github.html",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "",
    "text": "In Math 154, we will use GitHub + Gradescope to access and submit assignments. Here is the basic structure of how it will work:\n\nGet the assignment materials from GitHub.\nClone the repository to any machine you are using.\nWork on the assignment and push back to GitHub.\nSubmit the assignment on Gradescope.\n\n\n\n\n\n\n\nimage credit: https://xkcd.com/1597/\n\n\n\n\n\nThe following diagram lays out the process, and the rest of the document provides a more detailed set of instructions.\n\n\n\n\n\nFlowchart of assignment process."
  },
  {
    "objectID": "github.html#pull",
    "href": "github.html#pull",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "pull",
    "text": "pull\nIf you are working with a colleague or on different machines it is so incredibly important to get in the habit of immediately clicking on pull when you start your work. (If you are working alone on a single machine pull won’t hurt! You’ll just be told that your files are already up to date.)\n\n\n\n\n\nAlways pull before you start. pull-work-render-commit-push"
  },
  {
    "objectID": "github.html#render-your-work",
    "href": "github.html#render-your-work",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "Render your work",
    "text": "Render your work\nDon’t forget to put your name on the assignment. Also, make sure that you Render to pdf. Render early and often. The more often you Render, the fewer headaches you will have.\n\n\n\n\n\nAlways pull before you start. pull-work-render-commit-push"
  },
  {
    "objectID": "github.html#commit-your-work",
    "href": "github.html#commit-your-work",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "commit your work",
    "text": "commit your work\nYou don’t need to commit every file, but you do need to commit files that are integral to the analysis (always commit .qmd, .pdf, data files, images that created the pdf, etc.).\n\n\n\n\n\npull-work-render-commit-push"
  },
  {
    "objectID": "github.html#push-your-work-to-github",
    "href": "github.html#push-your-work-to-github",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "push your work to GitHub",
    "text": "push your work to GitHub\nIt is good practice to use meaningful commit messages to help your future self figure out your past work.\n\n\n\n\n\npull-work-render-commit-push"
  },
  {
    "objectID": "github.html#check-your-work-on-github",
    "href": "github.html#check-your-work-on-github",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "check your work on GitHub",
    "text": "check your work on GitHub\nTo make sure that the work went through, always check your GitHub repo online to confirm any changes you made.\n\n\n\n\n\nCheck that your changes are correct."
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "Class notes can be found at http://st47s.com/Math154/Notes/.\n\n\n\n\n\n\n\n:::\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Semester Project",
    "section": "",
    "text": "Artwork by @allison_horst."
  },
  {
    "objectID": "project.html#group-formation",
    "href": "project.html#group-formation",
    "title": "Semester Project",
    "section": "Group Formation",
    "text": "Group Formation\nYou will work in a group of (approximately) three students. You may choose your own groups, or I would be happy to assign you to a group. The best groups will have team members with similar interests as far as application areas (e.g., biology, economics, etc.) but differing abilities and interests in terms of computational statistics (e.g., a stronger programmer combined with a visualization designer combined with a domain knowledge expert). See Group Roles for more information on allocating tasks."
  },
  {
    "objectID": "project.html#assignment",
    "href": "project.html#assignment",
    "title": "Semester Project",
    "section": "Assignment",
    "text": "Assignment\nYour task is to use data to tell us something interesting. This project is deliberately open-ended to allow you to fully explore your creativity. There are three main rules that must be followed:\n\nYour project must be centered around data. Preferably, you will work with large, complex, and/or messy data. The more challenging your data set is, the better. Two things that will make your project more ambitious (and more interesting) are:\n\nCombining two or more data sets that are not obviously related. For example, in the tweets predicting elections paper from the first day of class, the researchers had to combine data from Twitter that had nothing to do with politics with a data set of congressional districts, and both data sets had to be spatially-aware, since the merging was done according to the geographical location of the tweet.\n\nAccessing a live data stream. There are many APIs on the Internet that allow you to access data that changes on a continual basis. This is in contrast to static data that was collected at some point in time and does not change. If your project can respond dynamically to a live data stream, then this will make it more interesting.\nPlease note that neither of the above stipulations are requirements – they are merely examples of two considerations that may make your data more challenging to work with – and thus your project more ambitious.\n\nYour project must tell us something. We’ve seen a range of projects / analyses over the course of the semester. On one extreme are visualization projects (like Snow’s cholera map) that involve virtually no statistical analysis. On the other extreme are data mining projects like the KDD cup or Kaggle competitions, which involve very little visualization. Your project can be anywhere on this spectrum, but expectations may be different depending on where you are on the scale. An example of a project that doesn’t tell us anything, would be something that downloads a single data source and summarizes it, with some perfunctory visualization. Make sure that your project is thought-provoking and has some underlying meaning!\nTo get an A, you must show something beyond what we’ve done in class. Some examples: Use a new data mining technique (e.g., an artificial neural network, näive Bayes classifier) Use a new programming technology (e.g., Python, MapReduce, shell scripting… should be new to you!)\n\nUse a new visualization technology (e.g., Inkscape, Illustrator, Shiny, Processing)\n\nUse a new live data source or API (e.g., Flickr, Facebook, CoinMarketCap) [Note: just downloading a new data set in a flat file does not count!]\n\nUse a new data format (e.g., XML, HDF5, JSON)\n\nCompare two datasets (e.g., La Quinta vs. Dennys!)\nAlso, domain knowledge does not count here, so your outside knowledge of protein folding makes for a great motivation, but it doesn’t count as something extra.\n\nAt some point in the project, you should give an analysis/discussion of where the data came from and what/who it represents.\nLast, you must address any ethical considerations that came about during the project. How were you or weren’t you able to address the ethical issues that came up?\nIn addition to the examples you have seen over the course of the semester (and previous project links given at the bottom of this page), here are some generic ideas:\n\nCompete (strongly) in a past KDD cup or Kaggle competition\n\nCreate a GoogleMaps mash-up\n\nWrite an R package that provides an API to an online data set\n\nCreate a Shiny application that helps a Pomona professor analyze their data\n\n\n\nGeneral Rules\nYou may discuss your project with other students, but each group will have a different topic, so there is a limit to how much you can help each other. You may consult other sources, and you should credit all sources in your report. Feel free to consult with me or your mentors."
  },
  {
    "objectID": "project.html#proposals",
    "href": "project.html#proposals",
    "title": "Semester Project",
    "section": "Proposals",
    "text": "Proposals\nYour initial proposal (via email to me) is due by midnight on Tuesday, October 26th. The final proposal (via GitHub project site) will be due the following week on November 2nd.\nPrior to writing your initial proposal you should get together with your group-mates and brainstorm a half dozen or so ideas before coalescing around one idea. Be ambitious! Once you decide on a topic that interests you, think about what you would like to end up with as a final result – without worrying about how to get there. Try to visualize what your end product will look like. Will it be an interactive map? A predictive model? A mobile application? Don’t think about coding, or a particular data set, or what you know how to do now. If you come up with something ambitious and original, you’ll be more motivated to learn new things as you go in order to accomplish your goal.\nThe topic is completely open to your choice, but keep in mind the three main rules listed above. Try to think about how you will satisfy the criteria.\n\nContent\nYour initial (via email) and revised (via GitHub) proposals should contain the following content:\n\nGroup Members: List the members of your group. For the revised proposal, add additional information about each person’s role. Each member of the group should have two jobs: (1) a group dynamic role, (2) a project role. See Group Roles for more information on allocating tasks.\nTitle: The title of your project\nPurpose: Describe the general topic/phenomenon you want to explore, as well some carefully considered questions that you hope to address. You should make an argument motivating your work. Why should someone be interested in what you are doing? What do you hope people will learn from your project?\nData: As best you can, describe where you will find your data, and what kind of data it is. Will you be working with spatial data in shapefiles? Do the data come from json files? Will you be accessing an API to a live data source? Be as specific as you can, listing URLs and file formats if possible.\nVariables: As much as possible, list, and briefly describe, each variable that you plan to incorporate. If you can, be specific about units, scale, etc.\nEnd Product: Describe what you hope to deliver as a final product. Will it be a Shiny application that will be posted on the Internet? Will it be a GoogleMaps mash-up? Will it be a package that provides an API to a live data source (e.g., twitteR)? Will it be a method that draws some statistical conclusions? Will it be a predictive model that forecasts future values of some quantity?"
  },
  {
    "objectID": "project.html#update",
    "href": "project.html#update",
    "title": "Semester Project",
    "section": "Update",
    "text": "Update\nPlease respond to the following three questions (posted to your GitHub repo) by the end of the day Friday, November 19th.\n\nHave you already collected, or do you have access to, all of the data that you will need in order to complete your project? If not, please estimate the percentage of the data that you have, describe any issues that you are having, and what your plan is for getting the rest of the data.\nWhat is the single biggest unresolved issue you are having? Please describe it briefly, and what your plan is for resolving this issue.\nWhat are the elements from outside of the course, if any, that you plan to incorporate into your project?"
  },
  {
    "objectID": "project.html#presentation",
    "href": "project.html#presentation",
    "title": "Semester Project",
    "section": "Presentation",
    "text": "Presentation\nAn effective oral presentation is an integral part of this project. One of the objectives of this class is to give you experience conveying the results of a technical investigation to a non-technical audience in a way that they can understand. Whether you choose to stay in academia or pursue a career in industry, the ability to communicate clearly is of paramount importance. As a statistician (data scientist, software engineer, etc.), the burden of proof is on you to convince your audience that what you are saying is true. If your audience (who may very well be less knowledgeable about statistics than you are) cannot understand your results or their interpretations, then the technical merit of your project is irrelevant.\nOn Friday/Thursday, December 6/12th, your group will make a 10-12 minute oral presentation to the class. You should make (good) slides. Your goal should be to convey to your audience a clear understanding of your research topic, along with a basic understanding of your project, and how well it addresses the research question you posed. You should not tell us everything that you did, or show a bunch of things that you tried that didn’t work well. After hearing your talk, each student in the class should be able to answer:\n\nWhat was your project about?\n\nWhat format was the original data in, and what [downloading, data wrangling, data analysis] techniques did you apply to it?\n\nWhat were your findings?\n\nYou should prepare electronic slides for your talk. PowerPoint is fine, but you might also want to consider Markdown slides (ioslides, Slidy, or reveal.js), Google Presentation, Beamer (LaTeX), or alternative, non-linear presentation software like Prezi. Use your creativity! One thing you should not do is walk us through your calculations in R Studio. If your project has any interactive elements, please demonstrate them for us!\nYou will need to email me and submit your slides to GitHub before your presentation, and as a back-up ideally the presentation will also live in the cloud somewhere. You should plan to not hook up your laptop to the computer in Millikan 1021 (unless you have good reason and have spoken to me about it beforehand).\n\nAdvice\nThere are many sources of advice for how to make a good presentation, but an excellent place to start is a project called Technically Speaking.\nWatch the videos on this site to identify some common mistakes. Here is some general advice:\n\nBudget your time. You only have ~10 minutes, and we will be running a tight schedule. Plan for 8-10 minutes to talk, and 2 minutes to answer questions. If your talk runs too short or too long, it makes you seem unprepared. Rehearse your talk ahead of time (with your group) several times in order to get a better feel for your timing. Note also that you may have a tendency to talk faster during your actual talk than you will during your rehearsal. Talking faster in order to speed up is not a good strategy – you are much better off simply cutting material ahead of time.\n\nDon’t write too much on each slide. You don’t want people to have to read your slides, because if the audience is reading your slides, then they aren’t listening to you. You want your slides to provide visual cues to the points that you are making – not substitute for your spoken words. Concentrate on graphical displays and bullet-pointed lists of ideas (not sentences).\n\nPut your problem in context. Remember that most of your audience will have little or no knowledge of your subject matter. The easiest way to lose people is to dive right into technical details that require prior domain knowledge. Spend a few minutes at the beginning of your talk introducing your audience to the most basic aspects of your topic and present some motivation for what you are studying.\n\nSpeak loudly and clearly. Remember that you know more about your topic that anyone else in the room, so speak and act with confidence!\n\nTell a story – not necessarily the whole story. It is unrealistic to expect that you can tell your audience everything that you know about your topic in 10 minutes. You should strive to convey the big ideas in a clear fashion, but not dwell on the details. Your talk will be successful if your audience is able to walk away with an understanding of what your research question was, how you addressed it, and what the implications of your findings are."
  },
  {
    "objectID": "project.html#write-up",
    "href": "project.html#write-up",
    "title": "Semester Project",
    "section": "Write-Up",
    "text": "Write-Up\nYour write-up will similar to a report to client crafted in R Markdown, compiled to a pdf, due on Tuesday, December 14th by midnight.\nIn your write-up, you should tell a data science audience about your project, why they should care about it, and what you have discovered. Your audience will be people like you – current or aspiring data scientists. Keep in mind that this audience is extraordinarily diverse in terms of skills and abilities, so you should assume very little about what they might know. However, your audience is reasonably tech-savvy, so you need not “dumb-down” your analysis.\nNote that ideally, you would be able to use the write-up to show a future employer or graduate school an example of something interesting which you have produced.\n\nContent\nYou do not need to present all of the R code that you wrote throughout the process of working on this project. However, the write-up should contain the minimal set of R code that is necessary to understand your results and findings. If you make a claim, it must be justified by explicit calculation. A knowledgeable reviewer should be able to compile your .Rmd file without modification (caveat: unless you also did work outside of R), and verify every statement that you have made. All of the R code necessary to produce your figures and tables must appear in the .Rmd version of the write-up. All of the R code necessary to understand your work should appear in the .pdf version of the write-up.\nAny data you use should either be obtained dynamically (e.g., from a website) or saved into your project repository (unless the dataset is too big, and we’ve already discussed that the data are hosted locally).\n\n\nMotivation\nBe sure to motivate your topic at the beginning of your write-up. You should try to hook the reader early on. Assume that your audience is a skeptical data scientist who has stumbled across your write-up but has very little time to read it. Can you give her a reason to continue reading? A cool visualization or result can help.\n\n\nFormat\nYou don’t need to follow a specific format in the write-up, but you should start with an introductory paragraph and finish with a conclusion. The paragraphs needs not follow the formal writing style that you would use in most other classes. Here, a colloquial style that is accessible to a lay reader is appropriate.\nNevertheless, your write-up should address the following questions:\n\nWhy should anyone care about this?\n\nWhat is the project about? Do not assume that your readers have any domain knowledge! The burden of explanation as to what you are talking about is on you! For example, if your project involves phylogenetic trees, do not assume that your audience has anything other than a basic, lay understanding of genetics.\n\nWhere did your data come from? What kind of data was it? Is there a link to the data or some other way for the reader to follow up on your work? Be sure to cite / reference where your data came from!!\n\nWhat are your findings? What kind of statistical computations (if any) have you done to support those conclusions? Again, while the R code will show how the calculation was performed, it is up to you to interpret, in English sentences, the results of these calculations. Do not forget about units, axis labels, etc.\n\nWhat are the limitations of your work? Be clear so that others do not misinterpret your findings. To what population do your results apply? Do they generalize? Could your work be extended with more data or computational power or time to analyze? How could your study be improved? Suggesting plausible extensions don’t weaken your work – they strengthen it by connecting it to future work.\n\nWhat ethical considerations that came about during the project. How were you or weren’t you able to address those issues?\n\nWhat did you learn beyond what we’ve covered in class?\n\n\n\nStyle\nThe notebook (i.e., Rmd + pdf) format is designed to be an interactive document. Take advantage of this by including hyperlinks, figures, videos, etc. to provide context for the reader. It is likely that you will include references section or a bibliography, and your references should be embedded via links. Use Markdown elements like links, lists, LaTeX, and images as needed.\nVisualizations, particularly interactive ones, will be well-received. That said, do not overuse visualizations. You may be better off with one complicated but well-crafted visualization as opposed to many quick-and-dirty plots. Do not forget Tufte! Any plots should be well-thought out, properly labelled, informative, and visually appealing!\nThe R code is there to support the technical reader who wishes to dig into your work – not to substitute for written explanation. Do not present long unbroken chunks of R code without offering written explanations. It is rarely necessary to have more than three or four lines of R code in a single chunk. Feel free to echo=FALSE any code which is not relevant to the story you are telling.\n\n\nCiting Sources\nAs you know, you should cite all references that you use. This includes (among other things) research articles, important information (e.g., “7% of NHL players are non-white”), R packages, other (e.g., Python) packages, and relevant algorithms (e.g., NRC Word-Emotion Association Lexicon). You may use any formatting for the citations as long as the citations are consistent, standard usage, and contain all relevant information for your reader to find the appropriate documentation.\nThe information you need to cite any R package is given by the R command citation(). For example:\n\n&gt; citation(\"dplyr\")\n\n\nTo cite package ‘dplyr’ in publications use:\n\n\nHadley Wickham, Romain Francois, Lionel Henry and Kirill Müller (2017). dplyr: A Grammar of Data Manipulation. R package version 0.7.4. https://CRAN.R-project.org/package=dplyr\n\n\nA BibTeX entry for LaTeX users is\n\n\n@Manual{, title = {dplyr: A Grammar of Data Manipulation}, author = {Hadley Wickham and Romain Francois and Lionel Henry and Kirill Müller}, year = {2017}, note = {R package version 0.7.4}, url = {https://CRAN.R-project.org/package=dplyr}, }\n\n\n\nGroup Dynamic Report\nIdeally, all group members would be equally involved and able and committed to the project. In reality, it doesn’t always work that way. Individuals should be rewarded fairly for their group efforts; it’s inevitable that there will be variation in how high a priority people put on this class and how much effort they put into this project.\nTo this end, I would like each of you (individually) to describe how well (or how poorly!) your project group worked together and shared the load. This can take the form of an email (not GitHub because of the personal nature), to be submitted by the Tuesday December 14th. Also give some specific comments describing each member’s overall effort. Were there certain group members who really put out exceptional effort and deserve special recognition? Conversely, were there group members who really weren’t carrying their own weight? And then, at the end of your assessment, estimate the percentage of the total amount of work/effort done by each member. (Be sure your percentages sum to 100%!)\nFor example, suppose you have 3 group members: X, Y and Z. In the event that each member contributed equally, you could assign:\n\n33.3% for member X, 33.3% for member Y, and 33.3% for member Z\n\nOr in case person Z did twice as much work as each other member, you could assign:\n\n25% for member X, 25% for member Y, and 50% for member Z\n\nOr if member Y didn’t really do squat, you could assign:\n\n45% for member X, 10% for member Y, and 45% for member Z\n\nI will find a fair way to synthesize the (possibly conflicting) assessments within each group and fairly incorporate this assessment of effort and cooperation in each individual’s overall grade. Don’t pressure one another to give everyone glowing reports unless it’s warranted, and don’t feel pressured to share your reports with one another. Just be fair to yourselves and to one another. Let me know if you have any questions or if you run into any problems. Also keep in mind that GitHub tracks who is committing and who is not committing."
  },
  {
    "objectID": "project.html#presentation-evaluation",
    "href": "project.html#presentation-evaluation",
    "title": "Semester Project",
    "section": "Presentation Evaluation",
    "text": "Presentation Evaluation\nThe questions below will be used to evaluate the oral presentations.\n\nPeer rubric\nEach of you will evaluate the presentations of your peers keeping the following grading rubrics in mind.\n\nMastery of the material (understanding of the material is strong and well communicated)\nBackground, completeness (thoroughly explains all key points)\nPresentation evaluation (organized, communicates effectively with the audience)"
  },
  {
    "objectID": "R-tip.html",
    "href": "R-tip.html",
    "title": "R tip-of-the-day",
    "section": "",
    "text": "Artwork by @allison_horst.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumber\ntip\ndescription\nmisc\n\n\n\n\nTip 1\ncmd + opt + i\ncreates a new R chunk\ncntrl + alt + i  for PC\n\n\n\n\n\n\n\n\n\n:::\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "roles.html",
    "href": "roles.html",
    "title": "Group Dynamic Roles",
    "section": "",
    "text": "Artwork by @allison_horst."
  },
  {
    "objectID": "roles.html#roles-for-the-projects",
    "href": "roles.html#roles-for-the-projects",
    "title": "Group Dynamic Roles",
    "section": "Roles for the Projects",
    "text": "Roles for the Projects\nEach individual will have (at least) 2 roles; one role to help foster the group dynamics and the other role to divvy up the responsibilities involved in completing the project.\n\nGroup Dynamic Roles:\n\nProject Manager: Makes sure that the group is organized and has a clear plan for completing the project. This includes scheduling meetings and having a plan for what needs to be done before the next meeting.\n\nTask Manager: Makes sure that everyone knows what they are expected to do before the next meeting and makes sure that they do it. This might involve calling or emailing each person between meetings to discuss what they have/haven’t done. If someone can’t do the work that needs to be done, the task manager is responsible for calling another meeting if needed.\n\nFacilitator: Makes sure that every member of the group is participating and being listened to and heard. This might involve asking questions of a member that’s been silent and stopping others when someone’s comment is being overlooked.\n\n\n\nProject Roles\nIn each case, the person assuming that role is responsible for that aspect of the project. It doesn’t mean that they will do all that part of the project by themselves; it means that they are responsible for dividing that work up among the members of the group and ensuring that it is done and recorded correctly.\n\nDirector of Research: Is responsible for the literature searches. The Director of Research identifies what needs to be searched for in the literature, divvies up the literature searches to be performed among the group members, and coordinates changes in the searches based on information gathered and changes in direction. They are also responsible for making sure that the citations in the project are complete and accurate.\n\nDirector of Computation: Is responsible for the computer programs involved in the project. The Director of Computation is responsible for designing the code so that different people can write different parts of the code. The programmer is responsible for making sure that any code written by different people can be integrated.\n\nReporter: Is responsible for the written report. This involves taking notes during the complete process in order to keep a record of what has been done. The reporter may also gather everyone’s individual notes and put them together. The reporter is also responsible for editing the final report and making sure that the various pieces (that may have been written by different people) fit well together.\n\n\n\nThings to think about:\n\nIf all members of a group think that one member isn’t pulling their weight then you can come and talk to me about it. I can fire that member and have them do the project on their own.\n\n(Generally) All members of the group get the same grade for the project.\n\nGrade on projects (a rubric for grading will be posted soon, but generally the grade will be based on the following):\n\nGrade for technical depth and sophistication.\n\nGrade for quality of write-up (organization, clarity, grammatical correctness, appropriate use of graphs, tables, formulas).\n\nGrade for quality of oral presentation (organization, clarity, appropriate use of graphs, tables formula, ability to answer questions).\n\nGrade for quality of group work and distribution of labor.\n\n\nAttendance: you should keep track of who is or isn’t showing up to group project meetings\n\nStudents should keep a record of all the times that they worked on the project and the work that they did. Every time that you spend more than 15 minutes on the project they should write down the start and stop time and what they did. Group members should be spending roughly the same amount of time on the project (I will ask you to report on time spent on the project so far at the check-in in November.)\n\nGitHub will track who is committing what to the repository. Ideally, you will all be committing code regularly.\n\n\n:::"
  },
  {
    "objectID": "clicker_study.html",
    "href": "clicker_study.html",
    "title": "Clicker Questions",
    "section": "",
    "text": "to go along with \nModern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton\nIntroduction to Statistical Learning with Applications in R by James, Witten, Hastie, and Tibshirani\n\n\n\n\nThe reason to take random samples is:1\n\nto make cause and effect conclusions\nto get as many variables as possible\nit’s easier to collect a large dataset\nso that the data are a good representation of the population\nI have no idea why one would take a random sample\n\n\n\n\nThe reason to allocate/assign explanatory variables is:2\n\nto make cause and effect conclusions\nto get as many variables as possible\nit’s easier to collect a large dataset\nso that the data are a good representation of the population\nI have no idea what you mean by “allocate/assign” (or “explanatory variable” for that matter)\n\n\n\n\nApproximately how big is a tweet?3\n\n0.01Kb\n0.1Kb\n1Kb\n100Kb\n1000Kb = 1Mb\n\n\n\n\n\\(R^2\\) measures:4\n\nthe proportion of variability in vote margin as explained by tweet share.\nthe proportion of variability in tweet share as explained by vote margin.\nhow appropriate the linear part of the linear model is.\nwhether or not particular variables should be included in the model.\n\n\n\n\nR / R Studio / Quarto5\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “R”?\n\n\n\n\nGit / GitHub6\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “Git”?\n\n\n\n\nWhich of the following includes talking to the remote version of GitHub?7\n\nchanging your name (updating the YAML)\ncommitting the file(s)\npushing the file(s)\nsome of the above\nall of the above\n\n\n\n\nWhat is the error?8\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup2 &lt;-- \"Hello to you!\"\n\n\n\nWhat is the error?9\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\n3shup &lt;-  \"Hello to you!\"\n\n\n\nWhat is the error?10\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup4 &lt;-  \"Hello to you!\n\n\n\nWhat is the error?11\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup5 &lt;-  date()\n\n\n\nWhat is the error?12\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup6 &lt;-  sqrt 10\n\n\n\nDo you keep a calendar / schedule / planner?13\n\nYes\nNo\n\n\n\n\nDo you keep a calendar / schedule / planner? If you answered “Yes” …14\n\nYes, on Google Calendar\nYes, on Calendar for macOS\nYes, on Outlook for Windows\nYes, in some other app\nYes, by hand\n\n\n\n\nWhere should I put things I’ve created for the HW (e.g., data, .ics file, etc.)15\n\nUpload into remote GitHub directory\nIn the local folder which also has the R project\nIn my Downloads\nSomewhere on my Desktop\nIn my Home directory\n\n\n\n\nThe goal of making a figure is…16\n\nTo draw attention to your work.\nTo facilitate comparisons.\nTo provide as much information as possible.\n\n\n\n\nA good reason to make a particular choice of a graph is:17\n\nBecause the journal / field has particular expectations for how the data are presented.\nBecause some variables naturally fit better on some graphs (e.g., numbers on scatter plots).\nBecause that graphic displays the message you want as optimally as possible.\n\n\n\n\nWhy are the points orange?18\n\nR translates “navy” into orange.\ncolor must be specified in geom_point()\ncolor must be specified outside the aes() function\nthe default plot color is orange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +          \n  ggtitle(\"US Births in 1978\")\n\n\n\n\n\nWhy are the dots blue and the lines colored?19\n\ndot color is given as “navy”, line color is given as wday.\nboth colors are specified in the ggplot() function.\ndot coloring takes precedence over line coloring.\nline coloring takes precedence over dot coloring.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting vs. Mapping. If I want information to be passed to all data points (not variable):20\n\nmap the information inside the aes() function.\nset the information outside the aes() function\n\n\n\n\nThe Snow figure was most successful at:21\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe Challenger figure(s) was(were) least successful at:22\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe biggest difference between Snow and the Challenger was:23\n\nThe amount of information portrayed.\nOne was better at displaying cause.\nOne showed the relevant comparison better.\nOne was more artistic.\n\n\n\n\nCaffeine and Calories. What was the biggest concern over the average value axes?24\n\nIt isn’t at the origin.\nThey should have used all the data possible to find averages.\nThere wasn’t a random sample.\nThere wasn’t a label explaining why the axes were where they were.\n\n\n\n\nWhat is wrong with the following code?25\n\nshould only be one =\nSydney should be lower case\nname should not be in quotes\nuse mutate instead of filter\nbabynames in wrong place\n\n\n\nResult &lt;- |&gt; filter(babynames,\n        name== “Sydney”)\n\n\n\nWhich data represents the ideal format for ggplot2 and dplyr?26\n\n\n\n\n\n\n\n\ntable a\n\n\nyear\nAlgeria\nBrazil\nColumbia\n\n\n\n\n2000\n7\n12\n16\n\n\n2001\n9\n14\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable b\n\n\ncountry\nY2000\nY2001\n\n\n\n\nAlgeria\n7\n9\n\n\nBrazil\n12\n14\n\n\nColumbia\n16\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable c\n\n\ncountry\nyear\nvalue\n\n\n\n\nAlgeria\n2000\n7\n\n\nAlgeria\n2001\n9\n\n\nBrazil\n2000\n12\n\n\nBrazil\n2001\n14\n\n\nColumbia\n2000\n16\n\n\nColumbia\n2001\n18\n\n\n\n\n\n\n\n\n\n\nEach of the statements except one will accomplish the same calculation. Which one does not match?27\n\n\n#(a) \nbabynames |&gt; \n  group_by(year, sex) |&gt; \n  summarize(totalBirths = sum(num))\n\n#(b) \ngroup_by(babynames, year, sex) |&gt; \n  summarize(totalBirths = sum(num))\n\n#(c)\ngroup_by(babynames, year, sex) |&gt; \n  summarize(totalBirths = mean(num))\n\n#(d)\ntemp &lt;- group_by(babynames, year, sex)\n\nsummarize(temp, totalBirths = sum(num))\n\n#(e)\nsummarize(group_by(babynames, year, sex), \n          totalBirths = sum(num))\n\n\n\nFill in Q1.28\n\nfilter()\narrange()\nselect()\nmutate()\ngroup_by()\n\n\n\nresult &lt;- babynames |&gt;\n  Q1(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  # just the Janes and Marys\n  group_by(Q2, Q2) |&gt; \n  summarize(total = Q3)\n\n\n\nFill in Q2.29\n\n(year, sex)\n(year, name)\n(year, num)\n(sex, name)\n(sex, num)\n\n\n\nresult &lt;- babynames |&gt;\n  Q1(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(Q2, Q2) |&gt; \n  # for each year for each name\n  summarize(total = Q3)\n\n\n\nFill in Q3.30\n\nn_distinct(name)\nn_distinct(n)\nsum(name)\nsum(num)\nmean(num)\n\n\n\nresult &lt;- babynames |&gt;\n  Q1(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(Q2, Q2) |&gt; \n  summarize(total = Q3)\n  # number of babies (each year, each name)\n\n\n\nRunning the code.31\n\n\nbabynames &lt;- babynames::babynames |&gt; \n  rename(num = n)\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  # just the Janes and Marys\n  group_by(name, year) |&gt; \n  # for each year for each name\n  summarize(total = sum(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year total\n   &lt;chr&gt; &lt;dbl&gt; &lt;int&gt;\n 1 Jane   1880   215\n 2 Jane   1881   216\n 3 Jane   1882   254\n 4 Jane   1883   247\n 5 Jane   1884   295\n 6 Jane   1885   330\n 7 Jane   1886   306\n 8 Jane   1887   288\n 9 Jane   1888   446\n10 Jane   1889   374\n# ℹ 266 more rows\n\n\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(number = sum(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year number\n   &lt;chr&gt; &lt;dbl&gt;  &lt;int&gt;\n 1 Jane   1880    215\n 2 Jane   1881    216\n 3 Jane   1882    254\n 4 Jane   1883    247\n 5 Jane   1884    295\n 6 Jane   1885    330\n 7 Jane   1886    306\n 8 Jane   1887    288\n 9 Jane   1888    446\n10 Jane   1889    374\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(n_distinct(name))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `n_distinct(name)`\n   &lt;chr&gt; &lt;dbl&gt;              &lt;int&gt;\n 1 Jane   1880                  1\n 2 Jane   1881                  1\n 3 Jane   1882                  1\n 4 Jane   1883                  1\n 5 Jane   1884                  1\n 6 Jane   1885                  1\n 7 Jane   1886                  1\n 8 Jane   1887                  1\n 9 Jane   1888                  1\n10 Jane   1889                  1\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(n_distinct(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `n_distinct(num)`\n   &lt;chr&gt; &lt;dbl&gt;             &lt;int&gt;\n 1 Jane   1880                 1\n 2 Jane   1881                 1\n 3 Jane   1882                 1\n 4 Jane   1883                 1\n 5 Jane   1884                 1\n 6 Jane   1885                 1\n 7 Jane   1886                 1\n 8 Jane   1887                 1\n 9 Jane   1888                 1\n10 Jane   1889                 1\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(sum(name))\n\nError in `summarize()`:\nℹ In argument: `sum(name)`.\nℹ In group 1: `name = \"Jane\"` and `year = 1880`.\nCaused by error in `base::sum()`:\n! invalid 'type' (character) of argument\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(mean(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `mean(num)`\n   &lt;chr&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1 Jane   1880         215\n 2 Jane   1881         216\n 3 Jane   1882         254\n 4 Jane   1883         247\n 5 Jane   1884         295\n 6 Jane   1885         330\n 7 Jane   1886         306\n 8 Jane   1887         288\n 9 Jane   1888         446\n10 Jane   1889         374\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(median(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `median(num)`\n   &lt;chr&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1 Jane   1880           215\n 2 Jane   1881           216\n 3 Jane   1882           254\n 4 Jane   1883           247\n 5 Jane   1884           295\n 6 Jane   1885           330\n 7 Jane   1886           306\n 8 Jane   1887           288\n 9 Jane   1888           446\n10 Jane   1889           374\n# ℹ 266 more rows\n\n\n\n\nFill in Q1.32\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q2.33\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q3.34\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\n:::"
  },
  {
    "objectID": "clicker_study.html#footnotes",
    "href": "clicker_study.html#footnotes",
    "title": "Clicker Questions",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n\nso that the data are a good representation of the population\n\n↩︎\n\nto make cause and effect conclusions\n\n↩︎\n\nabout 0.1Kb. Turns out that 3.5 billion tweets * 0.1Kb = 350Gb (0.35 Tb). My laptop is pretty good, and it has 36 Gb of memory (RAM) and 4 Tb of storage. It would not be able to work with 3.5 billion tweets.\n\n↩︎\n\nthe proportion of variability in vote margin as explained by tweet share.\n\n↩︎\nwherever you are, make sure you are communicating with me when you have questions!↩︎\nwherever you are, make sure you are communicating with me when you have questions!↩︎\n\npushing the file(s)\n\n↩︎\n\npoor assignment operator\n\n↩︎\n\ninvalid object name\n\n↩︎\n\nunmatched quotes\n\n↩︎\n\nno mistake\n\n↩︎\n\nimproper syntax for a function argument\n\n↩︎\n\nI mean, the right answer has to be Yes, right!??!\n\n↩︎\nno right answer here!↩︎\n\nIn the local folder which also has the R project. It could be on the Desktop or the Home directory, but it must be in the same place as the R project. Do not upload files to the remote GitHub directory or you will find yourself with two different copies of the files.\n\n↩︎\nYes! All the responses are reasons to make a figure.↩︎\n\nBecause that graphic displays the message you want as optimally as possible.\n\n↩︎\n\ncolor must be specified outside the aes() function\n\n↩︎\n\ndot color is specified as “navy”, line color is specified as wday.\n\n↩︎\n\nset the information outside the aes() function\n\n↩︎\nanswers may vary. I’d say c. putting the work in context. Others might say b. facilitating comparison or d. simplifying the story. However, I don’t think a correct answer is a. making the data stand out.↩︎\n\nmaking the data stand out\n\n↩︎\n\nOne showed the relevant comparison better.\n\n↩︎\n\nIt isn’t at the origin. in combination with d. There wasn’t a label explaining why the axes were where they were. The story associated with the average value axes is not clear to the reader.\n\n↩︎\n\nbabynames in wrong place\n\n↩︎\n\nTable c is best because the columns allow us to work with each of the variable separately.\n\n↩︎\n\ndoes something different because it takes the mean() (average) instead of the sum(). The other commands compute the total number of births broken down by year and sex.\n\n↩︎\n\nfilter()\n\n↩︎\n\n(year, name)\n\n↩︎\n\nsum(num)\n\n↩︎\nrunning the different code chunks with relevant output.↩︎\n\n-country\n\n↩︎\n\nyear\n\n↩︎\n\ngdpval (if possible, good idea to name variables something different from the name of the dataframe)\n\n↩︎"
  },
  {
    "objectID": "clicker_slides.html",
    "href": "clicker_slides.html",
    "title": "Clicker Questions",
    "section": "",
    "text": "to go with Modern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton.\n\n\n\n\nWhat is a SQL server?.1\n\nA relational database management system.\nA software whose main purpose is to store and retrieve data.\nA highly secure server and does not allow any database file manipulation during execution.\nAll of the above.\n\n\n\n\nWhen was SQL created?2\n\n1960s\n1970s\n1980s\n1990s\n2000s\n\n\n\n\nWhat type of databases is SQL designed for?3\n\nhierarchical database management systems.\nnetwork database management systems.\nobject-oriented database management systems.\nrelational database management systems.\n\n\n\n\nWhich is bigger:4\n\ncomputer’s hard drive / storage\ncomputer’s memory / RAM\n\n\n\n\nWhere are each stored?5\n\nSQL tbl and R tibble both in storage\nSQL tbl and R tibble both in memory\nSQL tbl in storage and R tibble in memory\nSQL tbl in memory and R tibble in storage\n\n\n\n\nWhich SQL clause is used to extract data from a database?6\n\nOPEN\nEXTRACT\nSELECT\nGET\n\n\n\n\nWith SQL, how to you retrieve a column named “FirstName” from a table named “Persons”?7\n\nSELECT Persons.FirstName\nEXTRACT FIRSTNAME FROM Persons\nSELECT FirstName FROM Persons\nSELECT “FirstName” FROM “Persons”\n\n\n\n\nWith SQL, how do you select all the columns from a table named “Persons”?8\n\nSELECT Persons\nSELECT * FROM Persons\nSELECT [all] FROM Persons\nSELECT *.Persons\n\n\n\n\nWith SQL, how can you return the number of records in the “Persons” table?9\n\nSELECT COLUMNS(*) FROM Persons\nSELECT COUNT(*) FROM Persons\nSELECT NO(*) FROM Persons\nSELECT LEN(*) FROM Persons\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the value of the column “FirstName” is “Peter”?10\n\n\nSELECT * FROM Persons WHERE FirstName &lt;&gt; ‘Peter’\nSELECT * FROM Persons WHERE FirstName = ‘Peter’\nSELECT * FROM Persons WHERE FirstName == ‘Peter’\nSELECT [all] FROM Persons WHERE FirstName LIKE ‘Peter’\nSELECT [all] FROM Persons WHERE FirstName = ‘Peter’\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the “FirstName” is “Peter” and the “LastName” is “Jackson”?11\n\n\nSELECT FirstName = ‘Peter’, LastName = ‘Jackson’ FROM Persons\nSELECT * FROM Persons WHERE FirstName &lt;&gt; ‘Peter’ AND LastName &lt;&gt; ‘Jackson’\nSELECT * FROM Persons WHERE FirstName = ‘Peter’ AND LastName = ‘Jackson’\nSELECT * FROM Persons WHERE FirstName == ‘Peter’ AND LastName == ‘Jackson’\n\n\n\nWhich operator selects values within a range?12\n\nBEWTEEN\nWITHIN\nRANGE\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the “LastName” is alphabetically between (and including) “Hansen” and “Pettersen”?13\n\nSELECT LastName &gt; ‘Hansen’ AND LastName &lt; ‘Pettersen’ FROM Persons\nSELECT * FROM Persons WHERE LastName BETWEEN ‘Hansen’ AND ‘Pettersen’\nSELECT * FROM Persons WHERE LastName &gt; ‘Hansen’ AND LastName &lt; ‘Pettersen’\n\n\n\n\nWhich SQL statement returns only different values?14\n\nSELECT UNIQUE\nSELECT DISTINCT\nSELECT DIFFERENT\n\n\n\n\nWhich SQL keyword is used to sort the result-set?15\n\nORDER BY\nORDER\nSORT\nSORT BY\n\n\n\n\nWith SQL, how can you return all the records from a table named “Persons” sorted descending by “FirstName”?16\n\nSELECT * FROM Persons ORDER FirstName DESC\nSELECT * FROM Persons SORT ‘FirstName’ DESC\nSELECT * FROM Persons ORDER BY FirstName DESC\nSELECT * FROM Persons SORT BY ‘FirstName’ DESC\n\n\n\n\nThe OR operator displays a record if ANY conditions listed are true. The AND operator displays a record if ALL of the conditions listed are true.17\n\nTRUE\nFALSE\n\n\n\n\nIn order to SELECT the records with foods that are either green or yellow fruit:18\n\n… WHERE type = ‘fruit’ AND color = ‘yellow’ OR color = ‘green’\n\n… WHERE (type = ‘fruit’ AND color = ‘yellow’) OR color = ‘green’\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ OR color = ‘green’)\n\n… WHERE type = ‘fruit’ AND color = ‘yellow’ AND color = ‘green’\n\n… WHERE type = ‘fruit’ AND (color = ‘yellow’ AND color = ‘green’)\n\n\n\n\nWhat is the purpose of a JOIN?19\n\nit filters the rows returned by the SELECT statement.\nit specifies the columns to be retrieved.\nit combines rows from two or more tables based on a related column.\nit orders the results in ascending or descending order.\n\n\n\n\nWhat is the purpose of the UNION operator in SQL?20\n\nit combines the results of two or more SELECT statements.\nit performs a pattern match on a string.\nit retrieves the maximum value in a column.\nit filters the rows returned by the SELECT statement.\n\n\n\n\nWhat is the purpose of the INNER JOIN in SQL?21\n\nit retrieves the maximum value in a column.\nit combines rows from two or more tables based on a related column.\nit filters the rows returned by the SELECT statement.\nit performs a pattern match on a string.\n\n\n\n\nWhat is the purpose of the LEFT JOIN in SQL?22\n\nit combines rows from two or more tables based on a related column.\nit retrieves the maximum value in a column.\nit filters the rows returned by the SELECT statement.\nit performs a pattern match on a string.\n\n\n\n\nRIGHT JOIN keeps all the rows in …?23\n\nthe first table.\nthe second table.\nboth tables.\nneither table\n\n\n\n\nWho is removed in a RIGHT JOIN?24\n\nMick\nJohn\nPaul\nKeith\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhich variable(s) are removed in a RIGHT JOIN?25\n\nname\nband\nplays\nnone of them\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn SQL, what happens to Mick’s “plays” variables in a FULL JOIN?26\n\nMick is removed\nguitar\nbass\nNA\nNULL\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrep(\"q[^u]\", very.large.word.list) would not match which of the following?27\n\nIraqi\nIraqian\nIraq\nzaqqun (tree that “springs out of the bottom of Hell”, in the Quran)\nQantas (the Australian airline)\n\n\n\n\nWhich of the following regex would match to both “grey” and “gray”?28\n\n“gr[ae]y”\n“gr(a|e)y”\n“gray | grey”\n“gr[a|e]y”\nsome / all of the above – which ones?\n\n\n\n\nWhat will the result be for the following code?29\n\n10\n1\n0\nNA\n\n\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d\")\n\n\n\nWhat will the result be for the following code?30\n\n10\n1\n0\nNA\n\n\n\nstr_extract(\"My dog is 10 years old\", \"\\\\d+\")\n\n\n\nWhat will the result be for the following code?31\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".\")\n\n\n\nWhat will the result be for the following code?32\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \".+\")\n\n\n\nWhat will the result be for the following code?33\n\n.\nEpisode 2: The pie whisperer. (4 August 2015)\nEpisode\nE\n\n\n\nstr_extract(\"Episode 2: The pie whisperer. (4 August 2015)\", \"\\\\.\")\n\n\n\nHow can I pull out just the numerical information in $47?34\n\n“(?&lt;=\\$)\\d”\n“(?&lt;=\\$)\\d+”\n“\\d(?=\\$)”\n“\\d+(?=\\$)”\n\n\n\n\nYou want to know all the types of pies in the text strings. They are written as, for example “apple pie”.35\n\n“\\w+(?!pie)”\n“\\w+(?! pie)”\n“\\w+(?=pie)”\n“\\w+(?= pie)”\n\n\n\n\nstr_extract(c(\"apple pie\", \"chocolate pie\", \"peach pie\"), \"\\\\w+(?= pie)\")\n\n[1] \"apple\"     \"chocolate\" \"peach\"    \n\n\n\nstr_extract(c(\"apple pie\", \"chocolate pie\", \"peach pie\"), \"\\\\w+(?=pie)\")\n\n[1] NA NA NA\n\n\n\n\nWe say that lookarounds are “zero-lenghth assertions”. What does that mean?36\n\nwe return the string in the lookaround\nwe replace the string in the lookaround\nwe return the string at the lookaround\nwe replace the string at the lookaround\n\n\n\n\n\nWith SQL, how do you select all the records from a table named “Persons” where the value of the column “FirstName” starts with an “a”?37\n\nSELECT * FROM Persons WHERE FirstName = ’a.*’\nSELECT * FROM Persons WHERE FirstName = ’a*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’a.*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’a*’\nSELECT * FROM Persons WHERE FirstName REGEXP ’(?i)a.*’\n\n\n\n\nWhat is the main way to absolutely recognize a record within a database?38\n\nForeign key\nPrimary key\nUnique key\nNatural key\nAlternate key\n\n\n\n\nWhat does a foreign key do?39\n\nDirectly identifies another table\nDirectly identifies another column\nGives access to another entire database\nTranslates the database into another language\n\n\n\n\nWhich of these would likely be used as a foreign key between a table on student enrollment and student grades?40\n\ngrades\ntuition\nstudent_name\nstudent_hometown\n\n\n\n\nFor the student records (for two tables: enrollment and grades), which is the most likely combination?41\n\nname as primary key to both\nname as foreign to both\nname as primary in enrollment and foreign in grades\nname as foreign in enrollment and primary in grades\n\n\n\n\nWhich SQL statement is used to create a database table called ‘Customers’?42\n\nCREATE DATABASE TAB Customers\nCREATE DATABASE Customers\nCREATE DATABASE TABLE Customers\nCREATE TABLE Customers\nCREATE DB Customers\n\n\n\n\nWhich SQL statement revises data in a database?43\n\nSAVE AS\nMODIFY\nSAVE\nUPDATE\n\n\n\n\nWhich SQL statement takes out data from a database?44\n\nREMOVE\nDELETE\nCOLLAPSE\n\n\n\n\nThe NOT NULL constraint enforces a column to not accept NULL values.45\n\nFALSE\nTRUE\n\n\n\n\nWhich SQL statement places new data in a database?46\n\nADD RECORD\nINSERT INTO\nADD NEW\nINSERT NEW\n\n\n\n\nWith SQL, how can you insert a new record into the “Persons” table?47\n\nINSERT INTO Persons VALUES (‘Jimmy’, ‘Jackson’)\nINSERT (‘Jimmy’, ‘Jacskon’) INTO Persons\nINSERT VALUES (‘Jimmy’, ‘Jackson’) INTO Persons\n\n\n\n\nWith SQL, how can you insert “Olsen” as the “LastName” in the “Persons” table?48\n\nINSERT INTO Persons (LastName) VALUES (‘Olsen’)\nINSERT INTO Persons (’Olsen) INTO LastName\nINSERT (‘Olsen’) INTO Persons (LastName)\n\n\n\n\nHow can you change “Hansen” into “Nilsen” in the “LastName” column in the Persons table?49\n\nMODIFY Persons SET LastName=‘Nilsen’ WHERE LastName=‘Hansen’\nUPDATE Persons SET LastName=‘Hansen’ INTO LastName=‘Nilsen’\nMODIFY Persons SET LastName=‘Hansen’ INTO LastName=‘Nilsen’\nUPDATE Persons SET LastName=‘Nilsen’ WHERE LastName=‘Hansen’\n\n\n\n\nWith SQL, how can you delete the records where the “FirstName” is “Peter” in the Persons Table?50\n\nDELETE FROM Persons WHERE FirstName=‘Peter’\nDELETE FirstName=‘Peter’ FROM Persons\nDELETE ROW FirstName=‘Peter’ FROM Persons\n\n\n\n\nIn the flights table, the following INDEXes exist: Tailnum, Year, and Date. How many rows would be looked through if the WHERE filter was on month only?51\n\nmore than 6.3 million\nless than 6.3 million\nmore than 700,000\nless than 700,000\n\n\n\n\nWhich has a larger cardinality, Tailnum or Year?52\n\nTailnum\nYear\nthey have the same cardinality\nneither has a cardinality\n\n\n\n\nWhich index takes up more storage space, the one on Tailnum or the one on Year?53\n\nTailnum\nYear\nthey take up the same space\nyou can’t index on either variable\n\n\n\n\nWhich index is more effective at reducing querying time, the one on Tailnum or the one on Year?54\n\nTailnum\nYear\nthe queries would be the same\nyou can’t query on either variable\n\n\n\n\nWhat does the R function ifelse(a, b, c) do?55\n\na = TRUE option, b = FALSE option, c = question\na = FALSE option, b = TRUE option, c = question\na = question, b = TRUE option, c = FALSE option\na = question, b = FALSE option, c = TRUE option\n\n\n\n\nWhat does the R function case_when() do?56\n\nrenames a variable\nchanges the data type of a variable\npartitions a numeric variable\ncreates a new variable by re-coding an original variable\n\n\n\n\nWhat does the R function cut() do?57\n\nrenames a variable\nchanges the data type of a variable\npartitions a numeric variable\ncreates a new variable by re-coding an original variable\n\n\n\n\n:::"
  },
  {
    "objectID": "clicker_slides.html#footnotes",
    "href": "clicker_slides.html#footnotes",
    "title": "Computational Statistics",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n\nso that the data are a good representation of the population\n\n\n\nto make cause and effect conclusions\n\n\n\nabout 0.1Kb. Turns out that 3.5 billion tweets * 0.1Kb = 350Gb (0.35 Tb). My laptop is pretty good, and it has 36 Gb of memory (RAM) and 4 Tb of storage. It would not be able to work with 3.5 billion tweets.\n\n\n\nthe proportion of variability in vote margin as explained by tweet share.\n\n\nwherever you are, make sure you are communicating with me when you have questions!\nwherever you are, make sure you are communicating with me when you have questions!\n\npushing the file(s)\n\n\n\npoor assignment operator\n\n\n\ninvalid object name\n\n\n\nunmatched quotes\n\n\n\nno mistake\n\n\n\nimproper syntax for a function argument\n\n\n\nI mean, the right answer has to be Yes, right!??!\n\n\nno right answer here!\n\nIn the local folder which also has the R project. It could be on the Desktop or the Home directory, but it must be in the same place as the R project. Do not upload files to the remote GitHub directory or you will find yourself with two different copies of the files.\n\n\nYes! All the responses are reasons to make a figure.\n\nBecause that graphic displays the message you want as optimally as possible.\n\n\n\ncolor must be specified outside the aes() function\n\n\n\ndot color is specified as “navy”, line color is specified as wday.\n\n\n\nset the information outside the aes() function\n\n\nanswers may vary. I’d say c. putting the work in context. Others might say b. facilitating comparison or d. simplifying the story. However, I don’t think a correct answer is a. making the data stand out.\n\nmaking the data stand out\n\n\n\nOne showed the relevant comparison better.\n\n\n\nIt isn’t at the origin. in combination with d. There wasn’t a label explaining why the axes were where they were. The story associated with the average value axes is not clear to the reader.\n\n\n\nbabynames in wrong place\n\n\n\nTable c is best because the columns allow us to work with each of the variable separately.\n\n\n\ndoes something different because it takes the mean() (average) instead of the sum(). The other commands compute the total number of births broken down by year and sex.\n\n\n\nfilter()\n\n\n\n(year, name)\n\n\n\nsum(num)\n\n\nrunning the different code chunks with relevant output.\n\n-country\n\n\n\nyear\n\n\n\ngdpval (if possible, good idea to name variables something different from the name of the dataframe)"
  },
  {
    "objectID": "clicker.html",
    "href": "clicker.html",
    "title": "Clicker Questions",
    "section": "",
    "text": "to go along with \nModern Data Science with R, 3rd edition by Baumer, Kaplan, and Horton\nIntroduction to Statistical Learning with Applications in R by James, Witten, Hastie, and Tibshirani\n\n\n\n\nThe reason to take random samples is:1\n\nto make cause and effect conclusions\nto get as many variables as possible\nit’s easier to collect a large dataset\nso that the data are a good representation of the population\nI have no idea why one would take a random sample\n\n\n\n\nThe reason to allocate/assign explanatory variables is:2\n\nto make cause and effect conclusions\nto get as many variables as possible\nit’s easier to collect a large dataset\nso that the data are a good representation of the population\nI have no idea what you mean by “allocate/assign” (or “explanatory variable” for that matter)\n\n\n\n\nApproximately how big is a tweet?3\n\n0.01Kb\n0.1Kb\n1Kb\n100Kb\n1000Kb = 1Mb\n\n\n\n\n\\(R^2\\) measures:4\n\nthe proportion of variability in vote margin as explained by tweet share.\nthe proportion of variability in tweet share as explained by vote margin.\nhow appropriate the linear part of the linear model is.\nwhether or not particular variables should be included in the model.\n\n\n\n\nR / R Studio / Quarto5\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “R”?\n\n\n\n\nGit / GitHub6\n\nall good\nstarted, progress is slow and steady\nstarted, very stuck\nhaven’t started yet\nwhat do you mean by “Git”?\n\n\n\n\nWhich of the following includes talking to the remote version of GitHub?7\n\nchanging your name (updating the YAML)\ncommitting the file(s)\npushing the file(s)\nsome of the above\nall of the above\n\n\n\n\nWhat is the error?8\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup2 &lt;-- \"Hello to you!\"\n\n\n\nWhat is the error?9\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\n3shup &lt;-  \"Hello to you!\"\n\n\n\nWhat is the error?10\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup4 &lt;-  \"Hello to you!\n\n\n\nWhat is the error?11\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup5 &lt;-  date()\n\n\n\nWhat is the error?12\n\npoor assignment operator\nunmatched quotes\nimproper syntax for function argument\ninvalid object name\nno mistake\n\n\n\nshup6 &lt;-  sqrt 10\n\n\n\nDo you keep a calendar / schedule / planner?13\n\nYes\nNo\n\n\n\n\nDo you keep a calendar / schedule / planner? If you answered “Yes” …14\n\nYes, on Google Calendar\nYes, on Calendar for macOS\nYes, on Outlook for Windows\nYes, in some other app\nYes, by hand\n\n\n\n\nWhere should I put things I’ve created for the HW (e.g., data, .ics file, etc.)15\n\nUpload into remote GitHub directory\nIn the local folder which also has the R project\nIn my Downloads\nSomewhere on my Desktop\nIn my Home directory\n\n\n\n\nThe goal of making a figure is…16\n\nTo draw attention to your work.\nTo facilitate comparisons.\nTo provide as much information as possible.\n\n\n\n\nA good reason to make a particular choice of a graph is:17\n\nBecause the journal / field has particular expectations for how the data are presented.\nBecause some variables naturally fit better on some graphs (e.g., numbers on scatter plots).\nBecause that graphic displays the message you want as optimally as possible.\n\n\n\n\nWhy are the points orange?18\n\nR translates “navy” into orange.\ncolor must be specified in geom_point()\ncolor must be specified outside the aes() function\nthe default plot color is orange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +          \n  ggtitle(\"US Births in 1978\")\n\n\n\n\n\nWhy are the dots blue and the lines colored?19\n\ndot color is given as “navy”, line color is given as wday.\nboth colors are specified in the ggplot() function.\ndot coloring takes precedence over line coloring.\nline coloring takes precedence over dot coloring.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting vs. Mapping. If I want information to be passed to all data points (not variable):20\n\nmap the information inside the aes() function.\nset the information outside the aes() function\n\n\n\n\nThe Snow figure was most successful at:21\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe Challenger figure(s) was(were) least successful at:22\n\nmaking the data stand out\nfacilitating comparison\nputting the work in context\nsimplifying the story\n\n\n\n\nThe biggest difference between Snow and the Challenger was:23\n\nThe amount of information portrayed.\nOne was better at displaying cause.\nOne showed the relevant comparison better.\nOne was more artistic.\n\n\n\n\nCaffeine and Calories. What was the biggest concern over the average value axes?24\n\nIt isn’t at the origin.\nThey should have used all the data possible to find averages.\nThere wasn’t a random sample.\nThere wasn’t a label explaining why the axes were where they were.\n\n\n\n\nWhat is wrong with the following code?25\n\nshould only be one =\nSydney should be lower case\nname should not be in quotes\nuse mutate instead of filter\nbabynames in wrong place\n\n\n\nResult &lt;- |&gt; filter(babynames,\n        name== “Sydney”)\n\n\n\nWhich data represents the ideal format for ggplot2 and dplyr?26\n\n\n\n\n\n\n\n\ntable a\n\n\nyear\nAlgeria\nBrazil\nColumbia\n\n\n\n\n2000\n7\n12\n16\n\n\n2001\n9\n14\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable b\n\n\ncountry\nY2000\nY2001\n\n\n\n\nAlgeria\n7\n9\n\n\nBrazil\n12\n14\n\n\nColumbia\n16\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable c\n\n\ncountry\nyear\nvalue\n\n\n\n\nAlgeria\n2000\n7\n\n\nAlgeria\n2001\n9\n\n\nBrazil\n2000\n12\n\n\nBrazil\n2001\n14\n\n\nColumbia\n2000\n16\n\n\nColumbia\n2001\n18\n\n\n\n\n\n\n\n\n\n\nEach of the statements except one will accomplish the same calculation. Which one does not match?27\n\n\n#(a) \nbabynames |&gt; \n  group_by(year, sex) |&gt; \n  summarize(totalBirths = sum(num))\n\n#(b) \ngroup_by(babynames, year, sex) |&gt; \n  summarize(totalBirths = sum(num))\n\n#(c)\ngroup_by(babynames, year, sex) |&gt; \n  summarize(totalBirths = mean(num))\n\n#(d)\ntemp &lt;- group_by(babynames, year, sex)\n\nsummarize(temp, totalBirths = sum(num))\n\n#(e)\nsummarize(group_by(babynames, year, sex), \n          totalBirths = sum(num))\n\n\n\nFill in Q1.28\n\nfilter()\narrange()\nselect()\nmutate()\ngroup_by()\n\n\n\nresult &lt;- babynames |&gt;\n  Q1(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  # just the Janes and Marys\n  group_by(Q2, Q2) |&gt; \n  summarize(total = Q3)\n\n\n\nFill in Q2.29\n\n(year, sex)\n(year, name)\n(year, num)\n(sex, name)\n(sex, num)\n\n\n\nresult &lt;- babynames |&gt;\n  Q1(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(Q2, Q2) |&gt; \n  # for each year for each name\n  summarize(total = Q3)\n\n\n\nFill in Q3.30\n\nn_distinct(name)\nn_distinct(n)\nsum(name)\nsum(num)\nmean(num)\n\n\n\nresult &lt;- babynames |&gt;\n  Q1(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(Q2, Q2) |&gt; \n  summarize(total = Q3)\n  # number of babies (each year, each name)\n\n\n\nRunning the code.31\n\n\nbabynames &lt;- babynames::babynames |&gt; \n  rename(num = n)\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  # just the Janes and Marys\n  group_by(name, year) |&gt; \n  # for each year for each name\n  summarize(total = sum(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year total\n   &lt;chr&gt; &lt;dbl&gt; &lt;int&gt;\n 1 Jane   1880   215\n 2 Jane   1881   216\n 3 Jane   1882   254\n 4 Jane   1883   247\n 5 Jane   1884   295\n 6 Jane   1885   330\n 7 Jane   1886   306\n 8 Jane   1887   288\n 9 Jane   1888   446\n10 Jane   1889   374\n# ℹ 266 more rows\n\n\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(number = sum(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year number\n   &lt;chr&gt; &lt;dbl&gt;  &lt;int&gt;\n 1 Jane   1880    215\n 2 Jane   1881    216\n 3 Jane   1882    254\n 4 Jane   1883    247\n 5 Jane   1884    295\n 6 Jane   1885    330\n 7 Jane   1886    306\n 8 Jane   1887    288\n 9 Jane   1888    446\n10 Jane   1889    374\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(n_distinct(name))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `n_distinct(name)`\n   &lt;chr&gt; &lt;dbl&gt;              &lt;int&gt;\n 1 Jane   1880                  1\n 2 Jane   1881                  1\n 3 Jane   1882                  1\n 4 Jane   1883                  1\n 5 Jane   1884                  1\n 6 Jane   1885                  1\n 7 Jane   1886                  1\n 8 Jane   1887                  1\n 9 Jane   1888                  1\n10 Jane   1889                  1\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(n_distinct(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `n_distinct(num)`\n   &lt;chr&gt; &lt;dbl&gt;             &lt;int&gt;\n 1 Jane   1880                 1\n 2 Jane   1881                 1\n 3 Jane   1882                 1\n 4 Jane   1883                 1\n 5 Jane   1884                 1\n 6 Jane   1885                 1\n 7 Jane   1886                 1\n 8 Jane   1887                 1\n 9 Jane   1888                 1\n10 Jane   1889                 1\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(sum(name))\n\nError in `summarize()`:\nℹ In argument: `sum(name)`.\nℹ In group 1: `name = \"Jane\"` and `year = 1880`.\nCaused by error in `base::sum()`:\n! invalid 'type' (character) of argument\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(mean(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `mean(num)`\n   &lt;chr&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1 Jane   1880         215\n 2 Jane   1881         216\n 3 Jane   1882         254\n 4 Jane   1883         247\n 5 Jane   1884         295\n 6 Jane   1885         330\n 7 Jane   1886         306\n 8 Jane   1887         288\n 9 Jane   1888         446\n10 Jane   1889         374\n# ℹ 266 more rows\n\nbabynames |&gt;\n  filter(name %in% c(\"Jane\", \"Mary\")) |&gt; \n  group_by(name, year) |&gt; \n  summarize(median(num))\n\n# A tibble: 276 × 3\n# Groups:   name [2]\n   name   year `median(num)`\n   &lt;chr&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1 Jane   1880           215\n 2 Jane   1881           216\n 3 Jane   1882           254\n 4 Jane   1883           247\n 5 Jane   1884           295\n 6 Jane   1885           330\n 7 Jane   1886           306\n 8 Jane   1887           288\n 9 Jane   1888           446\n10 Jane   1889           374\n# ℹ 266 more rows\n\n\n\n\nFill in Q1.32\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q2.33\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\nFill in Q3.34\n\ngdp\nyear\ngdpval\ncountry\n–country\n\n\n\nGDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n       pivot_longer(cols = Q1, \n                    names_to = Q2, \n                    values_to = Q3)\n\n\n\n:::"
  },
  {
    "objectID": "clicker.html#footnotes",
    "href": "clicker.html#footnotes",
    "title": "Clicker Questions",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n\nso that the data are a good representation of the population\n\n↩︎\n\nto make cause and effect conclusions\n\n↩︎\n\nabout 0.1Kb. Turns out that 3.5 billion tweets * 0.1Kb = 350Gb (0.35 Tb). My laptop is pretty good, and it has 36 Gb of memory (RAM) and 4 Tb of storage. It would not be able to work with 3.5 billion tweets.\n\n↩︎\n\nthe proportion of variability in vote margin as explained by tweet share.\n\n↩︎\nwherever you are, make sure you are communicating with me when you have questions!↩︎\nwherever you are, make sure you are communicating with me when you have questions!↩︎\n\npushing the file(s)\n\n↩︎\n\npoor assignment operator\n\n↩︎\n\ninvalid object name\n\n↩︎\n\nunmatched quotes\n\n↩︎\n\nno mistake\n\n↩︎\n\nimproper syntax for a function argument\n\n↩︎\n\nI mean, the right answer has to be Yes, right!??!\n\n↩︎\nno right answer here!↩︎\n\nIn the local folder which also has the R project. It could be on the Desktop or the Home directory, but it must be in the same place as the R project. Do not upload files to the remote GitHub directory or you will find yourself with two different copies of the files.\n\n↩︎\nYes! All the responses are reasons to make a figure.↩︎\n\nBecause that graphic displays the message you want as optimally as possible.\n\n↩︎\n\ncolor must be specified outside the aes() function\n\n↩︎\n\ndot color is specified as “navy”, line color is specified as wday.\n\n↩︎\n\nset the information outside the aes() function\n\n↩︎\nanswers may vary. I’d say c. putting the work in context. Others might say b. facilitating comparison or d. simplifying the story. However, I don’t think a correct answer is a. making the data stand out.↩︎\n\nmaking the data stand out\n\n↩︎\n\nOne showed the relevant comparison better.\n\n↩︎\n\nIt isn’t at the origin. in combination with d. There wasn’t a label explaining why the axes were where they were. The story associated with the average value axes is not clear to the reader.\n\n↩︎\n\nbabynames in wrong place\n\n↩︎\n\nTable c is best because the columns allow us to work with each of the variable separately.\n\n↩︎\n\ndoes something different because it takes the mean() (average) instead of the sum(). The other commands compute the total number of births broken down by year and sex.\n\n↩︎\n\nfilter()\n\n↩︎\n\n(year, name)\n\n↩︎\n\nsum(num)\n\n↩︎\nrunning the different code chunks with relevant output.↩︎\n\n-country\n\n↩︎\n\nyear\n\n↩︎\n\ngdpval (if possible, good idea to name variables something different from the name of the dataframe)\n\n↩︎"
  },
  {
    "objectID": "images/ma154-hwtest.html",
    "href": "images/ma154-hwtest.html",
    "title": "Math 154 - Test HW",
    "section": "",
    "text": ":::\n\n\nReuseCC BY 4.0"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html",
    "href": "slides/2024-08-26-reprodGit.html",
    "title": "Introduction to Math 154",
    "section": "",
    "text": "Syllabus\nWorkflow - Stitch Fix\nTwitter\nTools\n\n\n\n\n\n\n\nImportant\n\n\n\nBefore Wednesday, listen to the full conversation of Not So Standard Deviations - Compromised Shoe Situation.\n\n\n\n\n\nweekly HW (to GitHub + Gradescope)\nbi-weekly quizzes\ndata project\nin-class activities / clickers\nethical considerations\n\n\n\n\n\nCanvas has all the links\n\ncourse website – almost everything\nclass notes\nCanvas page – solutions and assignments\n\nno computers (tablets fine)\ngood communication\nTidyTuesday\n\n\n\n\n\n\n\noffice hours\nmentor sessions\nanonymous feedback\ndates for assignments\n\n\n\nlinks to resources\nHW grading\nproject information\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nI need your GitHub user name - please email it to me.\n\n\n\n\n\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control), using modern programming tools and techniques"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#course-structure",
    "href": "slides/2024-08-26-reprodGit.html#course-structure",
    "title": "Introduction to Math 154",
    "section": "Course structure",
    "text": "Course structure\n\nweekly HW (to GitHub + Gradescope)\nbi-weekly quizzes\ndata project\nin-class activities / clickers\nethical considerations"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#additional-details",
    "href": "slides/2024-08-26-reprodGit.html#additional-details",
    "title": "Introduction to Math 154",
    "section": "Additional details",
    "text": "Additional details\n\nCanvas has all the links\n\ncourse website – almost everything\nclass notes\nCanvas page – solutions and assignments\n\nno computers (tablets fine)\ngood communication\nTidyTuesday"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#syllabus",
    "href": "slides/2024-08-26-reprodGit.html#syllabus",
    "title": "Introduction to Math 154",
    "section": "Syllabus",
    "text": "Syllabus\n\n\n\noffice hours\nmentor sessions\nanonymous feedback\ndates for assignments\n\n\n\nlinks to resources\nHW grading\nproject information\n\n\n\n\n\n\n\n\n\nImportant\n\n\nI need your GitHub user name - please email it to me."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#learning-goals",
    "href": "slides/2024-08-26-reprodGit.html#learning-goals",
    "title": "Introduction to Math 154",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control), using modern programming tools and techniques"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#workflow",
    "href": "slides/2024-08-26-reprodGit.html#workflow",
    "title": "Introduction to Math 154",
    "section": "Workflow",
    "text": "Workflow"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#stitch-fix",
    "href": "slides/2024-08-26-reprodGit.html#stitch-fix",
    "title": "Introduction to Math 154",
    "section": "Stitch Fix",
    "text": "Stitch Fix\nExample of how data and algorithms are used to make decisions.\n\nhttp://algorithms-tour.stitchfix.com/"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#what-cancant-statistics-data-science-do",
    "href": "slides/2024-08-26-reprodGit.html#what-cancant-statistics-data-science-do",
    "title": "Introduction to Math 154",
    "section": "What can/can’t statistics & data science do?",
    "text": "What can/can’t statistics & data science do?\n\nCan model the data at hand!\nCan find patterns & visualizations in large datasets.\nCan’t establish causation (mostly).\nCan’t represent data if it isn’t there."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#twitter",
    "href": "slides/2024-08-26-reprodGit.html#twitter",
    "title": "Introduction to Math 154",
    "section": "Twitter",
    "text": "Twitter\nIn 2013, DiGrazia et al. published a provocative paper suggesting that polling could now be replaced by analyzing social media data. They analyzed 406 competitive US congressional races using over 3.5 billion tweets. In an article in The Washington Post one of the co-authors, Rojas, writes: “Anyone with programming skills can write a program that will harvest tweets, sort them for content and analyze the results. This can be done with nothing more than a laptop computer.” (Rojas, 2013)\n\nThe data come from neither an experiment nor a random sample - there must be careful thought applied to the question of to whom the analysis can be generalized. The data were also scraped from the internet.\nThe analysis was done combining domain knowledge (about congressional races) with a data source that seems completely irrelevant at the outset (tweets).\nThe dataset was quite large! 3.5 billion tweets were collected and a random sample of 500,000 tweets were analyzed.\nThe researchers were from sociology and computer science - a truly collaborative endeavor, and one that is often quite efficient at producing high quality analyses."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#activity",
    "href": "slides/2024-08-26-reprodGit.html#activity",
    "title": "Introduction to Math 154",
    "section": "Activity",
    "text": "Activity\nSpend a few minutes reading the Rojas editorial. Be sure to consider Figure 1 carefully, and address the following questions."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#statistics-hat",
    "href": "slides/2024-08-26-reprodGit.html#statistics-hat",
    "title": "Introduction to Math 154",
    "section": "Statistics Hat",
    "text": "Statistics Hat\n\nDiscuss Figure 1 with your neighbor. What is its purpose? What does it convey? Think critically about this data visualization. What would you do differently?\nHow would you improve the plot? I.e., annotate it to make it more convincing / communicative? Does it need enhancement?\nDo you think the study holds water? Why or why not? What are the shortcomings of this study?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#data-scientist-hat",
    "href": "slides/2024-08-26-reprodGit.html#data-scientist-hat",
    "title": "Introduction to Math 154",
    "section": "Data Scientist Hat",
    "text": "Data Scientist Hat\nImagine that your boss, who does not have advanced technical skills or knowledge, asked you to reproduce the study you just read. Discuss the following with your neighbor.\n\nWhat steps are necessary to reproduce this study? Be as specific as you can! Try to list the subtasks that you would have to perform.\nWhat computational tools would you use for each task?\nIdentify all the steps necessary to conduct the study. Could you do it given your current abilities & knowledge? What about the practical considerations?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#advantages",
    "href": "slides/2024-08-26-reprodGit.html#advantages",
    "title": "Introduction to Math 154",
    "section": "Advantages",
    "text": "Advantages\n\nCheap\nCan measure any political race (not just the wealthy ones)."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#disadvantages",
    "href": "slides/2024-08-26-reprodGit.html#disadvantages",
    "title": "Introduction to Math 154",
    "section": "Disadvantages",
    "text": "Disadvantages\n\nIs it really reflective of the voting populace? Who would it bias toward?\nDoes simple mention of a candidate always reflect voting patterns? When wouldn’t it?\nMargin of error of 2.7%. How is that number typically calculated in a poll? Note: \\(2 \\cdot \\sqrt{(1/2)(1/2)/1000} = 0.0316\\).\nTweets feel more free in terms of what you are able to say - is that a good thing or a bad thing with respect to polling?\nCan’t measure any demographic information."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#what-could-be-done-differently",
    "href": "slides/2024-08-26-reprodGit.html#what-could-be-done-differently",
    "title": "Introduction to Math 154",
    "section": "What could be done differently?",
    "text": "What could be done differently?\n\nGelman: look only at close races\nGelman: “It might make sense to flip it around and predict twitter mentions given candidate popularity. That is, rotate the graph 90 degrees, and see how much variation there is in tweet shares for elections of different degrees of closeness.”\nGelman: “And scale the size of each dot to the total number of tweets for the two candidates in the election.”\nGelman: Make the data publicly available so that others can try to reproduce the results\n\nhttps://statmodeling.stat.columbia.edu/2013/04/24/the-tweets-votes-curve/"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#reproducibility-checklist",
    "href": "slides/2024-08-26-reprodGit.html#reproducibility-checklist",
    "title": "Introduction to Math 154",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#toolkit-for-reproducibility",
    "href": "slides/2024-08-26-reprodGit.html#toolkit-for-reproducibility",
    "title": "Introduction to Math 154",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#r-and-rstudio-1",
    "href": "slides/2024-08-26-reprodGit.html#r-and-rstudio-1",
    "title": "Introduction to Math 154",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#r-vs.-rstudio",
    "href": "slides/2024-08-26-reprodGit.html#r-vs.-rstudio",
    "title": "Introduction to Math 154",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#r-packages",
    "href": "slides/2024-08-26-reprodGit.html#r-packages",
    "title": "Introduction to Math 154",
    "section": "R packages",
    "text": "R packages\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of August 26, 2024, there are 21,145 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n1 Wickham and Bryan, R Packages.\n2 CRAN contributed packages."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tour-r-rstudio",
    "href": "slides/2024-08-26-reprodGit.html#tour-r-rstudio",
    "title": "Introduction to Math 154",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tour-recap-r-rstudio",
    "href": "slides/2024-08-26-reprodGit.html#tour-recap-r-rstudio",
    "title": "Introduction to Math 154",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/2024-08-26-reprodGit.html#a-short-list-for-now-of-r-essentials",
    "title": "Introduction to Math 154",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#r-essentials-continued",
    "href": "slides/2024-08-26-reprodGit.html#r-essentials-continued",
    "title": "Introduction to Math 154",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tidyverse",
    "href": "slides/2024-08-26-reprodGit.html#tidyverse",
    "title": "Introduction to Math 154",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#quarto-1",
    "href": "slides/2024-08-26-reprodGit.html#quarto-1",
    "title": "Introduction to Math 154",
    "section": "Quarto",
    "text": "Quarto\n\nFully reproducible reports – each time you Render, the analysis is run from the beginning\nCode goes in chunks\nNarrative goes outside of chunks"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tour-quarto",
    "href": "slides/2024-08-26-reprodGit.html#tour-quarto",
    "title": "Introduction to Math 154",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tour-recap-quarto",
    "href": "slides/2024-08-26-reprodGit.html#tour-recap-quarto",
    "title": "Introduction to Math 154",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#environments",
    "href": "slides/2024-08-26-reprodGit.html#environments",
    "title": "Introduction to Math 154",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#environments-1",
    "href": "slides/2024-08-26-reprodGit.html#environments-1",
    "title": "Introduction to Math 154",
    "section": "Environments",
    "text": "Environments\n\n\nFirst, run the following in the console:\n\nx &lt;- 2\nx * 3\n\n\n\nAll looks good, eh?\n\n\nThen, add the following in an R chunk in your Quarto document\n\nx * 3\n\n\n\nWhat happens? Why the error?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#how-will-we-use-quarto",
    "href": "slides/2024-08-26-reprodGit.html#how-will-we-use-quarto",
    "title": "Introduction to Math 154",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery assignment is an Quarto document.\nYou’ll always have a template Quarto document to start with.\nThe amount of scaffolding in the template will decrease over the semester."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#git-and-github",
    "href": "slides/2024-08-26-reprodGit.html#git-and-github",
    "title": "Introduction to Math 154",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#versioning---done-badly",
    "href": "slides/2024-08-26-reprodGit.html#versioning---done-badly",
    "title": "Introduction to Math 154",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#versioning---done-better",
    "href": "slides/2024-08-26-reprodGit.html#versioning---done-better",
    "title": "Introduction to Math 154",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#versioning---done-even-better",
    "href": "slides/2024-08-26-reprodGit.html#versioning---done-even-better",
    "title": "Introduction to Math 154",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\nwith human readable messages"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github",
    "href": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github",
    "title": "Introduction to Math 154",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github-1",
    "href": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github-1",
    "title": "Introduction to Math 154",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github-2",
    "href": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github-2",
    "title": "Introduction to Math 154",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github-3",
    "href": "slides/2024-08-26-reprodGit.html#how-will-we-use-git-and-github-3",
    "title": "Introduction to Math 154",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#git-and-github-tips",
    "href": "slides/2024-08-26-reprodGit.html#git-and-github-tips",
    "title": "Introduction to Math 154",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tour-git-github",
    "href": "slides/2024-08-26-reprodGit.html#tour-git-github",
    "title": "Introduction to Math 154",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#reproducibility",
    "href": "slides/2024-08-26-reprodGit.html#reproducibility",
    "title": "Introduction to Math 154",
    "section": "Reproducibility",
    "text": "Reproducibility"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#example-1",
    "href": "slides/2024-08-26-reprodGit.html#example-1",
    "title": "Introduction to Math 154",
    "section": "Example #1",
    "text": "Example #1\nScience retracts gay marriage paper without agreement of lead author LaCour\n\nIn May 2015 Science retracted a study of how canvassers can sway people’s opinions about gay marriage published just 5 months prior.\nScience Editor-in-Chief Marcia McNutt:\n\nOriginal survey data not made available for independent reproduction of results.\nSurvey incentives misrepresented.\nSponsorship statement false.\n\nTwo Berkeley grad students who attempted to replicate the study quickly discovered that the data must have been faked.\nMethods we’ll discuss can’t prevent this, but they can make it easier to discover issues.\n\nSource: http://news.sciencemag.org/policy/2015/05/science-retracts-gay-marriage-paper-without-lead-author-s-consent"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#example-2",
    "href": "slides/2024-08-26-reprodGit.html#example-2",
    "title": "Introduction to Math 154",
    "section": "Example #2",
    "text": "Example #2\nSeizure study retracted after authors realize data got “terribly mixed”\n\nFrom the authors of Low Dose Lidocaine for Refractory Seizures in Preterm Neonates:\n\n“The article has been retracted at the request of the authors. After carefully re-examining the data presented in the article, they identified that data of two different hospitals got terribly mixed. The published results cannot be reproduced in accordance with scientific and clinical correctness.”\nSource: http://retractionwatch.com/2013/02/01/seizure-study-retracted-after-authors-realize-data-got-terribly-mixed/"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#example-3",
    "href": "slides/2024-08-26-reprodGit.html#example-3",
    "title": "Introduction to Math 154",
    "section": "Example #3",
    "text": "Example #3\nBad spreadsheet merge kills depression paper, quick fix resurrects it\n\nThe authors informed the journal that the merge of lab results and other survey data used in the paper resulted in an error regarding the identification codes. Results of the analyses were based on the data set in which this error occurred. Further analyses established the results reported in this manuscript and interpretation of the data are not correct.\nOriginal conclusion: Lower levels of CSF IL-6 were associated with current depression and with future depression […].\nRevised conclusion: Higher levels of CSF IL-6 and IL-8 were associated with current depression […].\n\nSource: http://retractionwatch.com/2014/07/01/bad-spreadsheet-merge-kills-depression-paper-quick-fix-resurrects-it/"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#reproducible-data-analysis-1",
    "href": "slides/2024-08-26-reprodGit.html#reproducible-data-analysis-1",
    "title": "Introduction to Math 154",
    "section": "Reproducible data analysis",
    "text": "Reproducible data analysis\n\nScriptability → R [in contrast to pull down menus]\nLiterate programming → R Markdown [in contrast to multiple files]\nVersion control → Git / GitHub [in contrast to multiple versions]"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#scripting-and-literate-programming",
    "href": "slides/2024-08-26-reprodGit.html#scripting-and-literate-programming",
    "title": "Introduction to Math 154",
    "section": "Scripting and literate programming",
    "text": "Scripting and literate programming\nDonald Knuth “Literate Programming (1983)”\n“Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer- what to do, let us concentrate rather on explaining to human beings- what we want a computer to do.”\n\nThese ideas have been around for years!\nand tools for putting them to practice have also been around\nbut they have never been as accessible as the current tools"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#reproducibility-checklist-1",
    "href": "slides/2024-08-26-reprodGit.html#reproducibility-checklist-1",
    "title": "Introduction to Math 154",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done? (e.g., how were parameter settings chosen?)\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tools-r-r-studio",
    "href": "slides/2024-08-26-reprodGit.html#tools-r-r-studio",
    "title": "Introduction to Math 154",
    "section": "Tools: R & R Studio",
    "text": "Tools: R & R Studio\n\nYou must use both software programs\nR does the programming\nR Studio brings everything together\nYou may use Pomona’s server: https://rstudio.campus.pomona.edu/ (or https://rstudio.pomona.edu if you are off campus)\nSee course website for getting started: https://m154-comp-stats.netlify.app/github.html"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#r-vs-r-studio",
    "href": "slides/2024-08-26-reprodGit.html#r-vs-r-studio",
    "title": "Introduction to Math 154",
    "section": "R vs R Studio",
    "text": "R vs R Studio\nR: think “python”\nR Studio: think “jupyter notebook” or “Google Colab”\n\nTaken from Modern Drive: An introduction to statistical and data sciences via R, by Ismay and Kim"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#r-studio",
    "href": "slides/2024-08-26-reprodGit.html#r-studio",
    "title": "Introduction to Math 154",
    "section": "R Studio",
    "text": "R Studio\n\nJessica Ward, PhD student at Newcastle University"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tools-github",
    "href": "slides/2024-08-26-reprodGit.html#tools-github",
    "title": "Introduction to Math 154",
    "section": "Tools: GitHub",
    "text": "Tools: GitHub\n\nYou must submit your assignments via GitHub + Gradescope\nFollow Jenny Bryan’s advice on how to get set-up: http://happygitwithr.com/\nFollow course specific advice: https://m154-comp-stats.netlify.app/github.html"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#steps-for-weekly-homework",
    "href": "slides/2024-08-26-reprodGit.html#steps-for-weekly-homework",
    "title": "Introduction to Math 154",
    "section": "Steps for weekly homework",
    "text": "Steps for weekly homework\n\nYou will get a link to the new assignment (clicking on the link will create a new private repo)\n\nUse R Studio\n\nNew Project, version control, Git\n\nClone the repo using SSH\n\n\nIf it exists, rename the Rmd file to ma154-hw#-lname-fname.Rmd\n\nDo the assignment\n\ncommit and push after every problem\n\n\nAll necessary files must be in the same folder (e.g., data)"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tools-a-github-merge-conflict-demo",
    "href": "slides/2024-08-26-reprodGit.html#tools-a-github-merge-conflict-demo",
    "title": "Introduction to Math 154",
    "section": "Tools: a GitHub merge conflict (demo)",
    "text": "Tools: a GitHub merge conflict (demo)\n\nOn GitHub (on the web) edit the README document and Commit it with a message describing what you did.\nThen, in RStudio also edit the README document with a different change.\n\nCommit your changes\nTry to push – you’ll get an error!\nTry pulling\nResolve the merge conflict and then commit and push\n\nAs you work in teams you will run into merge conflicts, learning how to resolve them properly will be very important."
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#tools-a-github-merge-conflict",
    "href": "slides/2024-08-26-reprodGit.html#tools-a-github-merge-conflict",
    "title": "Introduction to Math 154",
    "section": "Tools: a GitHub merge conflict",
    "text": "Tools: a GitHub merge conflict"
  },
  {
    "objectID": "slides/2024-08-26-reprodGit.html#nssd",
    "href": "slides/2024-08-26-reprodGit.html#nssd",
    "title": "Introduction to Math 154",
    "section": "NSSD:",
    "text": "NSSD:\n\nWhat was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#nssd",
    "href": "slides/2024-09-04-grammarggplot.html#nssd",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "NSSD:",
    "text": "NSSD:\n\nWhat was Hilary trying to answer in her data collection?\nName two of Hilary’s main hurdles in gathering accurate data.\nWhich is better: high touch (manual) or low touch (automatic) data collection? Why?\nWhat additional covariates are needed / desired? Any problems with them?\nHow much data does she need?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#pieces-of-the-graph",
    "href": "slides/2024-09-04-grammarggplot.html#pieces-of-the-graph",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Pieces of the Graph",
    "text": "Pieces of the Graph\n\n\nVisual Cues of Yau (2013):\nPosition (numerical)\nLength (numerical)\nAngle (numerical)\nDirection (numerical)\nShape (categorical)\nArea (numerical)\nVolume (numerical)\nShade (either)\nColor (either)"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#order-matters",
    "href": "slides/2024-09-04-grammarggplot.html#order-matters",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Order Matters",
    "text": "Order Matters"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#cues-together",
    "href": "slides/2024-09-04-grammarggplot.html#cues-together",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Cues Together",
    "text": "Cues Together"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#getting-help",
    "href": "slides/2024-09-04-grammarggplot.html#getting-help",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Getting help",
    "text": "Getting help\n\nOne of the best ways to get started with ggplot is to Google what you want to do with the word ggplot. Then look through the images that come up. More often than not, the associated code is there. There are also ggplot galleries of images, one of them is here: https://plot.ly/ggplot2/\nLook at the end of this presentation and the syllabus. More help options there."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#what-are-the-visual-cues-on-this-plot",
    "href": "slides/2024-09-04-grammarggplot.html#what-are-the-visual-cues-on-this-plot",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#what-are-the-visual-cues-on-this-plot-1",
    "href": "slides/2024-09-04-grammarggplot.html#what-are-the-visual-cues-on-this-plot-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#what-are-the-visual-cues-on-this-plot-2",
    "href": "slides/2024-09-04-grammarggplot.html#what-are-the-visual-cues-on-this-plot-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "What are the visual cues on this plot?",
    "text": "What are the visual cues on this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nposition\nlength\nshape\narea/volume\nshade/color"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#the-grammar-of-graphics-ggplot",
    "href": "slides/2024-09-04-grammarggplot.html#the-grammar-of-graphics-ggplot",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "The grammar of graphics ggplot",
    "text": "The grammar of graphics ggplot\ngeom: the geometric “shape” used to display data\n\nbar, point, line, ribbon, text, etc.\n\naesthetic: an attribute controlling how geom is displayed with respect to variables\n\nx position, y position, color, fill, shape, size, etc.\n\n\nguide: helps user convert visual data back into raw data (legends, axes)\nstat: a transformation applied to data before geom gets it\n\nexample: histograms work on binned data"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#set-up",
    "href": "slides/2024-09-04-grammarggplot.html#set-up",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Set up",
    "text": "Set up\n\nlibrary(mosaic)\ndata(Births78)\n\n\nhead(Births78) \n\n\n\n\n\n\n\n\n\n\ndate\nbirths\nwday\nyear\nmonth\nday_of_year\nday_of_month\nday_of_week\n\n\n\n\n1978-01-01\n7701\nSun\n1978\n1\n1\n1\n1\n\n\n1978-01-02\n7527\nMon\n1978\n1\n2\n2\n2\n\n\n1978-01-03\n8825\nTue\n1978\n1\n3\n3\n3\n\n\n1978-01-04\n8859\nWed\n1978\n1\n4\n4\n4\n\n\n1978-01-05\n9043\nThu\n1978\n1\n5\n5\n5\n\n\n1978-01-06\n9208\nFri\n1978\n1\n6\n6\n6"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Questions:\n\nWhat do we want R to do? (What is the goal?)\nWhat does R need to know?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-1",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoal: scatterplot = a plot with points\nWhat does R need to know?\n\ndata source: Births78\naesthetics:\n\ndate -&gt; x\nbirths -&gt; y\npoints (!)"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-2",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 1978\")\n\nggplot() +\n  geom_point(data = Births78, \n             aes(x = date, y = births)) +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-3",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-3",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-4",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-4",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nWhat has changed?\n\nnew aesthetic: mapping color to day of week"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-5",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-5",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births, \n           color = wday)) +\n  geom_point() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-6",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-6",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-7",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-7",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nlines instead of dots!\n\nggplot(data = Births78,\n         aes(x = date, \n             y = births,\n             color = wday)) +\n  geom_line() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-8",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-8",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#what-does-this-code-do",
    "href": "slides/2024-09-04-grammarggplot.html#what-does-this-code-do",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births78,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#what-does-this-code-do-1",
    "href": "slides/2024-09-04-grammarggplot.html#what-does-this-code-do-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "What does this code do?",
    "text": "What does this code do?\n\nggplot(data = Births78,\n       aes(x = date, y = births, color = \"navy\")) + \n  geom_point()  +\n  labs(title = \"US Births in 1978\")\n\n\nThis is mapping the color aesthetic to a new variable with only one value (“navy”).\nSo all the dots get set to the same color, but it’s not navy."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#setting-vs.-mapping",
    "href": "slides/2024-09-04-grammarggplot.html#setting-vs.-mapping",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Setting vs. Mapping",
    "text": "Setting vs. Mapping\nIf we want to set the color to be navy for all of the dots, we do it outside the aes() designation:\n\nggplot(data = Births78,\n       aes(x = date, y = births)) +   # map variables \n  geom_point(color = \"navy\")      +   # set attributes\n  labs(title = \"US Births in 1978\")\n\n\n\nNote that color = \"navy\" is now outside of the aesthetics list. aes() is how ggplot2 distinguishes between mapping and setting."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-9",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-9",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\nNow there are two layers: one with points and one with lines\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births,\n           color = wday)) + \n  geom_point() +  \n  geom_line() +\n  labs(title = \"US Births in 1978\")\n\n\nThe layers are placed one on top of the other: the points are below and the lines are above.\ndata and aes specified in ggplot() affect all geoms"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-10",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-10",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#setting-vs.-mapping-again",
    "href": "slides/2024-09-04-grammarggplot.html#setting-vs.-mapping-again",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Setting vs. Mapping (again)",
    "text": "Setting vs. Mapping (again)\nInformation gets passed to the plot via:\n\nmap the variable information inside the aes() (aesthetic) function\nset the non-variable information outside the aes() (aesthetic) function"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#other-geoms",
    "href": "slides/2024-09-04-grammarggplot.html#other-geoms",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Other geoms",
    "text": "Other geoms\n\napropos(\"^geom_\")\n\n [1] \"geom_abline\"            \"geom_area\"              \"geom_ash\"              \n [4] \"geom_bar\"               \"geom_bin_2d\"            \"geom_bin2d\"            \n [7] \"geom_blank\"             \"geom_boxplot\"           \"geom_col\"              \n[10] \"geom_contour\"           \"geom_contour_filled\"    \"geom_count\"            \n[13] \"geom_crossbar\"          \"geom_curve\"             \"geom_density\"          \n[16] \"geom_density_2d\"        \"geom_density_2d_filled\" \"geom_density2d\"        \n[19] \"geom_density2d_filled\"  \"geom_dotplot\"           \"geom_errorbar\"         \n[22] \"geom_errorbarh\"         \"geom_freqpoly\"          \"geom_function\"         \n[25] \"geom_hex\"               \"geom_histogram\"         \"geom_hline\"            \n[28] \"geom_jitter\"            \"geom_label\"             \"geom_line\"             \n[31] \"geom_linerange\"         \"geom_lm\"                \"geom_map\"              \n[34] \"geom_path\"              \"geom_point\"             \"geom_pointrange\"       \n[37] \"geom_polygon\"           \"geom_qq\"                \"geom_qq_line\"          \n[40] \"geom_quantile\"          \"geom_rangeframe\"        \"geom_raster\"           \n[43] \"geom_rect\"              \"geom_ribbon\"            \"geom_rug\"              \n[46] \"geom_segment\"           \"geom_sf\"                \"geom_sf_label\"         \n[49] \"geom_sf_text\"           \"geom_smooth\"            \"geom_spline\"           \n[52] \"geom_spoke\"             \"geom_step\"              \"geom_text\"             \n[55] \"geom_tile\"              \"geom_tufteboxplot\"      \"geom_violin\"           \n[58] \"geom_vline\""
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#other-geoms-1",
    "href": "slides/2024-09-04-grammarggplot.html#other-geoms-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Other geoms",
    "text": "Other geoms\nhelp pages will tell you their aesthetics, default stats, etc.\n\n?geom_area             # for example"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#lets-try-geom_area",
    "href": "slides/2024-09-04-grammarggplot.html#lets-try-geom_area",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births, \n           fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#lets-try-geom_area-1",
    "href": "slides/2024-09-04-grammarggplot.html#lets-try-geom_area-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Let’s try geom_area",
    "text": "Let’s try geom_area\n\n\n\nggplot(data = Births78,\n       aes(x = date, y = births, fill = wday)) + \n  geom_area() +\n  labs(title = \"US Births in 1978\")\n\n\n\n\n\n\n\n\n\n… not a good plot\n\noverplotting is hiding much of the data\nextending y-axis to 0 may or may not be desirable."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#side-note-what-makes-a-plot-good",
    "href": "slides/2024-09-04-grammarggplot.html#side-note-what-makes-a-plot-good",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Side note: what makes a plot good?",
    "text": "Side note: what makes a plot good?\nMost (all?) graphics are intended to help us make comparisons\n\nHow does something change over time?\nDo my treatments matter? How much?\nDo treatment and control respond the same way?\n\n\n\n\n\n\n\nKey plot metric\n\n\nDoes my plot make the comparisons I am interested in:\n\neasily, and\naccurately?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#time-for-some-different-data",
    "href": "slides/2024-09-04-grammarggplot.html#time-for-some-different-data",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Time for some different data",
    "text": "Time for some different data\nHELPrct: Health Evaluation and Linkage to Primary care randomized clinical trial. Subjects admitted for treatment for addiction to one of three substances.\n\nhead(HELPrct)\n\n\n\n\n\n\n\n\n\n\nage\nanysubstatus\nanysub\ncesd\nd1\ndaysanysub\ndayslink\ndrugrisk\ne2b\nfemale\nsex\ng1b\nhomeless\ni1\ni2\nid\nindtot\nlinkstatus\nlink\nmcs\npcs\npss_fr\nracegrp\nsatreat\nsexrisk\nsubstance\ntreat\navg_drinks\nmax_drinks\nhospitalizations\n\n\n\n\n37\n1\nyes\n49\n3\n177\n225\n0\nNA\n0\nmale\nyes\nhoused\n13\n26\n1\n39\n1\nyes\n25.111990\n58.41369\n0\nblack\nno\n4\ncocaine\nyes\n13\n26\n3\n\n\n37\n1\nyes\n30\n22\n2\nNA\n0\nNA\n0\nmale\nyes\nhomeless\n56\n62\n2\n43\nNA\nNA\n26.670307\n36.03694\n1\nwhite\nno\n7\nalcohol\nyes\n56\n62\n22\n\n\n26\n1\nyes\n39\n0\n3\n365\n20\nNA\n0\nmale\nno\nhoused\n0\n0\n3\n41\n0\nno\n6.762923\n74.80633\n13\nblack\nno\n2\nheroin\nno\n0\n0\n0\n\n\n39\n1\nyes\n15\n2\n189\n343\n0\n1\n1\nfemale\nno\nhoused\n5\n5\n4\n28\n0\nno\n43.967880\n61.93168\n11\nwhite\nyes\n4\nheroin\nno\n5\n5\n2\n\n\n32\n1\nyes\n39\n12\n2\n57\n0\n1\n0\nmale\nno\nhomeless\n10\n13\n5\n38\n1\nyes\n21.675755\n37.34558\n10\nblack\nno\n6\ncocaine\nno\n10\n13\n12\n\n\n47\n1\nyes\n6\n1\n31\n365\n0\nNA\n1\nfemale\nno\nhoused\n4\n4\n6\n29\n0\nno\n55.508991\n46.47521\n5\nblack\nno\n5\ncocaine\nyes\n4\n4\n1"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#who-are-the-people-in-the-study",
    "href": "slides/2024-09-04-grammarggplot.html#who-are-the-people-in-the-study",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")\n\n\nHmm. What’s up with y?\n\nstat_bin() is being applied to the data before the geom_bar() gets to do its thing. Binning creates the y values."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#who-are-the-people-in-the-study-1",
    "href": "slides/2024-09-04-grammarggplot.html#who-are-the-people-in-the-study-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar() +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#who-are-the-people-in-the-study-2",
    "href": "slides/2024-09-04-grammarggplot.html#who-are-the-people-in-the-study-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Who are the people in the study?",
    "text": "Who are the people in the study?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HELP_data,\n       aes(x = substance,\n           fill = children)) + \n  geom_bar(position = \"fill\") +\n  labs(title = \"HELP trial\",\n       y = \"actually, percent\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-old-are-people-in-the-help-study",
    "href": "slides/2024-09-04-grammarggplot.html#how-old-are-people-in-the-help-study",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How old are people in the HELP study?",
    "text": "How old are people in the HELP study?\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram() +\n  labs(title = \"HELP trial\")\n\nNotice the messages\n\nstat_bin: Histograms are not mapping the raw data but binned data.\nstat_bin() performs the data transformation.\nbinwidth: a default binwidth has been selected, but we should really choose our own."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#setting-the-binwidth-manually",
    "href": "slides/2024-09-04-grammarggplot.html#setting-the-binwidth-manually",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Setting the binwidth manually",
    "text": "Setting the binwidth manually\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_histogram(binwidth=2) +\n  labs(title = \"HELP trial\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-old-are-people-in-the-help-study-other-geoms",
    "href": "slides/2024-09-04-grammarggplot.html#how-old-are-people-in-the-help-study-other-geoms",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How old are people in the HELP study? – Other geoms",
    "text": "How old are people in the HELP study? – Other geoms\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_freqpoly(binwidth=2) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#selecting-stat-and-geom-manually",
    "href": "slides/2024-09-04-grammarggplot.html#selecting-stat-and-geom-manually",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery geom comes with a default stat\n\nfor simple cases, the stat is stat_identity() which does nothing\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#selecting-stat-and-geom-manually-1",
    "href": "slides/2024-09-04-grammarggplot.html#selecting-stat-and-geom-manually-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Selecting stat and geom manually",
    "text": "Selecting stat and geom manually\nEvery stat comes with a default geom, every geom with a default stat\n\nwe can specify stats instead of geom, if we prefer\nwe can mix and match geoms and stats however we like\n\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  stat_density(geom = \"line\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#more-combinations",
    "href": "slides/2024-09-04-grammarggplot.html#more-combinations",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", binwidth=3) + \n  geom_line(stat = \"bin\", binwidth=3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#more-combinations-1",
    "href": "slides/2024-09-04-grammarggplot.html#more-combinations-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_area(stat = \"bin\", binwidth=3)  +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#more-combinations-2",
    "href": "slides/2024-09-04-grammarggplot.html#more-combinations-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "More combinations",
    "text": "More combinations\n\nggplot(data = HELP_data,\n       aes(x = age)) + \n  geom_point(stat = \"bin\", \n             binwidth=3, \n             aes(size = ..count..)) +\n  geom_line(stat = \"bin\", binwidth=3) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-much-drinking-i1",
    "href": "slides/2024-09-04-grammarggplot.html#how-much-drinking-i1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nggplot(data = HELP_data,\n       aes(x = i1)) + geom_histogram() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-much-drinking-i1-1",
    "href": "slides/2024-09-04-grammarggplot.html#how-much-drinking-i1-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nggplot(data = HELP_data,\n       aes(x = i1)) + \n  geom_density() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-much-drinking-i1-2",
    "href": "slides/2024-09-04-grammarggplot.html#how-much-drinking-i1-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How much drinking? (i1)",
    "text": "How much drinking? (i1)\n\nggplot(data = HELP_data, \n       aes(x = i1)) + \n  geom_area(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#covariates-adding-in-more-variables",
    "href": "slides/2024-09-04-grammarggplot.html#covariates-adding-in-more-variables",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Covariates: Adding in more variables",
    "text": "Covariates: Adding in more variables\nUsing color and linetype:\n\nggplot(data = HELP_data,\n       aes(x = i1,\n           color = substance,\n           linetype = children)) + \n  geom_line(stat = \"density\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#using-color-and-facets",
    "href": "slides/2024-09-04-grammarggplot.html#using-color-and-facets",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Using color and facets",
    "text": "Using color and facets\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( . ~ children ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = i1, color = substance)) + \n  geom_line(stat = \"density\") + \n  facet_grid( children ~ . ) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#boxplots",
    "href": "slides/2024-09-04-grammarggplot.html#boxplots",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots use stat_quantile() (five number summary).\nThe quantitative variable must be y, and there must be an additional x variable.\n\nggplot(data = HELP_data,\n       aes(x = substance, y = age, color = children)) + \n  geom_boxplot() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#horizontal-boxplots",
    "href": "slides/2024-09-04-grammarggplot.html#horizontal-boxplots",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Horizontal boxplots",
    "text": "Horizontal boxplots\n\ncoord_flip() may be used with other plots as well to reverse the roles f x and y on the plot.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#axes-scaling-with-boxplots",
    "href": "slides/2024-09-04-grammarggplot.html#axes-scaling-with-boxplots",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Axes scaling with boxplots",
    "text": "Axes scaling with boxplots\nWe can scale the continuous axis\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot() +\n  coord_trans(y = \"exp\") +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#give-me-some-space",
    "href": "slides/2024-09-04-grammarggplot.html#give-me-some-space",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Give me some space",
    "text": "Give me some space\nWe’ve triggered a new feature: dodge (for dodging things left/right). We can control how much if we set the dodge manually.\n\nggplot(data = HELP_data,\n       aes(x = substance, \n           y = age, \n           color = children)) + \n  geom_boxplot(position = position_dodge(width=1)) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#issues-with-bigger-data",
    "href": "slides/2024-09-04-grammarggplot.html#issues-with-bigger-data",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Issues with bigger data",
    "text": "Issues with bigger data\n\nAlthough we can see a generally positive association (as we would expect), the overplotting may be hiding information.\n\n\nlibrary(NHANES)\ndim(NHANES)\n\n[1] 10000    76\n\n\n\nhead(NHANES)\n\n\n\n\n\n\n\n\n\n\nID\nSurveyYr\nGender\nAge\nAgeDecade\nAgeMonths\nRace1\nRace3\nEducation\nMaritalStatus\nHHIncome\nHHIncomeMid\nPoverty\nHomeRooms\nHomeOwn\nWork\nWeight\nLength\nHeadCirc\nHeight\nBMI\nBMICatUnder20yrs\nBMI_WHO\nPulse\nBPSysAve\nBPDiaAve\nBPSys1\nBPDia1\nBPSys2\nBPDia2\nBPSys3\nBPDia3\nTestosterone\nDirectChol\nTotChol\nUrineVol1\nUrineFlow1\nUrineVol2\nUrineFlow2\nDiabetes\nDiabetesAge\nHealthGen\nDaysPhysHlthBad\nDaysMentHlthBad\nLittleInterest\nDepressed\nnPregnancies\nnBabies\nAge1stBaby\nSleepHrsNight\nSleepTrouble\nPhysActive\nPhysActiveDays\nTVHrsDay\nCompHrsDay\nTVHrsDayChild\nCompHrsDayChild\nAlcohol12PlusYr\nAlcoholDay\nAlcoholYear\nSmokeNow\nSmoke100\nSmoke100n\nSmokeAge\nMarijuana\nAgeFirstMarij\nRegularMarij\nAgeRegMarij\nHardDrugs\nSexEver\nSexAge\nSexNumPartnLife\nSexNumPartYear\nSameSex\nSexOrientation\nPregnantNow\n\n\n\n\n51624\n2009_10\nmale\n34\n30-39\n409\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.36\n6\nOwn\nNotWorking\n87.4\nNA\nNA\n164.7\n32.22\nNA\n30.0_plus\n70\n113\n85\n114\n88\n114\n88\n112\n82\nNA\n1.29\n3.49\n352\nNA\nNA\nNA\nNo\nNA\nGood\n0\n15\nMost\nSeveral\nNA\nNA\nNA\n4\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\nNA\n0\nNo\nYes\nSmoker\n18\nYes\n17\nNo\nNA\nYes\nYes\n16\n8\n1\nNo\nHeterosexual\nNA\n\n\n51624\n2009_10\nmale\n34\n30-39\n409\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.36\n6\nOwn\nNotWorking\n87.4\nNA\nNA\n164.7\n32.22\nNA\n30.0_plus\n70\n113\n85\n114\n88\n114\n88\n112\n82\nNA\n1.29\n3.49\n352\nNA\nNA\nNA\nNo\nNA\nGood\n0\n15\nMost\nSeveral\nNA\nNA\nNA\n4\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\nNA\n0\nNo\nYes\nSmoker\n18\nYes\n17\nNo\nNA\nYes\nYes\n16\n8\n1\nNo\nHeterosexual\nNA\n\n\n51624\n2009_10\nmale\n34\n30-39\n409\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.36\n6\nOwn\nNotWorking\n87.4\nNA\nNA\n164.7\n32.22\nNA\n30.0_plus\n70\n113\n85\n114\n88\n114\n88\n112\n82\nNA\n1.29\n3.49\n352\nNA\nNA\nNA\nNo\nNA\nGood\n0\n15\nMost\nSeveral\nNA\nNA\nNA\n4\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\nNA\n0\nNo\nYes\nSmoker\n18\nYes\n17\nNo\nNA\nYes\nYes\n16\n8\n1\nNo\nHeterosexual\nNA\n\n\n51625\n2009_10\nmale\n4\n0-9\n49\nOther\nNA\nNA\nNA\n20000-24999\n22500\n1.07\n9\nOwn\nNA\n17.0\nNA\nNA\n105.4\n15.30\nNA\n12.0_18.5\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n4\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n51630\n2009_10\nfemale\n49\n40-49\n596\nWhite\nNA\nSome College\nLivePartner\n35000-44999\n40000\n1.91\n5\nRent\nNotWorking\n86.7\nNA\nNA\n168.4\n30.57\nNA\n30.0_plus\n86\n112\n75\n118\n82\n108\n74\n116\n76\nNA\n1.16\n6.70\n77\n0.094\nNA\nNA\nNo\nNA\nGood\n0\n10\nSeveral\nSeveral\n2\n2\n27\n8\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\n2\n20\nYes\nYes\nSmoker\n38\nYes\n18\nNo\nNA\nYes\nYes\n12\n10\n1\nYes\nHeterosexual\nNA\n\n\n51638\n2009_10\nmale\n9\n0-9\n115\nWhite\nNA\nNA\nNA\n75000-99999\n87500\n1.84\n6\nRent\nNA\n29.8\nNA\nNA\n133.1\n16.82\nNA\n12.0_18.5\n82\n86\n47\n84\n50\n84\n50\n88\n44\nNA\n1.34\n4.86\n123\n1.538\nNA\nNA\nNo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#using-alpha-opacity",
    "href": "slides/2024-09-04-grammarggplot.html#using-alpha-opacity",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Using alpha (opacity)",
    "text": "Using alpha (opacity)\nOne way to deal with overplotting is to set the opacity low.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point(alpha = 0.01) + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#geom_density2d",
    "href": "slides/2024-09-04-grammarggplot.html#geom_density2d",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "geom_density2d",
    "text": "geom_density2d\nAlternatively (or simultaneously) we might prefer a different geom altogether.\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_density2d() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#multiple-layers",
    "href": "slides/2024-09-04-grammarggplot.html#multiple-layers",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Multiple layers",
    "text": "Multiple layers\n\n\n\nggplot(data = HELP_data, \n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha = .6) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")\n\n\n\n\n\n\n\n\n\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_jitter(alpha = .6, width=0.1) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#multiple-layers-1",
    "href": "slides/2024-09-04-grammarggplot.html#multiple-layers-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Multiple layers",
    "text": "Multiple layers\n\nggplot(data = HELP_data,\n       aes(x = children, y = age)) +\n  geom_boxplot(outlier.size = 0) +\n  geom_point(alpha = .6, \n             position = position_jitter(width = .1, height = 0)) +\n  coord_flip() +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#things-i-havent-mentioned-much",
    "href": "slides/2024-09-04-grammarggplot.html#things-i-havent-mentioned-much",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge() (for use with points on top of dodged boxplots), position_stack(), etc.)\ntransforming axes"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#things-i-havent-mentioned-much-1",
    "href": "slides/2024-09-04-grammarggplot.html#things-i-havent-mentioned-much-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Things I haven’t mentioned (much)",
    "text": "Things I haven’t mentioned (much)\n\ncoords (coord_flip() is good to know about)\nthemes (for customizing appearance)\nposition (position_dodge(), position_jitterdodge(), position_stack(), etc.)\ntransforming axes\n\n\nggplot( data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(coef = 10, position = position_dodge()) +\n  geom_point(aes(color = children, fill = children), position = position_jitterdodge()) +\n  ggtitle(\"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#a-little-bit-of-everything",
    "href": "slides/2024-09-04-grammarggplot.html#a-little-bit-of-everything",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "A little bit of everything",
    "text": "A little bit of everything\n\nggplot(data = HELP_data, aes(x = substance, y = age, color = children)) +\n  geom_boxplot(position = position_dodge(width=1)) +\n  geom_point(aes(fill = children), \n             alpha = .5, \n             position = position_jitterdodge(dodge.width = 1, jitter.width = 0.2)) + \n  facet_wrap(~homeless) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#want-to-learn-more",
    "href": "slides/2024-09-04-grammarggplot.html#want-to-learn-more",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Want to learn more?",
    "text": "Want to learn more?\n\ndocs.ggplot2.org/\nR for Data Science by Hadley Wickham and Garrett Grolemund"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#whats-around-the-corner",
    "href": "slides/2024-09-04-grammarggplot.html#whats-around-the-corner",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "What’s around the corner?",
    "text": "What’s around the corner?\nshiny\n\ninteractive graphics / modeling\nhttps://shiny.rstudio.com/\n\nplotly\n\nPlotly is an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function , which will convert ggplot2 figures into a Plotly object. Furthermore, you have the option of manipulating the Plotly object with the style function.\n\n\nhttps://plot.ly/ggplot2/getting-started/\n\ngganimate\n\ngganimate tutorial"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#grammar-of-graphics",
    "href": "slides/2024-09-04-grammarggplot.html#grammar-of-graphics",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\nYau (2013) gives us nine visual cues, and Wickham (2014) translates them into a language using ggplot2.\n\nVisual Cues: the aspects of the figure where we should focus.\nPosition (numerical) where in relation to other things?\nLength (numerical) how big (in one dimension)?\nAngle (numerical) how wide? parallel to something else?\nDirection (numerical) at what slope? In a time series, going up or down?\nShape (categorical) belonging to what group?\nArea (numerical) how big (in two dimensions)? Beware of improper scaling!\nVolume (numerical) how big (in three dimensions)? Beware of improper scaling!\nShade (either) to what extent? how severely?\nColor (either) to what extent? how severely? Beware of red/green color blindness.\nCoordinate System: rectangular, polar, geographic, etc.\nScale: numeric (linear? logarithmic?), categorical (ordered?), time\nContext: in comparison to what (think back to ideas from Tufte)"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#themes",
    "href": "slides/2024-09-04-grammarggplot.html#themes",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "themes",
    "text": "themes\n\nlibrary(ggthemes)\nggplot(Births78, aes(x = date, y = births)) + \n  geom_point() + \n  theme_wsj()"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#jitterdodge",
    "href": "slides/2024-09-04-grammarggplot.html#jitterdodge",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "jitterdodge()",
    "text": "jitterdodge()\n\nggplot(data = HELP_data, \n       aes(x = substance, y = age, color = children)) +\n  geom_boxplot(position = position_dodge(width = 1)) +\n  geom_point(aes(color = children, \n                 fill = children), \n             position = position_jitterdodge(dodge.width = 1, jitter.width = 0.1), \n             size = 0.5) +\n  labs(title = \"HELP clinical trial at detoxification unit\")"
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html",
    "href": "posts/2024-09-04-dataviz/index.html",
    "title": "2. Data Viz",
    "section": "",
    "text": "Artwork by @allison_horst."
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html#agenda",
    "href": "posts/2024-09-04-dataviz/index.html#agenda",
    "title": "2. Data Viz",
    "section": "Agenda ",
    "text": "Agenda \n\nAugust 28, 2024\n\nGitHub\nNSSD\nGrammar of graphics\nggplot\n\n\n\nSeptember 4, 2024\n\nCholera: what went (didn’t go) well with the graphics?\nChallenger: what didn’t go (went) well with the graphics?\nThoughts on plotting (with example(s))\n\n\nClass discussion will be based on Tufte (1997) Visual and Statistical Thinking: Displays of Evidence for Making Decisions. (Use Google to find it.)\nAnother great reference is the following text: Fundamentals of Data Visualization by Wilke at http://serialmentor.com/dataviz/"
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html#readings",
    "href": "posts/2024-09-04-dataviz/index.html#readings",
    "title": "2. Data Viz",
    "section": "Readings ",
    "text": "Readings \n\nClass notes: Visualization\nTufte (1997) Visual and Statistical Thinking: Displays of Evidence for Making Decisions. (Use Google to find it.)\nWickham (2017) Data Visualization in R for Data Science."
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html#reflection-questions",
    "href": "posts/2024-09-04-dataviz/index.html#reflection-questions",
    "title": "2. Data Viz",
    "section": "Reflection questions ",
    "text": "Reflection questions \n\nWhen creating a graph, try to sketch / image the graph before you code it. What do you want R to do (what is the goal)? In order to do that, what does R need to know?\nWhat should the goal of a plot be? What should the goal of your plot be?\nWhat different aspects deconstruct a plot?"
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html#ethics-considerations",
    "href": "posts/2024-09-04-dataviz/index.html#ethics-considerations",
    "title": "2. Data Viz",
    "section": "Ethics considerations ",
    "text": "Ethics considerations \n\nDoes your plot make the comparison of interest: easily? and accurately?\nDid you add alt text to your images (see Writing Alt Text for Data Visualization)?\nIs your plot accessible to those who are color blind or looking at the image in black and white?"
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html#slides",
    "href": "posts/2024-09-04-dataviz/index.html#slides",
    "title": "2. Data Viz",
    "section": "Slides ",
    "text": "Slides \n\nIn class slides for both 8/28/24 and 9/4/24.\nWS3 - ggplot"
  },
  {
    "objectID": "posts/2024-09-04-dataviz/index.html#additional-resources",
    "href": "posts/2024-09-04-dataviz/index.html#additional-resources",
    "title": "2. Data Viz",
    "section": "Additional Resources ",
    "text": "Additional Resources \n\nDuBois’s images online and in W.E.B. Du Bois’s Data Portraits: Visualizing Black America, a compilation edited by Whitney Battle-Baptiste.\nFlowcharts for choosing appropriate plots, brief tutorials of viz types, and source code in R and Python: from Data to Viz\nSee something or Say Something\nCensus trends visualized\nVisualization Internship (Fall 2021) at 538\nvisualizing data: Digest of the best visualizations from the past month\nA regular NYT column on visualizations: What’s Going on in this Graph?\nStudies about visualizations and perception\nFundamentals of Data Visualization\nAllison Horst’s amazing illustrations\nMakeover Mondays, a weekly data project for making more effective visualizations.\n\n\n:::"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#attributes",
    "href": "slides/2024-09-04-grammarggplot.html#attributes",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Attributes",
    "text": "Attributes\nAttributes can focus your reader’s attention.1\n\n\n\n\n\n\n\n\n\nimage credit: Better Data Visualization by Schwabish"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\n\n\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-1",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\n\n\n\nChart junk & stuff that adds no meaning, e.g. butterflies on top of barplots, background images\nExtra tick marks and grid lines\nUnnecessary text and arrows\nDecimal places beyond the measurement error or the level of difference"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-2",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\n\n\n\nPut juxtaposed plots on same scale\nMake it easy to distinguish elements of superposed plots (e.g. color)\nEmphasizes the important difference\nComparison: volume, area, height (be careful, volume can seem bigger than you mean it to)"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-3",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-3",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\n\n\n\nKeep scales on x and y axes the same for both plots to facilitate the comparison\nZoom in to focus on the region that contains the bulk of the data\nKeep the scale the same throughout the plot (i.e. don’t change it mid-axis)\nOrigin need not be on the scale\nChoose a scale that improves resolution\nAvoid jiggling the baseline"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-4",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-4",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\n\n\n\nDescribe what you see in the caption\nAdd context with reference markers (lines and points) including text\nAdd legends and labels\nUse color and plotting symbols to add more information\nPlot the same thing more than once in different ways/scales\nReduce clutter"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-5",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-5",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\n\n\n\nBe comprehensive\nSelf-contained\nDescribe what has been graphed\nDraw attention to important features\nDescribe conclusions drawn from graph"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-6",
    "href": "slides/2024-09-04-grammarggplot.html#advice-for-plotting-6",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice for Plotting",
    "text": "Advice for Plotting\n\n\n\nBasic plotting\nEliminate superfluous material\nFacilitate comparisons\nChoosing the scale\nHow to make a plot information rich\nCaptions should\nGood Plot Making Practice\n\n\n\nPut major conclusions in graphical form\nProvide reference information\nProof read for clarity and consistency\nGraphing is an iterative process\nMultiplicity is OK, i.e. two plots of the same variable may provide different messages\nMake plots data rich"
  },
  {
    "objectID": "github.html#connecting-your-github-account-to-gradescope",
    "href": "github.html#connecting-your-github-account-to-gradescope",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "Connecting your GitHub account to Gradescope",
    "text": "Connecting your GitHub account to Gradescope\nThe first time you go to submit an assignment on Gradescope, you will be asked to connect to GitHub. Here are the steps to follow to make that connection:\n\nAccess Gradescope from Canvas: From Canvas, click on Gradescope in the Course Navigation menu. You will be asked to authorize the Gradescope integration.\nNavigate to Gradescope.com: In a new tab (same browser), navigate to https://www.gradescope.com/. Gradescope should recognize your student user account from the Canvas integration.\nGo to Gradescope Account Settings: Click on Account (bottom left of the screen) and then Edit Account.\n\n\n\n\n\n\nChange your Gradescope account settings.\n\n\n\n\nThis will take you to your Account Settings in Gradescope. Here, you’ll have the option to verify your Pomona email address and set up a password.\n\nLink Your GitHub Account to Gradescope: Scroll to the bottom of the page to the Link External Account menu. Click on Link a GitHub account.\n\n\n\n\n\n\nLinking GitHub to Gradescope.\n\n\n\n\nYou’ll be prompted to authorize GitHub and connect it to Gradescope. In the drop-down menu under Repositories, be sure to select “Public and private” to enable full access.\n\n\n\n\n\nAuthorizing Gradescope to talk to GitHub.\n\n\n\n\nWhen prompted, log in to your GitHub account to complete the process (I don’t know if you need your PAT or your “Go(ubs!” password, try both!).\nAfter your accounts have been linked, you’ll see a message that says “Successfully authenticated with GitHub.”\n\n\n\n\n\nSuccessful integration of GitHub and Gradescope\n\n\n\n\n\nReturn to Canvas & Verify the Connection\n\nNow, you can return to Canvas and navigate back to Gradescope. If you are returning to your previous tab, you may need to refresh the page to make sure your account settings are updated.\nClick on your programming assignment in Gradescope. Verify that the GitHub connection is working, and that you can see a list of your GitHub files in the drop-down menu when you are submitting an assignment.\n\n\n\n\n\nSubmitting HW from GitHub to Gradescope."
  },
  {
    "objectID": "github.html#submitting-assignments-after-having-connected-to-github",
    "href": "github.html#submitting-assignments-after-having-connected-to-github",
    "title": "Working on assignments with GitHub and Gradescope",
    "section": "Submitting assignments after having connected to GitHub",
    "text": "Submitting assignments after having connected to GitHub\nTo submit your assignment, complete the following steps:\n\nVia Canvas, access the course’s Gradescope site, select the appropriate assignment, and then choose GitHub as the submission method.\nSelect the appropriate GitHub repository. The branch will always be “main”.\n\nYou can submit multiple times before the deadline. Your last submission will determine your grade.\nOnce assignments are completely graded, you will be able to see your grade and assignment feedback on Gradescope. Grades will also be synced with Canvas.\n\n:::"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#overplotting",
    "href": "slides/2024-09-04-grammarggplot.html#overplotting",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Overplotting",
    "text": "Overplotting\n\nggplot(data = NHANES,\n       aes(x = Height, y = Weight)) +\n  geom_point() + \n  facet_grid( Gender ~ PregnantNow )"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#layers",
    "href": "slides/2024-09-04-grammarggplot.html#layers",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Layers",
    "text": "Layers\nLayer 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births))"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#layers-1",
    "href": "slides/2024-09-04-grammarggplot.html#layers-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Layers",
    "text": "Layers\nLayer 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point()"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#layers-2",
    "href": "slides/2024-09-04-grammarggplot.html#layers-2",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Layers",
    "text": "Layers\nLayer 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78, \n       aes(x = date, y = births)) + \n  geom_point() +\n  labs(title = \"US Births in 1978\")"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-11",
    "href": "slides/2024-09-04-grammarggplot.html#how-do-we-make-this-plot-11",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "How do we make this plot?",
    "text": "How do we make this plot?\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = Births78,\n       aes(x = date,\n           y = births)) + \n  geom_line(aes(color = wday)) +      \n  geom_point(color = \"navy\")  +         \n  labs(title = \"US Births in 1978\")\n\n\nggplot() establishes the default data and aesthetics for the geoms, but each geom may change these defaults.\ngood practice: put into ggplot() the things that affect all (or most) of the layers; put the rest in geom_XXXX()"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#what-does-a-data-set-look-like",
    "href": "slides/2024-09-09-wrangling.html#what-does-a-data-set-look-like",
    "title": "Working with Data in R",
    "section": "What does a data set look like?",
    "text": "What does a data set look like?\n\nObservations down the rows\nVariables across the columns\nFlat file versus relational database."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#active-duty-military",
    "href": "slides/2024-09-09-wrangling.html#active-duty-military",
    "title": "Working with Data in R",
    "section": "Active Duty Military",
    "text": "Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#tidy-packages-the-tidyverse",
    "href": "slides/2024-09-09-wrangling.html#tidy-packages-the-tidyverse",
    "title": "Working with Data in R",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#reading-in-data-from-a-file",
    "href": "slides/2024-09-09-wrangling.html#reading-in-data-from-a-file",
    "title": "Working with Data in R",
    "section": "Reading in data from a file",
    "text": "Reading in data from a file\nHosted online:\n\nmovies &lt;- read_csv(\"http://pages.pomona.edu/~jsh04747/courses/math58/Math58Data/movies2.csv\")\n\nHosted locally:\n\nmovies &lt;- read_csv(\"movies2.csv\")\n\nThings to note:\n\nThe assign arrow is used to create objects in R, which are stored in your environment.\nObject names don’t have to correspond to file names.\nBe sure R knows where to look for the file!"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#viewing-data---the-viewer-environment",
    "href": "slides/2024-09-09-wrangling.html#viewing-data---the-viewer-environment",
    "title": "Working with Data in R",
    "section": "Viewing data - the viewer / Environment",
    "text": "Viewing data - the viewer / Environment\n\nView() can be used in RStudio to bring up an excel-style spreadsheet. Only for viewing, not editing!\nThe dimensions of the data are found in the environment pane.\nThe names of the variables are seen at the top of the viewer.\nView() has a capital letter V.\nView() should not be used in the Quarto document."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#viewing-data---inside-.rmd-the-console",
    "href": "slides/2024-09-09-wrangling.html#viewing-data---inside-.rmd-the-console",
    "title": "Working with Data in R",
    "section": "Viewing data - inside .Rmd / the console",
    "text": "Viewing data - inside .Rmd / the console\n\nhead() can be used to print the first several lines of the dataset to the console.\ndim() can be used to find the dimensions (rows then columns).\nnames() can be used to find the names of the variables."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice",
    "href": "slides/2024-09-09-wrangling.html#practice",
    "title": "Working with Data in R",
    "section": "Practice",
    "text": "Practice\n\nWhat are the dimensions of the data set?\nWhat are the variables?\nWhat appears to be the unit of observation?\n\n\ndim(movies)\n\n[1] 134   5\n\nnames(movies)\n\n[1] \"...1\"        \"score2\"      \"rating2\"     \"genre2\"      \"box office2\"\n\nhead(movies,3)\n\n# A tibble: 3 × 5\n  ...1             score2 rating2 genre2     `box office2`\n  &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;\n1 2 Fast 2 Furious   48.9 PG-13   action             127. \n2 28 Days Later      78.2 R       horror              45.1\n3 A Guy Thing        39.5 PG-13   rom comedy          15.5"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#reading-in-data-from-a-package",
    "href": "slides/2024-09-09-wrangling.html#reading-in-data-from-a-package",
    "title": "Working with Data in R",
    "section": "Reading in data from a package",
    "text": "Reading in data from a package\nFor now, we’ll work with all flights out of the three NYC airports in 2013.\n\nDownload and install the package from CRAN (done in the Console, only once).\n\n\ninstall.packages(\"nycflights13\")\n\n\nLoad the package (in the .qmd file, need it for the .qmd file to compile appropriately).\n\n\nlibrary(nycflights13)\n\n\nMake the data set visible.\n\n\ndata(flights)\n\n\nGet help.\n\n\n?flights"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#dplyr",
    "href": "slides/2024-09-09-wrangling.html#dplyr",
    "title": "Working with Data in R",
    "section": "dplyr",
    "text": "dplyr\n\nWhenever you’re learning a new tool, for a long time you’re going to suck … but the good news is that is typical, that’s something that happens to everyone, and it’s only temporary.\n\n-Hadley Wickham"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#why-dplyr",
    "href": "slides/2024-09-09-wrangling.html#why-dplyr",
    "title": "Working with Data in R",
    "section": "Why dplyr?",
    "text": "Why dplyr?\nData sets are often of high volume (lots of rows) and high variety (lots of columns). This is overwhelming to visualize and analyze, so we find ourselves chopping the data set up into more manageable and meaningful chunks. We also often need to perform operations to organize and clean our data.\nThis is all possible in base R, but with dplyr, it is simple, readable, and fast."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#some-basic-verbs",
    "href": "slides/2024-09-09-wrangling.html#some-basic-verbs",
    "title": "Working with Data in R",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\ndistinct()\nmutate()\nsummarize()\nsample_n()"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#filter",
    "href": "slides/2024-09-09-wrangling.html#filter",
    "title": "Working with Data in R",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#constructing-filters",
    "href": "slides/2024-09-09-wrangling.html#constructing-filters",
    "title": "Working with Data in R",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-1",
    "href": "slides/2024-09-09-wrangling.html#practice-1",
    "title": "Working with Data in R",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#arrange",
    "href": "slides/2024-09-09-wrangling.html#arrange",
    "title": "Working with Data in R",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(arr_delay))"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#select",
    "href": "slides/2024-09-09-wrangling.html#select",
    "title": "Working with Data in R",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#distinct",
    "href": "slides/2024-09-09-wrangling.html#distinct",
    "title": "Working with Data in R",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#mutate",
    "href": "slides/2024-09-09-wrangling.html#mutate",
    "title": "Working with Data in R",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)\n\n# A tibble: 336,776 × 4\n   flight dep_delay arr_delay  gain\n    &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1   1545         2        11    -9\n 2   1714         4        20   -16\n 3   1141         2        33   -31\n 4    725        -1       -18    17\n 5    461        -6       -25    19\n 6   1696        -4        12   -16\n 7    507        -5        19   -24\n 8   5708        -3       -14    11\n 9     79        -3        -8     5\n10    301        -2         8   -10\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#summarize-and-sample_n",
    "href": "slides/2024-09-09-wrangling.html#summarize-and-sample_n",
    "title": "Working with Data in R",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  delay\n  &lt;dbl&gt;\n1  12.6\n\nsample_n(flights, 10)\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     2     4     2306           2250        16     2357           2353\n 2  2013    11    12     1221           1215         6     1409           1445\n 3  2013     9    21      939            940        -1     1211           1235\n 4  2013    11    19      727            730        -3      830            844\n 5  2013     8    15      651            655        -4      942            930\n 6  2013     7     8     1015           1025       -10     1204           1222\n 7  2013     7    30     1159           1200        -1     1318           1310\n 8  2013     7    11     1743           1735         8     2018           2030\n 9  2013     5    20     2114           2117        -3     2335           2351\n10  2013     2    24     1443           1445        -2     1652           1710\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-2",
    "href": "slides/2024-09-09-wrangling.html#practice-2",
    "title": "Working with Data in R",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-3",
    "href": "slides/2024-09-09-wrangling.html#practice-3",
    "title": "Working with Data in R",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#group_by",
    "href": "slides/2024-09-09-wrangling.html#group_by",
    "title": "Working with Data in R",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#group_by-1",
    "href": "slides/2024-09-09-wrangling.html#group_by-1",
    "title": "Working with Data in R",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum count avg_speed\n   &lt;chr&gt;   &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA      1      501.\n 2 N315AS      1      499.\n 3 N654UA      1      499.\n 4 N819AW      1      490.\n 5 N382HA     26      486.\n 6 N388HA     36      484.\n 7 N391HA     21      484.\n 8 N777UA      1      483.\n 9 N385HA     28      483.\n10 N392HA     13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#chaining",
    "href": "slides/2024-09-09-wrangling.html#chaining",
    "title": "Working with Data in R",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#mornings",
    "href": "slides/2024-09-09-wrangling.html#mornings",
    "title": "Working with Data in R",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#mornings-1",
    "href": "slides/2024-09-09-wrangling.html#mornings-1",
    "title": "Working with Data in R",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#morning",
    "href": "slides/2024-09-09-wrangling.html#morning",
    "title": "Working with Data in R",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#mornings-2",
    "href": "slides/2024-09-09-wrangling.html#mornings-2",
    "title": "Working with Data in R",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#mornings-3",
    "href": "slides/2024-09-09-wrangling.html#mornings-3",
    "title": "Working with Data in R",
    "section": "Mornings",
    "text": "Mornings\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-4",
    "href": "slides/2024-09-09-wrangling.html#practice-4",
    "title": "Working with Data in R",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and each carrier’s mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-5",
    "href": "slides/2024-09-09-wrangling.html#practice-5",
    "title": "Working with Data in R",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))\n\n# A tibble: 16 × 2\n   carrier avg_delay\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-again",
    "href": "slides/2024-09-09-wrangling.html#practice-again",
    "title": "Working with Data in R",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-again-1",
    "href": "slides/2024-09-09-wrangling.html#practice-again-1",
    "title": "Working with Data in R",
    "section": "Practice again",
    "text": "Practice again\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)\n\nSay you’re curious about the relationship between the number of flights each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#visualizing-the-data",
    "href": "slides/2024-09-09-wrangling.html#visualizing-the-data",
    "title": "Working with Data in R",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#relational-data-multiple-data-frames",
    "href": "slides/2024-09-09-wrangling.html#relational-data-multiple-data-frames",
    "title": "Working with Data in R",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#joining-two-or-more-dataframes",
    "href": "slides/2024-09-09-wrangling.html#joining-two-or-more-dataframes",
    "title": "Working with Data in R",
    "section": "Joining two (or more) dataframes:",
    "text": "Joining two (or more) dataframes:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#women-in-science",
    "href": "slides/2024-09-09-wrangling.html#women-in-science",
    "title": "Working with Data in R",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\nExample from DataScience in a Box"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#inputs",
    "href": "slides/2024-09-09-wrangling.html#inputs",
    "title": "Working with Data in R",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                                  \n  &lt;chr&gt;              &lt;chr&gt;                                                      \n1 Ada Lovelace       first computer algorithm                                   \n2 Marie Curie        theory of radioactivity,  discovery of elements polonium a…\n3 Janaki Ammal       hybrid species, biodiversity protection                    \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta decy, Wu expe…\n5 Katherine Johnson  calculations of orbital mechanics critical to sending the …\n6 Vera Rubin         existence of dark matter                                   \n7 Gladys West        mathematical modeling of the shape of the Earth which serv…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of its genes…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a ground-breaking…"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#desired-output",
    "href": "slides/2024-09-09-wrangling.html#desired-output",
    "title": "Working with Data in R",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#inputs-reminder",
    "href": "slides/2024-09-09-wrangling.html#inputs-reminder",
    "title": "Working with Data in R",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#setup",
    "href": "slides/2024-09-09-wrangling.html#setup",
    "title": "Working with Data in R",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#left_join",
    "href": "slides/2024-09-09-wrangling.html#left_join",
    "title": "Working with Data in R",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#left_join-1",
    "href": "slides/2024-09-09-wrangling.html#left_join-1",
    "title": "Working with Data in R",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#right_join",
    "href": "slides/2024-09-09-wrangling.html#right_join",
    "title": "Working with Data in R",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#right_join-1",
    "href": "slides/2024-09-09-wrangling.html#right_join-1",
    "title": "Working with Data in R",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#full_join",
    "href": "slides/2024-09-09-wrangling.html#full_join",
    "title": "Working with Data in R",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#full_join-1",
    "href": "slides/2024-09-09-wrangling.html#full_join-1",
    "title": "Working with Data in R",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#inner_join",
    "href": "slides/2024-09-09-wrangling.html#inner_join",
    "title": "Working with Data in R",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#inner_join-1",
    "href": "slides/2024-09-09-wrangling.html#inner_join-1",
    "title": "Working with Data in R",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                            \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                                \n1 Janaki Ammal             1897       1984 hybrid species, biodiversity protect…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioact…\n3 Katherine Johnson        1918       2020 calculations of orbital mechanics cr…\n4 Vera Rubin               1928       2016 existence of dark matter             \n5 Gladys West              1930         NA mathematical modeling of the shape o…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cre…\n7 Jennifer Doudna          1964         NA one of the primary developers of CRI…"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#semi_join",
    "href": "slides/2024-09-09-wrangling.html#semi_join",
    "title": "Working with Data in R",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#semi_join-1",
    "href": "slides/2024-09-09-wrangling.html#semi_join-1",
    "title": "Working with Data in R",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#anti_join",
    "href": "slides/2024-09-09-wrangling.html#anti_join",
    "title": "Working with Data in R",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#anti_join-1",
    "href": "slides/2024-09-09-wrangling.html#anti_join-1",
    "title": "Working with Data in R",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#putting-it-altogether",
    "href": "slides/2024-09-09-wrangling.html#putting-it-altogether",
    "title": "Working with Data in R",
    "section": "Putting it altogether",
    "text": "Putting it altogether\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2024-09-09-wrangling.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Working with Data in R",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#join-to-merge-two-datasets",
    "href": "slides/2024-09-09-wrangling.html#join-to-merge-two-datasets",
    "title": "Working with Data in R",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#purrr-for-functional-programming",
    "href": "slides/2024-09-09-wrangling.html#purrr-for-functional-programming",
    "title": "Working with Data in R",
    "section": "purrr for functional programming",
    "text": "purrr for functional programming\n.pull-left[ The map functions are named by the output the produce. For example:\n\nmap(.x, .f) is the main mapping function and returns a list\nmap_df(.x, .f) returns a data frame\nmap_dbl(.x, .f) returns a numeric (double) vector\nmap_chr(.x, .f) returns a character vector\nmap_lgl(.x, .f) returns a logical vector ]\n\n.pull-right[\n\n]\nNote that the first argument is always the data object and the second object is always the function you want to iteratively apply to each element in the input object.\nInput\nThe input to a map function is always either a vector (like a column), a list (which can be non-rectangular), or a dataframe (like a rectangle).\nA list is a way to hold things which might be very different in shape:\n\na_list &lt;- list(a_number = 5,\n                      a_vector = c(\"a\", \"b\", \"c\"),\n                      a_dataframe = data.frame(a = 1:3, \n                                               b = c(\"q\", \"b\", \"z\"), \n                                               c = c(\"bananas\", \"are\", \"so very great\")))\n\na_list\n\n$a_number\n[1] 5\n\n$a_vector\n[1] \"a\" \"b\" \"c\"\n\n$a_dataframe\n  a b             c\n1 1 q       bananas\n2 2 b           are\n3 3 z so very great\n\n\nOutput\n\nadd_ten &lt;- function(x) {\n  return(x + 10)\n  }\n\nWe can map() the add_ten() function across a vector. Note that the output is a list (the default).\n\nlibrary(tidyverse)\nmap(.x = c(2, 5, 10),\n    .f = add_ten)\n\n[[1]]\n[1] 12\n\n[[2]]\n[1] 15\n\n[[3]]\n[1] 20\n\n\nOutput & Input\nWhat if we use a different type of input? The default behavior is to still return a list!\n\ndata.frame(a = 2, b = 5, c = 10) |&gt; \n  map(add_ten)\n\n$a\n[1] 12\n\n$b\n[1] 15\n\n$c\n[1] 20\n\n\nWhat if we want a different type of output? We use a different map() function, map_df(), for example.\n\ndata.frame(a = 2, b = 5, c = 10) |&gt; \n  map_df(add_ten)\n\n# A tibble: 1 × 3\n      a     b     c\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    12    15    20\n\n\nShorthand\nShorthand lets us get away from pre-defining the function (which will be useful). Use the tilde ~ to indicate that you have a function:\n\ndata.frame(a = 2, b = 5, c = 10) |&gt; \n  map_df(~{.x + 10})\n\n# A tibble: 1 × 3\n      a     b     c\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    12    15    20\n\n\nShorthand in more complex settings\n\nlibrary(palmerpenguins)\nlibrary(broom)\n\npenguins_split &lt;- split(penguins, penguins$species)\npenguins_split |&gt;\n  map(~ lm(body_mass_g ~ flipper_length_mm, data = .x)) |&gt;\n  map_df(tidy)  # map(tidy)\n\n# A tibble: 6 × 5\n  term              estimate std.error statistic  p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)        -2536.     965.       -2.63 9.48e- 3\n2 flipper_length_mm     32.8      5.08      6.47 1.34e- 9\n3 (Intercept)        -3037.     997.       -3.05 3.33e- 3\n4 flipper_length_mm     34.6      5.09      6.79 3.75e- 9\n5 (Intercept)        -6787.    1093.       -6.21 7.65e- 9\n6 flipper_length_mm     54.6      5.03     10.9  1.33e-19\n\npenguins |&gt;\n  group_by(species) |&gt;\n  group_map(~lm(body_mass_g ~ flipper_length_mm, data = .x)) |&gt;\n  map(tidy)  # map_df(tidy)\n\n[[1]]\n# A tibble: 2 × 5\n  term              estimate std.error statistic       p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)        -2536.     965.       -2.63 0.00948      \n2 flipper_length_mm     32.8      5.08      6.47 0.00000000134\n\n[[2]]\n# A tibble: 2 × 5\n  term              estimate std.error statistic       p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)        -3037.     997.       -3.05 0.00333      \n2 flipper_length_mm     34.6      5.09      6.79 0.00000000375\n\n[[3]]\n# A tibble: 2 × 5\n  term              estimate std.error statistic  p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)        -6787.    1093.       -6.21 7.65e- 9\n2 flipper_length_mm     54.6      5.03     10.9  1.33e-19"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#lubridate",
    "href": "slides/2024-09-09-wrangling.html#lubridate",
    "title": "Working with Data in R",
    "section": "lubridate",
    "text": "lubridate\nlubridate is a another R package meant for data wrangling!\nIn particular, lubridate makes it very easy to work with days, times, and dates. The base idea is to start with dates in a ymd (year month day) format and transform the information into whatever you want.\nExample from the lubridate vignette."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#basics-in-lubridate",
    "href": "slides/2024-09-09-wrangling.html#basics-in-lubridate",
    "title": "Working with Data in R",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nlibrary(lubridate)\nrightnow &lt;- now()\n\nday(rightnow)\n\n[1] 11\n\nweek(rightnow)\n\n[1] 37\n\nmonth(rightnow, label=FALSE)\n\n[1] 9\n\nmonth(rightnow, label=TRUE)\n\n[1] Sep\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\nyear(rightnow)\n\n[1] 2024"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#basics-in-lubridate-1",
    "href": "slides/2024-09-09-wrangling.html#basics-in-lubridate-1",
    "title": "Working with Data in R",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nminute(rightnow)\n\n[1] 14\n\nhour(rightnow)\n\n[1] 10\n\nyday(rightnow)\n\n[1] 255\n\nmday(rightnow)\n\n[1] 11\n\nwday(rightnow, label=FALSE)\n\n[1] 4\n\nwday(rightnow, label=TRUE)\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#but-how-do-i-create-a-date-object",
    "href": "slides/2024-09-09-wrangling.html#but-how-do-i-create-a-date-object",
    "title": "Working with Data in R",
    "section": "But how do I create a date object?",
    "text": "But how do I create a date object?\n\njan31 &lt;- ymd(\"2021-01-31\")\njan31 + months(0:11)\n\n [1] \"2021-01-31\" NA           \"2021-03-31\" NA           \"2021-05-31\"\n [6] NA           \"2021-07-31\" \"2021-08-31\" NA           \"2021-10-31\"\n[11] NA           \"2021-12-31\"\n\nfloor_date(jan31, \"month\") + months(0:11) + days(31)\n\n [1] \"2021-02-01\" \"2021-03-04\" \"2021-04-01\" \"2021-05-02\" \"2021-06-01\"\n [6] \"2021-07-02\" \"2021-08-01\" \"2021-09-01\" \"2021-10-02\" \"2021-11-01\"\n[11] \"2021-12-02\" \"2022-01-01\"\n\njan31 + months(0:11) + days(31)\n\n [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n[11] NA           \"2022-01-31\"\n\njan31 %m+% months(0:11)\n\n [1] \"2021-01-31\" \"2021-02-28\" \"2021-03-31\" \"2021-04-30\" \"2021-05-31\"\n [6] \"2021-06-30\" \"2021-07-31\" \"2021-08-31\" \"2021-09-30\" \"2021-10-31\"\n[11] \"2021-11-30\" \"2021-12-31\""
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#nyc-flights",
    "href": "slides/2024-09-09-wrangling.html#nyc-flights",
    "title": "Working with Data in R",
    "section": "NYC flights",
    "text": "NYC flights\n\nlibrary(nycflights13)\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#nyc-flights-1",
    "href": "slides/2024-09-09-wrangling.html#nyc-flights-1",
    "title": "Working with Data in R",
    "section": "NYC flights",
    "text": "NYC flights\n\nflightsWK &lt;- flights |&gt;  \n   mutate(ymdday = ymd(paste(year, month,day, sep=\"-\"))) |&gt; \n   mutate(weekdy = wday(ymdday, label=TRUE), \n          whichweek = week(ymdday)) \n\nflightsWK |&gt;  select(year, month, day, ymdday, weekdy, whichweek, \n                     dep_time, arr_time, air_time) \n\n# A tibble: 336,776 × 9\n    year month   day ymdday     weekdy whichweek dep_time arr_time air_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;date&gt;     &lt;ord&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n 1  2013     1     1 2013-01-01 Tue            1      517      830      227\n 2  2013     1     1 2013-01-01 Tue            1      533      850      227\n 3  2013     1     1 2013-01-01 Tue            1      542      923      160\n 4  2013     1     1 2013-01-01 Tue            1      544     1004      183\n 5  2013     1     1 2013-01-01 Tue            1      554      812      116\n 6  2013     1     1 2013-01-01 Tue            1      554      740      150\n 7  2013     1     1 2013-01-01 Tue            1      555      913      158\n 8  2013     1     1 2013-01-01 Tue            1      557      709       53\n 9  2013     1     1 2013-01-01 Tue            1      557      838      140\n10  2013     1     1 2013-01-01 Tue            1      558      753      138\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#reprex",
    "href": "slides/2024-09-09-wrangling.html#reprex",
    "title": "Working with Data in R",
    "section": "reprex",
    "text": "reprex\n\nHelp me help you\n\nreproducible example …\nStep 1. Copy code onto the clipboard\nStep 2. Type reprex() into the Console\nStep 3. Look at the Viewer to the right. Copy the Viewer output into GitHub, Piazza, Discord, an email, stackexchange, etc."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#reprex-demo",
    "href": "slides/2024-09-09-wrangling.html#reprex-demo",
    "title": "Working with Data in R",
    "section": "reprex demo",
    "text": "reprex demo\nreprex(\n  jan31 + months(0:11) + days(31)\n)\nmultiple lines of code:\nreprex({\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n})\nreprex({\n  library(lubridate)\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n})"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#viewing-data---inside-.qmd-the-console",
    "href": "slides/2024-09-09-wrangling.html#viewing-data---inside-.qmd-the-console",
    "title": "Working with Data in R",
    "section": "Viewing data - inside .qmd / the console",
    "text": "Viewing data - inside .qmd / the console\n\ndim() is used to find the dimensions (rows x columns).\nnames() is used to find the names of the variables.\nhead() is used to print the first several lines of the dataset to the console."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#solution",
    "href": "slides/2024-09-09-wrangling.html#solution",
    "title": "Working with Data in R",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo",
    "href": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo",
    "title": "Working with Data in R",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-1",
    "href": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-1",
    "title": "Working with Data in R",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-2",
    "href": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-2",
    "title": "Working with Data in R",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-3",
    "href": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-3",
    "title": "Working with Data in R",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-4",
    "href": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-4",
    "title": "Working with Data in R",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-5",
    "href": "slides/2024-09-09-wrangling.html#little-bunny-foo-foo-5",
    "title": "Working with Data in R",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#flights",
    "href": "slides/2024-09-09-wrangling.html#flights",
    "title": "Working with Data in R",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#solution-1",
    "href": "slides/2024-09-09-wrangling.html#solution-1",
    "title": "Working with Data in R",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2024-09-09-wrangling.html#from-wide-to-long-and-long-to-wide",
    "title": "Working with Data in R",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the dataframe “longer” – many columns into a few columns (more rows): pivot_longer(data, cols,  names_to = , value_to = )\npivot_wider() makes the dataframe “wider” – a few columns into many columns (fewer rows): pivot_wider(data, names_from = , values_from = )"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2024-09-09-wrangling.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Working with Data in R",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_longer",
    "href": "slides/2024-09-09-wrangling.html#pivot_longer",
    "title": "Working with Data in R",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF\n\n# A tibble: 260 × 38\n   Adult (15+) literacy rate …¹ `1975` `1976` `1977` `1978` `1979` `1980` `1981`\n   &lt;chr&gt;                         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Afghanistan                      NA     NA     NA     NA   4.99   NA       NA\n 2 Albania                          NA     NA     NA     NA  NA      NA       NA\n 3 Algeria                          NA     NA     NA     NA  NA      NA       NA\n 4 Andorra                          NA     NA     NA     NA  NA      NA       NA\n 5 Angola                           NA     NA     NA     NA  NA      NA       NA\n 6 Anguilla                         NA     NA     NA     NA  NA      NA       NA\n 7 Antigua and Barbuda              NA     NA     NA     NA  NA      NA       NA\n 8 Argentina                        NA     NA     NA     NA  NA      93.6     NA\n 9 Armenia                          NA     NA     NA     NA  NA      NA       NA\n10 Aruba                            NA     NA     NA     NA  NA      NA       NA\n# ℹ 250 more rows\n# ℹ abbreviated name: ¹​`Adult (15+) literacy rate (%). Female`\n# ℹ 30 more variables: `1982` &lt;dbl&gt;, `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;,\n#   `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;, `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;,\n#   `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, `1993` &lt;dbl&gt;, `1994` &lt;dbl&gt;, `1995` &lt;dbl&gt;,\n#   `1996` &lt;dbl&gt;, `1997` &lt;dbl&gt;, `1998` &lt;dbl&gt;, `1999` &lt;dbl&gt;, `2000` &lt;dbl&gt;,\n#   `2001` &lt;dbl&gt;, `2002` &lt;dbl&gt;, `2003` &lt;dbl&gt;, `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, …"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_longer-1",
    "href": "slides/2024-09-09-wrangling.html#pivot_longer-1",
    "title": "Working with Data in R",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  select(country = starts_with(\"Adult\"), everything()) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF\n\n# A tibble: 571 × 3\n   country     year  litRateF\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt;\n 1 Afghanistan 1979      4.99\n 2 Afghanistan 2011     13   \n 3 Albania     2001     98.3 \n 4 Albania     2008     94.7 \n 5 Albania     2011     95.7 \n 6 Algeria     1987     35.8 \n 7 Algeria     2002     60.1 \n 8 Algeria     2006     63.9 \n 9 Angola      2001     54.2 \n10 Angola      2011     58.6 \n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_longer-2",
    "href": "slides/2024-09-09-wrangling.html#pivot_longer-2",
    "title": "Working with Data in R",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP\n\n# A tibble: 7,988 × 3\n   country year    gdp\n   &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;\n 1 Albania 1980  1061.\n 2 Albania 1981  1100.\n 3 Albania 1982  1111.\n 4 Albania 1983  1101.\n 5 Albania 1984  1065.\n 6 Albania 1985  1060.\n 7 Albania 1986  1092.\n 8 Albania 1987  1054.\n 9 Albania 1988  1014.\n10 Albania 1989  1092.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_wider",
    "href": "slides/2024-09-09-wrangling.html#pivot_wider",
    "title": "Working with Data in R",
    "section": "pivot_wider",
    "text": "pivot_wider\npivot_wider will be demonstrated using the babynames dataset.\n\nlibrary(babynames)\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#left",
    "href": "slides/2024-09-09-wrangling.html#left",
    "title": "Working with Data in R",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_wider-babynames",
    "href": "slides/2024-09-09-wrangling.html#pivot_wider-babynames",
    "title": "Working with Data in R",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt; \n  pivot_wider(names_from = sex, values_from = n) \n\n# A tibble: 1,756,284 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  1880 Mary       7065    27\n 2  1880 Anna       2604    12\n 3  1880 Emma       2003    10\n 4  1880 Elizabeth  1939     9\n 5  1880 Minnie     1746     9\n 6  1880 Margaret   1578    NA\n 7  1880 Ida        1472     8\n 8  1880 Alice      1414    NA\n 9  1880 Bertha     1320    NA\n10  1880 Sarah      1288    NA\n# ℹ 1,756,274 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_wider-babynames-1",
    "href": "slides/2024-09-09-wrangling.html#pivot_wider-babynames-1",
    "title": "Working with Data in R",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  filter(!is.na(F), !is.na(M)) |&gt; \n  arrange(desc(year), desc(F))\n\n# A tibble: 168,381 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  2017 Emma      19738    14\n 2  2017 Olivia    18632    10\n 3  2017 Ava       15902    12\n 4  2017 Isabella  15100    12\n 5  2017 Sophia    14831    17\n 6  2017 Mia       13437    16\n 7  2017 Charlotte 12893     7\n 8  2017 Amelia    11800    11\n 9  2017 Evelyn    10675    11\n10  2017 Abigail   10551     6\n# ℹ 168,371 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#pivot_wider-babynames-2",
    "href": "slides/2024-09-09-wrangling.html#pivot_wider-babynames-2",
    "title": "Working with Data in R",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  mutate(maxcount = pmax(F, M, na.rm = TRUE)) |&gt; \n  arrange(desc(maxcount))\n\n# A tibble: 1,924,653 × 6\n    year name      prop     F     M maxcount\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;\n 1  1947 Linda   0.0548 99686    NA    99686\n 2  1948 Linda   0.0552 96209    NA    96209\n 3  1947 James   0.0510    NA 94756    94756\n 4  1957 Michael 0.0424    NA 92695    92695\n 5  1947 Robert  0.0493    NA 91642    91642\n 6  1949 Linda   0.0518 91016    NA    91016\n 7  1956 Michael 0.0423    NA 90620    90620\n 8  1958 Michael 0.0420    NA 90520    90520\n 9  1948 James   0.0497    NA 88588    88588\n10  1954 Michael 0.0428    NA 88514    88514\n# ℹ 1,924,643 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#right",
    "href": "slides/2024-09-09-wrangling.html#right",
    "title": "Working with Data in R",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#inner",
    "href": "slides/2024-09-09-wrangling.html#inner",
    "title": "Working with Data in R",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#full",
    "href": "slides/2024-09-09-wrangling.html#full",
    "title": "Working with Data in R",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#if-anyone-drove-a-time-machine-they-would-crash",
    "href": "slides/2024-09-09-wrangling.html#if-anyone-drove-a-time-machine-they-would-crash",
    "title": "Working with Data in R",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive. Consider a simple operation: January 31st + one month."
  },
  {
    "objectID": "slides/2024-09-09-wrangling.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "href": "slides/2024-09-09-wrangling.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "title": "Working with Data in R",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive. Consider a simple operation: January 31st + one month.\nShould the answer be:\n\nFebruary 31st (which doesn’t exist)\nMarch 4th (31 days after January 31), or\nFebruary 28th (assuming its not a leap year)\n\nA basic property of arithmetic is that a + b - b = a. Only solution 1 obeys the mathematical property, but it is an invalid date. Wickham wants to make lubridate as consistent as possible by invoking the following rule: if adding or subtracting a month or a year creates an invalid date, lubridate will return an NA. \nIf you thought solution 2 or 3 was more useful, no problem. You can still get those results with clever arithmetic, or by using the special %m+% and %m-% operators. %m+% and %m-% automatically roll dates back to the last day of the month, should that be necessary."
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html",
    "href": "posts/2024-09-09-wrangling/index.html",
    "title": "3. Wrangling",
    "section": "",
    "text": "Artwork by @allison_horst."
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html#agenda",
    "href": "posts/2024-09-09-wrangling/index.html#agenda",
    "title": "3. Wrangling",
    "section": "Agenda ",
    "text": "Agenda \n\nSeptember 9 + 11, 2024\n\nTidy data\nData verbs\n\n\n\nSeptember 16, 2024\n\nRelational data (_join)\npivoting\n\n\n\nSeptember 18, 2024\n\nmapping"
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html#readings",
    "href": "posts/2024-09-09-wrangling/index.html#readings",
    "title": "3. Wrangling",
    "section": "Readings ",
    "text": "Readings \n\nClass notes: Data Wrangling\nWickham (2017) Data transformation and Tidy data in R for Data Science.\nIf you aren’t super comfortable with R yet, check out Workflow: basics in R for Data Science."
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html#reflection-questions",
    "href": "posts/2024-09-09-wrangling/index.html#reflection-questions",
    "title": "3. Wrangling",
    "section": "Reflection questions ",
    "text": "Reflection questions \n\nHow and why is |&gt; used? And how is it different from the layering symbol + used in ggplot()?\nWhat are the main data wrangling verbs?\nHow do you distinguish the different _join functions? Are the _join keys formatted in the same way across the two datasets? Are the data recorded in the same way (e.g., is age birthday or age at recording?) ?\nWhat are some of the ways to distinguish a data verb from a typical function?"
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html#ethics-considerations",
    "href": "posts/2024-09-09-wrangling/index.html#ethics-considerations",
    "title": "3. Wrangling",
    "section": "Ethics considerations ",
    "text": "Ethics considerations \n\nWhat is Jan 31 plus one month? And why does it matter that every analysis we do is a series of decisions? Keeping in mind that each of us might make a different decision, and all decisions have consequences."
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html#slides",
    "href": "posts/2024-09-09-wrangling/index.html#slides",
    "title": "3. Wrangling",
    "section": "Slides ",
    "text": "Slides \n\nIn class slides for both 9/9/24 and 9/11/24.\nIn class slides for both 9/16/24.\nIn class slides for both 9/18/24.\nWS4 - verbs\nWS5 - joins\nWS6 - mapping"
  },
  {
    "objectID": "posts/2024-09-09-wrangling/index.html#additional-resources",
    "href": "posts/2024-09-09-wrangling/index.html#additional-resources",
    "title": "3. Wrangling",
    "section": "Additional Resources ",
    "text": "Additional Resources \n\nPosit cheatsheets\ntidyverse vignettes\npivoting\n\n\n:::"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#what-does-a-data-set-look-like",
    "href": "slides/2024-09-09-verbs.html#what-does-a-data-set-look-like",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "What does a data set look like?",
    "text": "What does a data set look like?\n\nObservations down the rows\nVariables across the columns\nFlat file versus relational database."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#active-duty-military",
    "href": "slides/2024-09-09-verbs.html#active-duty-military",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Active Duty Military",
    "text": "Active Duty Military\nThe Active Duty data are not tidy! What are the cases? How are the data not tidy? What might the data look like in tidy form? Suppose that the case was “an individual in the armed forces.” What variables would you use to capture the information in the following table?"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#tidy-packages-the-tidyverse",
    "href": "slides/2024-09-09-verbs.html#tidy-packages-the-tidyverse",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Tidy packages: the tidyverse",
    "text": "Tidy packages: the tidyverse\n\nimage credit: https://www.tidyverse.org/."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#reading-in-data-from-a-file",
    "href": "slides/2024-09-09-verbs.html#reading-in-data-from-a-file",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Reading in data from a file",
    "text": "Reading in data from a file\nHosted online:\n\nmovies &lt;- read_csv(\"http://pages.pomona.edu/~jsh04747/courses/math58/Math58Data/movies2.csv\")\n\nHosted locally:\n\nmovies &lt;- read_csv(\"movies2.csv\")\n\nThings to note:\n\nThe assign arrow is used to create objects in R, which are stored in your environment.\nObject names don’t have to correspond to file names.\nBe sure R knows where to look for the file!"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#viewing-data---the-viewer-environment",
    "href": "slides/2024-09-09-verbs.html#viewing-data---the-viewer-environment",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Viewing data - the viewer / Environment",
    "text": "Viewing data - the viewer / Environment\n\nView() can be used in RStudio to bring up an excel-style spreadsheet. Only for viewing, not editing!\nThe dimensions of the data are found in the environment pane.\nThe names of the variables are seen at the top of the viewer.\nView() has a capital letter V.\nView() should not be used in the Quarto document."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#viewing-data---inside-.qmd-the-console",
    "href": "slides/2024-09-09-verbs.html#viewing-data---inside-.qmd-the-console",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Viewing data - inside .qmd / the console",
    "text": "Viewing data - inside .qmd / the console\n\ndim() is used to find the dimensions (rows x columns).\nnames() is used to find the names of the variables.\nhead() is used to print the first several lines of the dataset to the console."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice",
    "href": "slides/2024-09-09-verbs.html#practice",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice",
    "text": "Practice\n\nWhat are the dimensions of the data set?\nWhat are the variables?\nWhat appears to be the unit of observation?\n\n\ndim(movies)\n\n[1] 134   5\n\nnames(movies)\n\n[1] \"...1\"        \"score2\"      \"rating2\"     \"genre2\"      \"box office2\"\n\nhead(movies,3)\n\n# A tibble: 3 × 5\n  ...1             score2 rating2 genre2     `box office2`\n  &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;\n1 2 Fast 2 Furious   48.9 PG-13   action             127. \n2 28 Days Later      78.2 R       horror              45.1\n3 A Guy Thing        39.5 PG-13   rom comedy          15.5"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#reading-in-data-from-a-package",
    "href": "slides/2024-09-09-verbs.html#reading-in-data-from-a-package",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Reading in data from a package",
    "text": "Reading in data from a package\nFor now, we’ll work with all flights out of the three NYC airports in 2013.\n\nDownload and install the package from CRAN (done in the Console, only once).\n\n\ninstall.packages(\"nycflights13\")\n\n\nLoad the package (in the .qmd file, need it for the .qmd file to compile appropriately).\n\n\nlibrary(nycflights13)\n\n\nMake the data set visible.\n\n\ndata(flights)\n\n\nGet help.\n\n\n?flights"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#dplyr",
    "href": "slides/2024-09-09-verbs.html#dplyr",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "dplyr",
    "text": "dplyr\n\nWhenever you’re learning a new tool, for a long time you’re going to suck … but the good news is that is typical, that’s something that happens to everyone, and it’s only temporary.\n\n-Hadley Wickham"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#why-dplyr",
    "href": "slides/2024-09-09-verbs.html#why-dplyr",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Why dplyr?",
    "text": "Why dplyr?\nData sets are often of high volume (lots of rows) and high variety (lots of columns). This is overwhelming to visualize and analyze, so we find ourselves chopping the data set up into more manageable and meaningful chunks. We also often need to perform operations to organize and clean our data.\nThis is all possible in base R, but with dplyr, it is simple, readable, and fast."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#some-basic-verbs",
    "href": "slides/2024-09-09-verbs.html#some-basic-verbs",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Some Basic Verbs",
    "text": "Some Basic Verbs\n\nfilter()\narrange()\nselect()\ndistinct()\nmutate()\nsummarize()\nsample_n()"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#filter",
    "href": "slides/2024-09-09-verbs.html#filter",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "filter()",
    "text": "filter()\nAllows you to select a subset of the rows of a data frame. The first argument is the name of the data frame, the following arguments are the filters that you’d like to apply\nFor all flights on January 1st:\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#constructing-filters",
    "href": "slides/2024-09-09-verbs.html#constructing-filters",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Constructing filters",
    "text": "Constructing filters\nFilters are constructed of logical operators: &lt;, &gt;, &lt;=, &gt;=, ==, != (and some others).\nAdding them one by one to filter() is akin to saying “this AND that”. To say “this OR that OR both”, use |.\n\nfilter(flights, month == 1 | month == 2)\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice-1",
    "href": "slides/2024-09-09-verbs.html#practice-1",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice",
    "text": "Practice\nConstruct filters to isolate:\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#solution",
    "href": "slides/2024-09-09-verbs.html#solution",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Solution",
    "text": "Solution\n\nFlights that left on St. Patrick’s Day.\nFlights that were destined for Chicago’s primary airport.\nFlights that were destined for Chicago’s primary airport and were operated by United Airlines.\nFlights with flight times more than 2000 miles or that were in the air more than 5 hours.\n\n\nfilter(flights, month == 3, day == 17)\nfilter(flights, dest == \"ORD\")\nfilter(flights, dest == \"ORD\", carrier == \"UA\")\nfilter(flights, distance &gt; 2000 | air_time &gt; 5*60)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#arrange",
    "href": "slides/2024-09-09-verbs.html#arrange",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "arrange()",
    "text": "arrange()\narrange() reorders the rows: It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\narrange(flights, year, month, day)\n\nUse desc() to sort in descending order.\n\narrange(flights, desc(arr_delay))"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#select",
    "href": "slides/2024-09-09-verbs.html#select",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "select()",
    "text": "select()\nOften you work with large datasets with many columns where only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\nselect(flights, year, month, day)\n\nYou can exclude columns using - and specify a range using :.\n\nselect(flights, -(year:day))"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#distinct",
    "href": "slides/2024-09-09-verbs.html#distinct",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "distinct()",
    "text": "distinct()\nA common use of select() is to find out which values a set of variables takes. This is particularly useful in conjunction with the distinct() verb which only returns the unique values in a table.\nWhat do the following data correspond to?\n\ndistinct(select(flights, origin, dest))\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#mutate",
    "href": "slides/2024-09-09-verbs.html#mutate",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "mutate()",
    "text": "mutate()\nAs well as selecting from the set of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nselect(mutate(flights, gain = dep_delay - arr_delay), \n       flight, dep_delay, arr_delay, gain)\n\n# A tibble: 336,776 × 4\n   flight dep_delay arr_delay  gain\n    &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1   1545         2        11    -9\n 2   1714         4        20   -16\n 3   1141         2        33   -31\n 4    725        -1       -18    17\n 5    461        -6       -25    19\n 6   1696        -4        12   -16\n 7    507        -5        19   -24\n 8   5708        -3       -14    11\n 9     79        -3        -8     5\n10    301        -2         8   -10\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#summarize-and-sample_n",
    "href": "slides/2024-09-09-verbs.html#summarize-and-sample_n",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "summarize() and sample_n()",
    "text": "summarize() and sample_n()\nsummarize() collapses a data frame to a single row based on some function. It’s not very useful yet, but it will be.\nsample_n() provides you with a random sample of rows.\n\nsummarize(flights, delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  delay\n  &lt;dbl&gt;\n1  12.6\n\nsample_n(flights, 10)\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     2     4     1004           1000         4     1203           1209\n 2  2013     2    10     2032           1916        76     2147           2038\n 3  2013     2    17      702            705        -3      947           1005\n 4  2013     8     6     2002           1940        22     2144           2142\n 5  2013     7     9     1312           1315        -3     1552           1607\n 6  2013    11    28      751            754        -3      906            911\n 7  2013     2     6      710            715        -5      958           1027\n 8  2013     4    12     1525           1453        32     1830           1751\n 9  2013     9    22      812            800        12     1106           1110\n10  2013     7    12      908            910        -2     1153           1215\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice-2",
    "href": "slides/2024-09-09-verbs.html#practice-2",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice-3",
    "href": "slides/2024-09-09-verbs.html#practice-3",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice",
    "text": "Practice\nMutate the data to create a new column that contains the average speed traveled by the plane for each flight.\nSelect the new variable and save it, along with tailnum, as a new data frame object.\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\nspeed_data &lt;- select(flights2, tailnum, speed)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#group_by",
    "href": "slides/2024-09-09-verbs.html#group_by",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "group_by()",
    "text": "group_by()\nsummarize() and sample_n() are even more powerful when combined with the idea of “group by”, repeating the operation separately on groups of observations within the dataset.\nThe group_by() function describes how to break a dataset down into groups of rows."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#group_by-1",
    "href": "slides/2024-09-09-verbs.html#group_by-1",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "group_by()",
    "text": "group_by()\nFind the fastest airplanes in the bunch, measured as the average speed per airplane.\n\nby_tailnum &lt;- group_by(speed_data, tailnum)\navg_speed &lt;- summarize(by_tailnum, \n                       count = n(), \n                       avg_speed = mean(speed, na.rm = TRUE))\narrange(avg_speed, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum count avg_speed\n   &lt;chr&gt;   &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA      1      501.\n 2 N315AS      1      499.\n 3 N654UA      1      499.\n 4 N819AW      1      490.\n 5 N382HA     26      486.\n 6 N388HA     36      484.\n 7 N391HA     21      484.\n 8 N777UA      1      483.\n 9 N385HA     28      483.\n10 N392HA     13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#chaining",
    "href": "slides/2024-09-09-verbs.html#chaining",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Chaining",
    "text": "Chaining\nInstead of applying each verb step-by-step, we can chain them into a single data pipeline, connected with the |&gt; operator. You start the pipeline with a data frame and then pass it to each function in turn.\nThe pipe syntax (|&gt;) takes a data frame and sends it to the argument of a function. The mapping goes to the first available argument in the function. For example:\nx |&gt;  f() is the same as f(x)\nx |&gt;  f(y) is the same as f(x, y)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#mornings",
    "href": "slides/2024-09-09-verbs.html#mornings",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Mornings",
    "text": "Mornings\n\nme_step1 &lt;- dress(me, what = sports)  \nme_step2 &lt;- exercise(me_step1, how = running)  \nme_step3 &lt;- eat(me_step2, choice = cereal)  \nme_step4 &lt;- dress(me_step3, what = school)  \nme_step5 &lt;- commute(me_step4, transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#mornings-1",
    "href": "slides/2024-09-09-verbs.html#mornings-1",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Mornings",
    "text": "Mornings\n\ncommute(dress(eat(exercise(dress(me, what = sports), how = running), choice = cereal), what = school), transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#morning",
    "href": "slides/2024-09-09-verbs.html#morning",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Morning",
    "text": "Morning\n(better??)\n\ncommute(\n  dress(\n    eat(\n      exercise(\n        dress(me, \n              what = sports), \n        how = running), \n      choice = cereal), \n    what = school), \n  transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#mornings-2",
    "href": "slides/2024-09-09-verbs.html#mornings-2",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Mornings",
    "text": "Mornings\n\nme |&gt; \n  dress(what = sports) |&gt; \n  exercise(how = running) |&gt; \n  eat(choice = cereal) |&gt; \n  dress(what = school) |&gt; \n  commute(transportation = bike)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#little-bunny-foo-foo",
    "href": "slides/2024-09-09-verbs.html#little-bunny-foo-foo",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nFrom Hadley Wickham, how to think about tidy data.\n\nLittle bunny Foo Foo\n\n\nWent hopping through the forest\n\n\nScooping up the field mice\n\n\nAnd bopping them on the head"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-1",
    "href": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-1",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nThe nursery rhyme could be created by a series of steps where the output from each step is saved as an object along the way.\n\nfoo_foo &lt;- little_bunny()\nfoo_foo_1 &lt;- hop(foo_foo, through = forest)\nfoo_foo_2 &lt;- scoop(foo_foo_2, up = field_mice)\nfoo_foo_3 &lt;- bop(foo_foo_2, on = head)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-2",
    "href": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-2",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nAnother approach is to concatenate the functions so that there is only one output.\n\nbop(\n   scoop(\n      hop(foo_foo, through = forest),\n      up = field_mice),\n   on = head)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-3",
    "href": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-3",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nOr even worse, as one line:\n\nbop(scoop(hop(foo_foo, through = forest), up = field_mice), on = head)))"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-4",
    "href": "slides/2024-09-09-verbs.html#little-bunny-foo-foo-4",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Little Bunny Foo Foo",
    "text": "Little Bunny Foo Foo\nInstead, the code can be written using the pipe in the order in which the function is evaluated:\n\nfoo_foo |&gt; \n   hop(through = forest) |&gt; \n       scoop(up = field_mice) |&gt; \n           bop(on = head)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#flights",
    "href": "slides/2024-09-09-verbs.html#flights",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Flights",
    "text": "Flights\n\nNo pipePipe\n\n\n\nflights2 &lt;- mutate(flights, speed = distance/(air_time/60))\ntail_speed &lt;- select(flights2, tailnum, speed)\ntail_speed_grp &lt;- group_by(tail_speed, tailnum)\ntail_ave &lt;- summarize(tail_speed_grp, number = n(),\n                      avg_speed = mean(speed, na.rm = TRUE))\narrange(tail_ave, desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows\n\n\n\n\n\nflights |&gt; \n  mutate(speed = distance / (air_time/60)) |&gt; \n  select(tailnum, speed) |&gt; \n  group_by(tailnum) |&gt;  \n  summarize(number = n(), \n            avg_speed = mean(speed, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_speed))\n\n# A tibble: 4,044 × 3\n   tailnum number avg_speed\n   &lt;chr&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 N228UA       1      501.\n 2 N315AS       1      499.\n 3 N654UA       1      499.\n 4 N819AW       1      490.\n 5 N382HA      26      486.\n 6 N388HA      36      484.\n 7 N391HA      21      484.\n 8 N777UA       1      483.\n 9 N385HA      28      483.\n10 N392HA      13      482.\n# ℹ 4,034 more rows"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice-4",
    "href": "slides/2024-09-09-verbs.html#practice-4",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and each carrier’s mean departure delay time. Which carriers have the highest and lowest mean delays?"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice-5",
    "href": "slides/2024-09-09-verbs.html#practice-5",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice",
    "text": "Practice\nForm a chain that creates a data frame containing only carrier and the mean departure delay time. Which carriers have the highest and lowest mean delays?\n\nflights |&gt; \n  group_by(carrier) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  arrange(desc(avg_delay))\n\n# A tibble: 16 × 2\n   carrier avg_delay\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 F9          20.2 \n 2 EV          20.0 \n 3 YV          19.0 \n 4 FL          18.7 \n 5 WN          17.7 \n 6 9E          16.7 \n 7 B6          13.0 \n 8 VX          12.9 \n 9 OO          12.6 \n10 UA          12.1 \n11 MQ          10.6 \n12 DL           9.26\n13 AA           8.59\n14 AS           5.80\n15 HA           4.90\n16 US           3.78"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#practice-again",
    "href": "slides/2024-09-09-verbs.html#practice-again",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Practice again",
    "text": "Practice again\nSay you’re curious about the relationship between the number of flights that each plane made in 2013, the mean distance that each of those planes flew, and the mean arrival delay. You also want to exclude the edge cases from your analysis, so focus on the planes that have logged more than 20 flights and flown an average distance of less than 2000 miles. Please form the chain that creates this dataset."
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#solution-1",
    "href": "slides/2024-09-09-verbs.html#solution-1",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Solution",
    "text": "Solution\n\ndelay_data &lt;- flights |&gt; \n  group_by(tailnum) |&gt; \n  summarize(number = n(),\n            dist = mean(distance, na.rm = TRUE), \n            delay = mean(arr_delay, na.rm = TRUE)) |&gt; \n  filter(number &gt; 20, dist &lt; 2000)"
  },
  {
    "objectID": "slides/2024-09-09-verbs.html#visualizing-the-data",
    "href": "slides/2024-09-09-verbs.html#visualizing-the-data",
    "title": "Wrangling Data I Tidy Verbs",
    "section": "Visualizing the data",
    "text": "Visualizing the data\n\nVizCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndelay_data |&gt; \n ggplot(aes(dist, delay)) +\n geom_point(aes(size = number), \n            alpha = 1/2) +\n geom_smooth() +\n scale_size_area()\n\nWhen scale_size_area is used, the default behavior is to scale the area of points to be proportional to the value."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "href": "slides/2024-09-16-pivotjoin.html#from-wide-to-long-and-long-to-wide",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide\n\npivot_longer() makes the dataframe “longer” – many columns into a few columns (more rows): pivot_longer(data, cols,  names_to = , value_to = )\npivot_wider() makes the dataframe “wider” – a few columns into many columns (fewer rows): pivot_wider(data, names_from = , values_from = )"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "href": "slides/2024-09-16-pivotjoin.html#from-wide-to-long-and-long-to-wide-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "From wide to long and long to wide",
    "text": "From wide to long and long to wide"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_longer",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_longer",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\npivot_longer will be demonstrated using datasets from GapMinder.\nlitF represents country, year, and female literacy rate.\n\nlibrary(googlesheets4)\ngs4_deauth()\nlitF &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0\")\n\nlitF\n\n# A tibble: 260 × 38\n   Adult (15+) literacy rate …¹ `1975` `1976` `1977` `1978` `1979` `1980` `1981`\n   &lt;chr&gt;                         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Afghanistan                      NA     NA     NA     NA   4.99   NA       NA\n 2 Albania                          NA     NA     NA     NA  NA      NA       NA\n 3 Algeria                          NA     NA     NA     NA  NA      NA       NA\n 4 Andorra                          NA     NA     NA     NA  NA      NA       NA\n 5 Angola                           NA     NA     NA     NA  NA      NA       NA\n 6 Anguilla                         NA     NA     NA     NA  NA      NA       NA\n 7 Antigua and Barbuda              NA     NA     NA     NA  NA      NA       NA\n 8 Argentina                        NA     NA     NA     NA  NA      93.6     NA\n 9 Armenia                          NA     NA     NA     NA  NA      NA       NA\n10 Aruba                            NA     NA     NA     NA  NA      NA       NA\n# ℹ 250 more rows\n# ℹ abbreviated name: ¹​`Adult (15+) literacy rate (%). Female`\n# ℹ 30 more variables: `1982` &lt;dbl&gt;, `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;,\n#   `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;, `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;,\n#   `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, `1993` &lt;dbl&gt;, `1994` &lt;dbl&gt;, `1995` &lt;dbl&gt;,\n#   `1996` &lt;dbl&gt;, `1997` &lt;dbl&gt;, `1998` &lt;dbl&gt;, `1999` &lt;dbl&gt;, `2000` &lt;dbl&gt;,\n#   `2001` &lt;dbl&gt;, `2002` &lt;dbl&gt;, `2003` &lt;dbl&gt;, `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, …"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_longer-1",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_longer-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\n\nlitF &lt;- litF |&gt; \n  select(country = starts_with(\"Adult\"), everything()) |&gt; \n  pivot_longer(cols = -country,\n               names_to = \"year\", \n               values_to = \"litRateF\") |&gt; \n  filter(!is.na(litRateF))\n\nlitF\n\n# A tibble: 571 × 3\n   country     year  litRateF\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt;\n 1 Afghanistan 1979      4.99\n 2 Afghanistan 2011     13   \n 3 Albania     2001     98.3 \n 4 Albania     2008     94.7 \n 5 Albania     2011     95.7 \n 6 Algeria     1987     35.8 \n 7 Algeria     2002     60.1 \n 8 Algeria     2006     63.9 \n 9 Angola      2001     54.2 \n10 Angola      2011     58.6 \n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_longer-2",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_longer-2",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_longer",
    "text": "pivot_longer\nGDP represents country, year, and gdp (in fixed 2000 US$).\n\nGDP &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1RctTQmKB0hzbm1E8rGcufYdMshRdhmYdeL29nXqmvsc/pub?gid=0\")\n\nGDP &lt;- GDP |&gt;  \n  select(country = starts_with(\"Income\"), everything()) |&gt; \n  pivot_longer(cols = -country, \n               names_to = \"year\",\n               values_to = \"gdp\") |&gt; \n  filter(!is.na(gdp))\n\nGDP\n\n# A tibble: 7,988 × 3\n   country year    gdp\n   &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;\n 1 Albania 1980  1061.\n 2 Albania 1981  1100.\n 3 Albania 1982  1111.\n 4 Albania 1983  1101.\n 5 Albania 1984  1065.\n 6 Albania 1985  1060.\n 7 Albania 1986  1092.\n 8 Albania 1987  1054.\n 9 Albania 1988  1014.\n10 Albania 1989  1092.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_wider",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_wider",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_wider",
    "text": "pivot_wider\npivot_wider will be demonstrated using the babynames dataset.\n\nlibrary(babynames)\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_wider-babynames",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_wider-babynames",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt; \n  pivot_wider(names_from = sex, values_from = n) \n\n# A tibble: 1,756,284 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  1880 Mary       7065    27\n 2  1880 Anna       2604    12\n 3  1880 Emma       2003    10\n 4  1880 Elizabeth  1939     9\n 5  1880 Minnie     1746     9\n 6  1880 Margaret   1578    NA\n 7  1880 Ida        1472     8\n 8  1880 Alice      1414    NA\n 9  1880 Bertha     1320    NA\n10  1880 Sarah      1288    NA\n# ℹ 1,756,274 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_wider-babynames-1",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_wider-babynames-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  select(-prop) |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  filter(!is.na(F), !is.na(M)) |&gt; \n  arrange(desc(year), desc(F))\n\n# A tibble: 168,381 × 4\n    year name          F     M\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n 1  2017 Emma      19738    14\n 2  2017 Olivia    18632    10\n 3  2017 Ava       15902    12\n 4  2017 Isabella  15100    12\n 5  2017 Sophia    14831    17\n 6  2017 Mia       13437    16\n 7  2017 Charlotte 12893     7\n 8  2017 Amelia    11800    11\n 9  2017 Evelyn    10675    11\n10  2017 Abigail   10551     6\n# ℹ 168,371 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#pivot_wider-babynames-2",
    "href": "slides/2024-09-16-pivotjoin.html#pivot_wider-babynames-2",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "pivot_wider babynames",
    "text": "pivot_wider babynames\n\nbabynames |&gt;  \n  pivot_wider(names_from = sex, values_from = n) |&gt; \n  mutate(maxcount = pmax(F, M, na.rm = TRUE)) |&gt; \n  arrange(desc(maxcount))\n\n# A tibble: 1,924,653 × 6\n    year name      prop     F     M maxcount\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;\n 1  1947 Linda   0.0548 99686    NA    99686\n 2  1948 Linda   0.0552 96209    NA    96209\n 3  1947 James   0.0510    NA 94756    94756\n 4  1957 Michael 0.0424    NA 92695    92695\n 5  1947 Robert  0.0493    NA 91642    91642\n 6  1949 Linda   0.0518 91016    NA    91016\n 7  1956 Michael 0.0423    NA 90620    90620\n 8  1958 Michael 0.0420    NA 90520    90520\n 9  1948 James   0.0497    NA 88588    88588\n10  1954 Michael 0.0428    NA 88514    88514\n# ℹ 1,924,643 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#relational-data-multiple-data-frames",
    "href": "slides/2024-09-16-pivotjoin.html#relational-data-multiple-data-frames",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Relational data (multiple data frames)",
    "text": "Relational data (multiple data frames)\n\nSee the Posit cheatsheets on wrangling & joining and pivoting."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#joining-two-or-more-dataframes",
    "href": "slides/2024-09-16-pivotjoin.html#joining-two-or-more-dataframes",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Joining two (or more) dataframes:",
    "text": "Joining two (or more) dataframes:\n\nleft_join returns all rows from the left table, and any rows with matching keys from the right table.\ninner_join returns only the rows in which the left table have matching keys in the right table (i.e., matching rows in both sets).\nfull_join returns all rows from both tables, join records from the left which have matching keys in the right table.\n\nGood practice: always specify the by argument when joining data frames."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#women-in-science",
    "href": "slides/2024-09-16-pivotjoin.html#women-in-science",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Women in Science",
    "text": "Women in Science\n10 women in science who changed the world (source: Discover Magazine)1\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\nExample from DataScience in a Box"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#inputs",
    "href": "slides/2024-09-16-pivotjoin.html#inputs",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Inputs",
    "text": "Inputs\n\nProfessionsDatesWorks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                                  \n  &lt;chr&gt;              &lt;chr&gt;                                                      \n1 Ada Lovelace       first computer algorithm                                   \n2 Marie Curie        theory of radioactivity,  discovery of elements polonium a…\n3 Janaki Ammal       hybrid species, biodiversity protection                    \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta decy, Wu expe…\n5 Katherine Johnson  calculations of orbital mechanics critical to sending the …\n6 Vera Rubin         existence of dark matter                                   \n7 Gladys West        mathematical modeling of the shape of the Earth which serv…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of its genes…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a ground-breaking…"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#desired-output",
    "href": "slides/2024-09-16-pivotjoin.html#desired-output",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Desired output",
    "text": "Desired output\nWe’d like to put together the data to look like:\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#inputs-reminder",
    "href": "slides/2024-09-16-pivotjoin.html#inputs-reminder",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9\n\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\""
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#setup",
    "href": "slides/2024-09-16-pivotjoin.html#setup",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#left_join",
    "href": "slides/2024-09-16-pivotjoin.html#left_join",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nleft_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#left_join-1",
    "href": "slides/2024-09-16-pivotjoin.html#left_join-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") \n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#right_join",
    "href": "slides/2024-09-16-pivotjoin.html#right_join",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nright_join(x, y, by = \"id\")\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#right_join-1",
    "href": "slides/2024-09-16-pivotjoin.html#right_join-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt; \n  right_join(dates, by = \"name\") \n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947       2020\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#full_join",
    "href": "slides/2024-09-16-pivotjoin.html#full_join",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nfull_join(x, y, by = \"id\")\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#full_join-1",
    "href": "slides/2024-09-16-pivotjoin.html#full_join-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt; \n  full_join(works, by = \"name\") \n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#inner_join",
    "href": "slides/2024-09-16-pivotjoin.html#inner_join",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\ninner_join(x, y, by = \"id\")\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#inner_join-1",
    "href": "slides/2024-09-16-pivotjoin.html#inner_join-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt; \n  inner_join(works, by = \"name\") \n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                            \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                                \n1 Janaki Ammal             1897       1984 hybrid species, biodiversity protect…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioact…\n3 Katherine Johnson        1918       2020 calculations of orbital mechanics cr…\n4 Vera Rubin               1928       2016 existence of dark matter             \n5 Gladys West              1930         NA mathematical modeling of the shape o…\n6 Flossie Wong-Staal       1947       2020 first scientist to clone HIV and cre…\n7 Jennifer Doudna          1964         NA one of the primary developers of CRI…"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#semi_join",
    "href": "slides/2024-09-16-pivotjoin.html#semi_join",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nsemi_join(x, y, by = \"id\")\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#semi_join-1",
    "href": "slides/2024-09-16-pivotjoin.html#semi_join-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "semi_join()",
    "text": "semi_join()\n\ndates |&gt; \n  semi_join(works, by = \"name\") \n\n# A tibble: 7 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947       2020\n7 Jennifer Doudna          1964         NA"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#anti_join",
    "href": "slides/2024-09-16-pivotjoin.html#anti_join",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\n\n\nimage credit: https://www.garrickadenbuie.com/project/tidyexplain/\n\n\n\n\n\n\nanti_join(x, y, by = \"id\")\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#anti_join-1",
    "href": "slides/2024-09-16-pivotjoin.html#anti_join-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "anti_join()",
    "text": "anti_join()\n\ndates |&gt; \n  anti_join(works, by = \"name\") \n\n# A tibble: 1 × 3\n  name              birth_year death_year\n  &lt;chr&gt;                  &lt;dbl&gt;      &lt;dbl&gt;\n1 Rosalind Franklin       1920       1958"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#putting-it-altogether",
    "href": "slides/2024-09-16-pivotjoin.html#putting-it-altogether",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Putting it altogether",
    "text": "Putting it altogether\n\nprofessions |&gt; \n  left_join(dates, by = \"name\") |&gt; \n  left_join(works, by = \"name\")\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947       2020 first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "href": "slides/2024-09-16-pivotjoin.html#practice-litf-and-gdp-from-gapminder.",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "Practice litF and GDP from Gapminder.",
    "text": "Practice litF and GDP from Gapminder."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#left",
    "href": "slides/2024-09-16-pivotjoin.html#left",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "left",
    "text": "left\n\nlitGDPleft &lt;- left_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPleft)\n\n[1] 571   4\n\nlitGDPleft\n\n# A tibble: 571 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 561 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#right",
    "href": "slides/2024-09-16-pivotjoin.html#right",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "right",
    "text": "right\n\nlitGDPright &lt;- right_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPright)\n\n[1] 7988    4\n\nlitGDPright\n\n# A tibble: 7,988 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 7,978 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#inner",
    "href": "slides/2024-09-16-pivotjoin.html#inner",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "inner",
    "text": "inner\n\nlitGDPinner &lt;- inner_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPinner)\n\n[1] 505   4\n\nlitGDPinner\n\n# A tibble: 505 × 4\n   country             year  litRateF   gdp\n   &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Albania             2001      98.3 1282.\n 2 Albania             2008      94.7 1804.\n 3 Albania             2011      95.7 1966.\n 4 Algeria             1987      35.8 1902.\n 5 Algeria             2002      60.1 1872.\n 6 Algeria             2006      63.9 2125.\n 7 Angola              2001      54.2  298.\n 8 Angola              2011      58.6  630.\n 9 Antigua and Barbuda 2001      99.4 9640.\n10 Antigua and Barbuda 2011      99.4 9978.\n# ℹ 495 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#full",
    "href": "slides/2024-09-16-pivotjoin.html#full",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "full",
    "text": "full\n\nlitGDPfull &lt;- full_join(litF, GDP, by=c(\"country\", \"year\"))\ndim(litGDPfull)\n\n[1] 8054    4\n\nlitGDPfull\n\n# A tibble: 8,054 × 4\n   country     year  litRateF   gdp\n   &lt;chr&gt;       &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 1979      4.99   NA \n 2 Afghanistan 2011     13      NA \n 3 Albania     2001     98.3  1282.\n 4 Albania     2008     94.7  1804.\n 5 Albania     2011     95.7  1966.\n 6 Algeria     1987     35.8  1902.\n 7 Algeria     2002     60.1  1872.\n 8 Algeria     2006     63.9  2125.\n 9 Angola      2001     54.2   298.\n10 Angola      2011     58.6   630.\n# ℹ 8,044 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#join-to-merge-two-datasets",
    "href": "slides/2024-09-16-pivotjoin.html#join-to-merge-two-datasets",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "join to merge two datasets",
    "text": "join to merge two datasets\n\nIf you ever need to understand which join is the right join for you, try to find an image that will lay out what the function is doing. I found this one that is quite good and is taken from the Statistics Globe blog."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#lubridate",
    "href": "slides/2024-09-16-pivotjoin.html#lubridate",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "lubridate",
    "text": "lubridate\nlubridate is a another R package meant for data wrangling!\nIn particular, lubridate makes it very easy to work with days, times, and dates. The base idea is to start with dates in a ymd (year month day) format and transform the information into whatever you want.\nExample from the lubridate vignette."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#if-anyone-drove-a-time-machine-they-would-crash",
    "href": "slides/2024-09-16-pivotjoin.html#if-anyone-drove-a-time-machine-they-would-crash",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive. Consider a simple operation: January 31st + one month."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "href": "slides/2024-09-16-pivotjoin.html#if-anyone-drove-a-time-machine-they-would-crash-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "If anyone drove a time machine, they would crash",
    "text": "If anyone drove a time machine, they would crash\nThe length of months and years change so often that doing arithmetic with them can be unintuitive. Consider a simple operation: January 31st + one month.\nShould the answer be:\n\nFebruary 31st (which doesn’t exist)\nMarch 4th (31 days after January 31), or\nFebruary 28th (assuming its not a leap year)\n\nA basic property of arithmetic is that a + b - b = a. Only solution 1 obeys the mathematical property, but it is an invalid date. Wickham wants to make lubridate as consistent as possible by invoking the following rule: if adding or subtracting a month or a year creates an invalid date, lubridate will return an NA. \nIf you thought solution 2 or 3 was more useful, no problem. You can still get those results with clever arithmetic, or by using the special %m+% and %m-% operators. %m+% and %m-% automatically roll dates back to the last day of the month, should that be necessary."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#basics-in-lubridate",
    "href": "slides/2024-09-16-pivotjoin.html#basics-in-lubridate",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nlibrary(lubridate)\nrightnow &lt;- now()\n\nday(rightnow)\n\n[1] 14\n\nweek(rightnow)\n\n[1] 37\n\nmonth(rightnow, label=FALSE)\n\n[1] 9\n\nmonth(rightnow, label=TRUE)\n\n[1] Sep\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\nyear(rightnow)\n\n[1] 2024"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#basics-in-lubridate-1",
    "href": "slides/2024-09-16-pivotjoin.html#basics-in-lubridate-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "basics in lubridate",
    "text": "basics in lubridate\n\nminute(rightnow)\n\n[1] 12\n\nhour(rightnow)\n\n[1] 19\n\nyday(rightnow)\n\n[1] 258\n\nmday(rightnow)\n\n[1] 14\n\nwday(rightnow, label=FALSE)\n\n[1] 7\n\nwday(rightnow, label=TRUE)\n\n[1] Sat\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#but-how-do-i-create-a-date-object",
    "href": "slides/2024-09-16-pivotjoin.html#but-how-do-i-create-a-date-object",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "But how do I create a date object?",
    "text": "But how do I create a date object?\n\njan31 &lt;- ymd(\"2021-01-31\")\njan31 + months(0:11)\n\n [1] \"2021-01-31\" NA           \"2021-03-31\" NA           \"2021-05-31\"\n [6] NA           \"2021-07-31\" \"2021-08-31\" NA           \"2021-10-31\"\n[11] NA           \"2021-12-31\"\n\nfloor_date(jan31, \"month\") + months(0:11) + days(31)\n\n [1] \"2021-02-01\" \"2021-03-04\" \"2021-04-01\" \"2021-05-02\" \"2021-06-01\"\n [6] \"2021-07-02\" \"2021-08-01\" \"2021-09-01\" \"2021-10-02\" \"2021-11-01\"\n[11] \"2021-12-02\" \"2022-01-01\"\n\njan31 + months(0:11) + days(31)\n\n [1] \"2021-03-03\" NA           \"2021-05-01\" NA           \"2021-07-01\"\n [6] NA           \"2021-08-31\" \"2021-10-01\" NA           \"2021-12-01\"\n[11] NA           \"2022-01-31\"\n\njan31 %m+% months(0:11)\n\n [1] \"2021-01-31\" \"2021-02-28\" \"2021-03-31\" \"2021-04-30\" \"2021-05-31\"\n [6] \"2021-06-30\" \"2021-07-31\" \"2021-08-31\" \"2021-09-30\" \"2021-10-31\"\n[11] \"2021-11-30\" \"2021-12-31\""
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#nyc-flights",
    "href": "slides/2024-09-16-pivotjoin.html#nyc-flights",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "NYC flights",
    "text": "NYC flights\n\nlibrary(nycflights13)\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#nyc-flights-1",
    "href": "slides/2024-09-16-pivotjoin.html#nyc-flights-1",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "NYC flights",
    "text": "NYC flights\n\nflightsWK &lt;- flights |&gt;  \n   mutate(ymdday = ymd(paste(year, month,day, sep=\"-\"))) |&gt; \n   mutate(weekdy = wday(ymdday, label=TRUE), \n          whichweek = week(ymdday)) \n\nflightsWK |&gt;  select(year, month, day, ymdday, weekdy, whichweek, \n                     dep_time, arr_time, air_time) \n\n# A tibble: 336,776 × 9\n    year month   day ymdday     weekdy whichweek dep_time arr_time air_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;date&gt;     &lt;ord&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n 1  2013     1     1 2013-01-01 Tue            1      517      830      227\n 2  2013     1     1 2013-01-01 Tue            1      533      850      227\n 3  2013     1     1 2013-01-01 Tue            1      542      923      160\n 4  2013     1     1 2013-01-01 Tue            1      544     1004      183\n 5  2013     1     1 2013-01-01 Tue            1      554      812      116\n 6  2013     1     1 2013-01-01 Tue            1      554      740      150\n 7  2013     1     1 2013-01-01 Tue            1      555      913      158\n 8  2013     1     1 2013-01-01 Tue            1      557      709       53\n 9  2013     1     1 2013-01-01 Tue            1      557      838      140\n10  2013     1     1 2013-01-01 Tue            1      558      753      138\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#reprex",
    "href": "slides/2024-09-16-pivotjoin.html#reprex",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "reprex",
    "text": "reprex\n\nHelp me help you\n\nreproducible example …\nStep 1. Copy code onto the clipboard\nStep 2. Type reprex() into the Console\nStep 3. Look at the Viewer to the right. Copy the Viewer output into GitHub, Piazza, Discord, an email, stackexchange, etc."
  },
  {
    "objectID": "slides/2024-09-16-pivotjoin.html#reprex-demo",
    "href": "slides/2024-09-16-pivotjoin.html#reprex-demo",
    "title": "Wrangling Data II Pivoting and Joining",
    "section": "reprex demo",
    "text": "reprex demo\nreprex(\n  jan31 + months(0:11) + days(31)\n)\nmultiple lines of code:\nreprex({\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n})\nreprex({\n  library(lubridate)\n  jan31 &lt;- ymd(\"2021-01-31\")\n  jan31 + months(0:11) + days(31)\n})"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#preliminaries",
    "href": "slides/2024-09-04-grammarggplot.html#preliminaries",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Preliminaries",
    "text": "Preliminaries\n\nMake the data stand out\nFacilitate comparison\nAdd information\n\n(Nolan and Perrett, 2016)"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#preliminaries-1",
    "href": "slides/2024-09-04-grammarggplot.html#preliminaries-1",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Preliminaries",
    "text": "Preliminaries\nTufte lists two main motivational steps to working with graphics as part of an argument.\n\n“An essential analytic task in making decisions based on evidence is to understand how things work.”\nMaking decisions based on evidence requires the appropriate display of that evidence.”"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#cholera---a-picture-tells-1000-words",
    "href": "slides/2024-09-04-grammarggplot.html#cholera---a-picture-tells-1000-words",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Cholera - a picture tells 1000 words",
    "text": "Cholera - a picture tells 1000 words\n\nHow many aspects of this graph can you point out which are relevant to figuring out that cholera infection was coming from a single pump? Are there any distracting aspects?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#cholera---difficult-to-interpret",
    "href": "slides/2024-09-04-grammarggplot.html#cholera---difficult-to-interpret",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Cholera - difficult to interpret",
    "text": "Cholera - difficult to interpret\n\nWhy would the outbreak already have begun to decline before the pump handle was removed?"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#challenger---problematic",
    "href": "slides/2024-09-04-grammarggplot.html#challenger---problematic",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Challenger - Problematic",
    "text": "Challenger - Problematic\n\nOne of the graphics which was particularly unconvincing in trying to explain that O-rings fail in the cold."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#challenger---better",
    "href": "slides/2024-09-04-grammarggplot.html#challenger---better",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Challenger - Better????",
    "text": "Challenger - Better????\n\nA different graph of the Challenger information, now sorted by temperature"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#challenger---improved",
    "href": "slides/2024-09-04-grammarggplot.html#challenger---improved",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Challenger - Improved",
    "text": "Challenger - Improved\n\nThe graphic the engineers should have led with in trying to persuade the administrators not to launch. It is evident that the number of O-ring failures is quite highly associated with the ambient temperature. Note the vital information on the x-axis associated with the large number of launches at warm temperatures that had zero O-ring failures.Note that the “improved” Challenger graphic was made by Tufte, not by the engineers working on the problem at the time."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#fonts-matter",
    "href": "slides/2024-09-04-grammarggplot.html#fonts-matter",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Fonts matter",
    "text": "Fonts matter"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-on-plotting-specific",
    "href": "slides/2024-09-04-grammarggplot.html#advice-on-plotting-specific",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice on plotting, specific",
    "text": "Advice on plotting, specific\n\nAvoid having other graph elements interfere with data\nUse visually prominent symbols\nAvoid over-plotting (One way to avoid over plotting: jitter the values)\nDifferent values of data may obscure each other\nInclude all or nearly all of the data\nFill data region"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#advice-on-plotting-general",
    "href": "slides/2024-09-04-grammarggplot.html#advice-on-plotting-general",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Advice on plotting, general",
    "text": "Advice on plotting, general\n\nEliminate superfluous material\nFacilitate comparisons\nChoose the best scale\nMake the plot data / information rich\nUse good captions, alt text, conclusions"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#simplify",
    "href": "slides/2024-09-04-grammarggplot.html#simplify",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Simplify",
    "text": "Simplify\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#simplified",
    "href": "slides/2024-09-04-grammarggplot.html#simplified",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Simplified",
    "text": "Simplified\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimage credit: https://www.darkhorseanalytics.com/portfolio-data-looks-better-naked"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#nyt-9721",
    "href": "slides/2024-09-04-grammarggplot.html#nyt-9721",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "NYT 9/7/21",
    "text": "NYT 9/7/21\n\nOne in 5,000, NYT, D. Leonhardt 9/7/21; image credit: https://www.nytimes.com/2021/09/07/briefing/risk-breakthrough-infections-delta.html"
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#worth-a-mention",
    "href": "slides/2024-09-04-grammarggplot.html#worth-a-mention",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Worth a Mention",
    "text": "Worth a Mention\n\n\nW.E.B. Du Bois (1868-1963)\n\nsociologist\ndata scientist]\n\n\n\n\n\n\n\nimage credit: wikipedia\n\n\n\n\n\n\nIn 1900 Du Bois contributed approximately 60 data visualizations to an exhibit at the Exposition Universelle in Paris, an exhibit designed to illustrate the progress made by African Americans since the end of slavery (only 37 years prior, in 1863)."
  },
  {
    "objectID": "slides/2024-09-04-grammarggplot.html#beautiful-informative-graphics",
    "href": "slides/2024-09-04-grammarggplot.html#beautiful-informative-graphics",
    "title": "Data Viz & Introduction to ggplot2",
    "section": "Beautiful & Informative Graphics",
    "text": "Beautiful & Informative Graphics\nhttps://drawingmatter.org/w-e-b-du-bois-visionary-infographics/"
  }
]